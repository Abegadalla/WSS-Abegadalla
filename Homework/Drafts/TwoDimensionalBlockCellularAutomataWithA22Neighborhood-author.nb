(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    424221,       8009]
NotebookOptionsPosition[    416790,       7785]
NotebookOutlinePosition[    418409,       7835]
CellTagsIndexPosition[    418073,       7823]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Two-Dimensional Block Cellular Automata with a 2\[Times]2 Neighborhood\
\>", "DemoTitle",
 CellChangeTimes->{{3.5247219037784376`*^9, 3.5247219203878126`*^9}, {
  3.5247219901651564`*^9, 3.524721997463008*^9}, {3.5247221901925*^9, 
  3.5247221933790236`*^9}, {3.524832934156362*^9, 3.524832957004103*^9}, {
  3.5251823640455837`*^9, 3.525182375442109*^9}}],

Cell["", "InitializationSection"],

Cell[CellGroupData[{

Cell["", "ManipulateSection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SeedRandom", "[", "SR", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"IC1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"RandomReal", "[", "]"}], "<", "p"}], ",", "1", ",", "0"}], 
        "]"}], ",", 
       RowBox[{"{", "40", "}"}], ",", 
       RowBox[{"{", "40", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"IC2", "=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"out", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", "40", "}"}], ",", 
           RowBox[{"{", "40", "}"}]}], "]"}]}], "}"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"out", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"19", ";;", "21"}], ",", 
            RowBox[{"19", ";;", "21"}]}], "]"}], "]"}], "=", "IC9"}], ";", 
        "out"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"IC3", "=", 
     RowBox[{"Normal", "[", 
      RowBox[{"SparseArray", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{"i", ",", "latsize"}], "]"}], "\[Equal]", "0"}], " ", "&&",
             " ", 
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{"j", ",", "latsize"}], "]"}], "\[Equal]", "0"}]}], 
           ")"}]}], "\[Rule]", "1"}], ",", 
        RowBox[{"{", 
         RowBox[{"40", ",", "40"}], "}"}]}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"BCA", "=", 
     RowBox[{"BCA2DEvolveList", "[", 
      RowBox[{
       RowBox[{"GeneralBlockRules", "[", 
        RowBox[{"Round", "[", "rulenum", "]"}], "]"}], ",", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"mode", "\[Equal]", "0"}], ",", "IC1", ",", 
         RowBox[{"mode", "\[Equal]", "1"}], ",", "IC2", ",", 
         RowBox[{"mode", "\[Equal]", "2"}], ",", "IC3"}], "]"}], ",", "100"}],
       "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Dynamic", "@", 
           RowBox[{"ArrayPlot", "[", 
            RowBox[{
             RowBox[{
             "BCA", "\[LeftDoubleBracket]", "t", "\[RightDoubleBracket]"}], 
             ",", 
             RowBox[{"Mesh", "\[Rule]", "m"}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "IS"}], ",", 
             RowBox[{"Frame", "\[Rule]", "False"}]}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"ArrayPlot", "[", 
           RowBox[{
            RowBox[{"Mean", "/@", 
             RowBox[{"Transpose", "/@", "BCA"}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", 
             RowBox[{"Round", "[", 
              RowBox[{
               FractionBox["IS", "100"], "40"}], "]"}]}], ",", 
            RowBox[{
            "ColorFunction", "\[Rule]", "\"\<LightTemperatureMap\>\""}], ",", 
            RowBox[{"Frame", "\[Rule]", "False"}]}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ArrayPlot", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"Mean", "/@", "BCA"}], "]"}], "//", "Reverse"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "IS"}], ",", 
            RowBox[{
            "ColorFunction", "\[Rule]", "\"\<LightTemperatureMap\>\""}], ",", 
            RowBox[{"Frame", "\[Rule]", "False"}]}], "]"}], ",", 
          RowBox[{"ArrayPlot", "[", 
           RowBox[{
            RowBox[{"Mean", "[", "BCA", "]"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", 
             RowBox[{
              RowBox[{"Round", "[", 
               RowBox[{
                FractionBox["IS", "100"], "40"}], "]"}], "+", "1"}]}], ",", 
            RowBox[{
            "ColorFunction", "\[Rule]", "\"\<LightTemperatureMap\>\""}], ",", 
            RowBox[{"Frame", "\[Rule]", "False"}]}], "]"}]}], "}"}]}], 
       "\[IndentingNewLine]", "}"}], ",", 
      RowBox[{"Spacings", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Control", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rulenum", ",", "6271892985061248000", ",", "\"\<rule\>\""}], 
       "}"}], ",", "0", ",", 
      RowBox[{
       SuperscriptBox["16", "16"], "-", "1"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Spacer", "[", "45", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Spacer", "[", "35", "]"}], ",", 
      RowBox[{"Dynamic", "@", 
       RowBox[{"Round", "[", "rulenum", "]"}]}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Spacer", "[", "45", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", "30", ",", "\"\<time\>\""}], "}"}], ",", "1", ",", 
     "100", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m", ",", "False", ",", "\"\<mesh\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"False", "\[Rule]", "\"\<off\>\""}], ",", 
       RowBox[{"True", "\[Rule]", "\"\<on\>\""}]}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", "Delimiter", ",", "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Text", "[", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Initial conditions:\>\"", ",", "Medium"}], "]"}], "]"}], 
      ",", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"mode", ",", "0", ",", "\"\< \>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0", "\[Rule]", "\"\<\>\""}], ",", 
           RowBox[{"1", "\[Rule]", "\"\<\>\""}], ",", 
           RowBox[{"2", "\[Rule]", "\"\<\>\""}]}], "}"}], ",", 
         RowBox[{"Enabled", "\[Rule]", "False"}]}], "}"}], "]"}]}], "}"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"TabView", "[", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"(", "\[IndentingNewLine]", 
       RowBox[{"\"\<Random\>\"", "\[Rule]", 
        RowBox[{"Column", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"p", ",", "0.5", ",", "\"\<density\>\""}], "}"}], 
                 ",", "0", ",", "1", ",", ".01", ",", 
                 RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "}"}], "]"}], 
              ",", 
              RowBox[{"Spacer", "[", "5", "]"}], ",", 
              RowBox[{"Dynamic", "@", "p"}]}], "}"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"SR", ",", "1", ",", "\"\<seed \>\""}], "}"}], ",", 
                 "1", ",", "1000", ",", "1", ",", 
                 RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "}"}], "]"}], 
              ",", 
              RowBox[{"Spacer", "[", "5", "]"}], ",", 
              RowBox[{"Dynamic", "@", "SR"}]}], "}"}], "]"}], ",", 
           RowBox[{"Button", "[", 
            RowBox[{"\"\<Set initials\>\"", ",", 
             RowBox[{"Dynamic", "@", 
              RowBox[{"(", 
               RowBox[{"mode", "=", "0"}], ")"}]}]}], "]"}]}], "}"}], "]"}]}],
        ")"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(", "\[IndentingNewLine]", 
       RowBox[{"\"\<9 cells block\>\"", "\[Rule]", 
        RowBox[{"Column", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"Grid", "[", 
              RowBox[{
               RowBox[{"Array", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Button", "[", 
                   RowBox[{"\"\< \>\"", ",", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"IC9", "[", 
                    RowBox[{"[", "##", "]"}], "]"}], "=", 
                    RowBox[{"1", "-", 
                    RowBox[{"IC9", "[", 
                    RowBox[{"[", "##", "]"}], "]"}]}]}], ")"}], ",", 
                    RowBox[{"Background", "\[Rule]", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"GrayLevel", "[", 
                    RowBox[{"1", "-", 
                    RowBox[{"IC9", "[", 
                    RowBox[{"[", "##", "]"}], "]"}]}], "]"}], "]"}]}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Palette\>\""}]}], 
                   "]"}], "&"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"3", ",", "3"}], "}"}]}], "]"}], ",", 
               RowBox[{"Spacings", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{".2", ",", ".4"}], "}"}]}], ",", 
               RowBox[{"Frame", "\[Rule]", "All"}], ",", 
               RowBox[{"FrameStyle", "\[Rule]", 
                RowBox[{"Directive", "[", "Gray", "]"}]}]}], "]"}], "}"}], 
            "]"}], ",", 
           RowBox[{"Button", "[", 
            RowBox[{"\"\<Set initials\>\"", ",", 
             RowBox[{"Dynamic", "@", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"mode", "=", "0"}], ";", 
                RowBox[{"mode", "=", "1"}]}], ")"}]}]}], "]"}]}], "}"}], 
         "]"}]}], ")"}], ",", "\[IndentingNewLine]", " ", 
      RowBox[{"\"\<Lattice\>\"", "\[Rule]", 
       RowBox[{"Column", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Control", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"latsize", ",", "4", ",", "\"\<Size\>\""}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "4", ",", "8", ",", "20"}], "}"}]}],
             "}"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{"Button", "[", 
             RowBox[{"\"\<Set initials\>\"", ",", 
              RowBox[{"Dynamic", "@", 
               RowBox[{"(", 
                RowBox[{"mode", "=", "2"}], ")"}]}]}], "]"}], "}"}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], "]"}]}]}], "}"}], "]"}], " ", ",", 
   "\[IndentingNewLine]", "Delimiter", ",", "\[IndentingNewLine]", 
   RowBox[{"Text", "[", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Density:\>\"", ",", "Medium"}], "]"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{"Dynamic", "@", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"NumOfBlack", "/@", "BCA"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "}"}], "]"}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"IC9", ",", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", "3", "}"}], ",", 
         RowBox[{"{", "3", "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"BCA", ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ControlPlacement", "\[Rule]", "Left"}], ",", 
   RowBox[{"TrackedSymbols", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameMargins", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"AutorunSequencing", "\[Rule]", " ", 
    RowBox[{"{", "1", "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Initialization", "\[RuleDelayed]", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"IS", "=", "300"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"GeneralBlockRules", "[", "rule_", "]"}], ":=", 
       RowBox[{"MapThread", "[", 
        RowBox[{"Rule", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"IntegerDigits", "[", 
                 RowBox[{"rule", ",", "16", ",", "16"}], "]"}], "+", "1"}], 
               "]"}], "]"}]}], "}"}], "&"}], "@", 
          RowBox[{"Sort", "[", 
           RowBox[{"Tuples", "[", 
            RowBox[{
             RowBox[{"Tuples", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", "0"}], "}"}], ",", "2"}], "]"}], ",", "2"}],
             "]"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"BCA2DStep", "[", 
        RowBox[{"rule_", ",", "a_", ",", "d_"}], "]"}], ":=", 
       RowBox[{"RotateRight", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"RotateRight", "[", 
            RowBox[{"#", ",", "d"}], "]"}], "&"}], "/@", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Join", "@@", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Join", "[", 
                  RowBox[{
                   RowBox[{"Sequence", "@@", "#"}], ",", "2"}], "]"}], "&"}], 
                " ", ",", "#", ",", 
                RowBox[{"{", "1", "}"}]}], "]"}]}], "&"}], " ", "[", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Partition", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"RotateLeft", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"RotateLeft", "[", 
                    RowBox[{"#", ",", "d"}], "]"}], "&"}], " ", "/@", "a"}], 
                 ",", "d"}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"2", ",", "2"}], "}"}]}], "]"}], "/.", 
             "\[InvisibleSpace]", "rule"}], "]"}], ")"}]}], 
         "\[IndentingNewLine]", ",", "d"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"BCA2DEvolveList", "[", 
        RowBox[{"rule_", ",", "init_", ",", "t_"}], "]"}], ":=", 
       RowBox[{"FoldList", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"BCA2DStep", "[", 
           RowBox[{"rule", ",", "#1", ",", "#2"}], "]"}], "&"}], ",", "init", 
         ",", 
         RowBox[{"Range", "[", "t", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"NumOfBlack", "[", "s_", "]"}], ":=", 
       RowBox[{
        RowBox[{"Apply", "[", 
         RowBox[{"Plus", ",", "s", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "]"}], "/", 
        SuperscriptBox[
         RowBox[{"Length", "[", "s", "]"}], "2"]}]}]}], "\[IndentingNewLine]",
      ")"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Bookmarks", "\[Rule]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
      "\"\<1. Reversible isotropic rule: Twisted star\>\"", "\[RuleDelayed]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"IC9", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ";", 
          RowBox[{"mode", "=", "1"}]}], ",", 
         RowBox[{"rulenum", "=", "261861251725805535"}], ",", 
         RowBox[{"t", "=", "82"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
      "\"\<2. Reversible isotropic rule: Flower\>\"", "\[RuleDelayed]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"IC9", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ";", 
          RowBox[{"mode", "=", "1"}]}], ",", 
         RowBox[{"rulenum", "=", "261861260315283135"}], ",", 
         RowBox[{"t", "=", "100"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
      "\"\<3. Reversible isotropic rule: Particle beams radiator\>\"", 
       "\[RuleDelayed]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"IC9", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ";", 
          RowBox[{"mode", "=", "1"}]}], ",", 
         RowBox[{"rulenum", "=", "261583088162540415"}], ",", 
         RowBox[{"t", "=", "40"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
      "\"\<4. Reversible isotropic rule: One particle radiator\>\"", 
       "\[RuleDelayed]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"IC9", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ";", 
          RowBox[{"mode", "=", "1"}]}], ",", 
         RowBox[{"rulenum", "=", "261583058097638895"}], ",", 
         RowBox[{"t", "=", "34"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
      "\"\<5. Reversible isotropic rule: Randomness\>\"", "\[RuleDelayed]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"IC9", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ";", 
          RowBox[{"mode", "=", "1"}]}], ",", 
         RowBox[{"rulenum", "=", "261583083867180735"}], ",", 
         RowBox[{"t", "=", "49"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
      "\"\<6. Reversible isotropic rule: Radiating mass\>\"", 
       "\[RuleDelayed]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"IC9", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ";", 
          RowBox[{"mode", "=", "1"}]}], ",", 
         RowBox[{"rulenum", "=", "261861234545741295"}], ",", 
         RowBox[{"t", "=", "80"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
      "\"\<7. Reversible isotropic rule: Regular behaviour\>\"", 
       "\[RuleDelayed]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"IC9", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ";", 
          RowBox[{"mode", "=", "1"}]}], ",", 
         RowBox[{"rulenum", "=", "1068396996939006495"}], ",", 
         RowBox[{"t", "=", "30"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
      "\"\<8. Reversible non-isotropic rule: Chessboard generated by \
mass\>\"", " ", "\[RuleDelayed]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"IC9", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ";", 
          RowBox[{"mode", "=", "1"}]}], ",", 
         RowBox[{"rulenum", "=", "1047822631656183375"}], ",", 
         RowBox[{"t", "=", "26"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
      "\"\<9. Irreversible isotropic rule: Claster generation\>\"", " ", 
       "\[RuleDelayed]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"mode", "=", "0"}], ",", 
         RowBox[{"p", "=", "0.6"}], ",", 
         RowBox[{"SR", "=", "1"}], ",", 
         RowBox[{"rulenum", "=", "286968494657535"}], ",", 
         RowBox[{"t", "=", "49"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
      "\"\<10. Irreversible isotropic rule: Drifting clusters\>\"", " ", 
       "\[RuleDelayed]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"mode", "=", "0"}], ",", 
         RowBox[{"p", "=", "0.37"}], ",", 
         RowBox[{"SR", "=", "428"}], ",", 
         RowBox[{"rulenum", "=", "2540967335796735"}], ",", 
         RowBox[{"t", "=", "30"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
      "\"\<11. Reversible isotropic rule: Random diamond in frame\>\"", 
       "\[RuleDelayed]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"IC9", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ";", 
          RowBox[{"mode", "=", "1"}]}], ",", 
         RowBox[{"rulenum", "=", "1068967613401572495"}], ",", 
         RowBox[{"t", "=", "19"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
      "\"\<12. Reversible isotropic rule: Triangle\>\"", "\[RuleDelayed]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"IC9", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ";", 
          RowBox[{"mode", "=", "1"}]}], ",", 
         RowBox[{"rulenum", "=", "264401286749934735"}], ",", 
         RowBox[{"t", "=", "33"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
      "\"\<13. Reversible isotropic rule: Randomness in frame\>\"", 
       "\[RuleDelayed]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"IC9", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ";", 
          RowBox[{"mode", "=", "1"}]}], ",", 
         RowBox[{"rulenum", "=", "263551407201589215"}], ",", 
         RowBox[{"t", "=", "43"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
      "\"\<14. Reversible isotropic rule: 4 particles\>\"", "\[RuleDelayed]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"IC9", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ";", 
          RowBox[{"mode", "=", "1"}]}], ",", 
         RowBox[{"rulenum", "=", "261583294270638975"}], ",", 
         RowBox[{"t", "=", "11"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
      "\"\<15. Reversible non-isotropic rule: Randomness evalution\>\"", " ", 
       "\[RuleDelayed]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"IC9", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ";", 
          RowBox[{"mode", "=", "1"}]}], ",", 
         RowBox[{"rulenum", "=", "14520071049273749310"}], ",", 
         RowBox[{"t", "=", "21"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
      "\"\<16. Irreversible isotropic rule: Prime particles\>\"", " ", 
       "\[RuleDelayed]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"IC9", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ";", 
          RowBox[{"mode", "=", "1"}]}], ",", 
         RowBox[{"rulenum", "=", "20590133722848127"}], ",", 
         RowBox[{"t", "=", "30"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
      "\"\<17. Irreversible non-isotropic rule: Ordering\>\"", " ", 
       "\[RuleDelayed]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"mode", "=", "0"}], ",", 
         RowBox[{"p", "=", "0.37"}], ",", 
         RowBox[{"SR", "=", "428"}], ",", 
         RowBox[{"rulenum", "=", "20589927564417919"}], ",", 
         RowBox[{"t", "=", "30"}]}], "}"}]}]}], "\[IndentingNewLine]", 
     "}"}]}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.520056547356449*^9, {3.5200566238208227`*^9, 3.5200566642601357`*^9}, {
   3.5200566962949677`*^9, 3.520056699893174*^9}, {3.5219712244296875`*^9, 
   3.5219712260146484`*^9}, {3.5219713085283203`*^9, 3.52197134565625*^9}, {
   3.521971485826172*^9, 3.521971500044922*^9}, {3.5245673708847656`*^9, 
   3.5245674332773438`*^9}, {3.5245682648251953`*^9, 
   3.5245682902822266`*^9}, {3.52456832303125*^9, 3.524568361564453*^9}, {
   3.524568489852539*^9, 3.5245684902871094`*^9}, {3.524568577439453*^9, 
   3.5245686089658203`*^9}, 3.5245693565751953`*^9, {3.5245694237695312`*^9, 
   3.5245694453291016`*^9}, {3.524569537993164*^9, 3.5245695429384766`*^9}, {
   3.5245696025126953`*^9, 3.5245696027060547`*^9}, {3.52483381910751*^9, 
   3.52483382370597*^9}, {3.526057871651681*^9, 3.5260578999342465`*^9}, {
   3.526059876333708*^9, 3.526060080068143*^9}, 3.526060152846199*^9},
 CellID->268501739],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`BCA$$ = CompressedData["
1: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
6RHPzf8F0XwNrw==
    "], $CellContext`IC9$$ = {{0, 0, 0}, {0, 0, 0}, {0, 0, 
    0}}, $CellContext`latsize$$ = 4, $CellContext`m$$ = 
    False, $CellContext`mode$$ = 0, $CellContext`p$$ = 
    0.5, $CellContext`rulenum$$ = 6271892985061248000, $CellContext`SR$$ = 
    1, $CellContext`t$$ = 30, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"1. Reversible isotropic rule: Twisted star\"" :> {$CellContext`IC9$$ = \
{{1, 1, 0}, {1, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 261861251725805535, $CellContext`t$$ = 
       82}, "\"2. Reversible isotropic rule: Flower\"" :> {$CellContext`IC9$$ = \
{{1, 1, 0}, {1, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 261861260315283135, $CellContext`t$$ = 
       100}, "\"3. Reversible isotropic rule: Particle beams radiator\"" :> \
{$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 261583088162540415, $CellContext`t$$ = 
       40}, "\"4. Reversible isotropic rule: One particle radiator\"" :> \
{$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 261583058097638895, $CellContext`t$$ = 
       34}, "\"5. Reversible isotropic rule: Randomness\"" :> \
{$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 261583083867180735, $CellContext`t$$ = 
       49}, "\"6. Reversible isotropic rule: Radiating mass\"" :> \
{$CellContext`IC9$$ = {{0, 0, 1}, {0, 0, 0}, {1, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 261861234545741295, $CellContext`t$$ = 
       80}, "\"7. Reversible isotropic rule: Regular behaviour\"" :> \
{$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 1068396996939006495, $CellContext`t$$ = 
       30}, "\"8. Reversible non-isotropic rule: Chessboard generated by mass\
\"" :> {$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 
         0}}; $CellContext`mode$$ = 1, $CellContext`rulenum$$ = 
       1047822631656183375, $CellContext`t$$ = 26}, 
     "\"9. Irreversible isotropic rule: Claster generation\"" :> \
{$CellContext`mode$$ = 0, $CellContext`p$$ = 0.6, $CellContext`SR$$ = 
       1, $CellContext`rulenum$$ = 286968494657535, $CellContext`t$$ = 49}, 
     "\"10. Irreversible isotropic rule: Drifting clusters\"" :> \
{$CellContext`mode$$ = 0, $CellContext`p$$ = 0.37, $CellContext`SR$$ = 
       428, $CellContext`rulenum$$ = 2540967335796735, $CellContext`t$$ = 30},
      "\"11. Reversible isotropic rule: Random diamond in frame\"" :> \
{$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 1068967613401572495, $CellContext`t$$ = 
       19}, "\"12. Reversible isotropic rule: Triangle\"" :> \
{$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 264401286749934735, $CellContext`t$$ = 
       33}, "\"13. Reversible isotropic rule: Randomness in frame\"" :> \
{$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 263551407201589215, $CellContext`t$$ = 
       43}, "\"14. Reversible isotropic rule: 4 particles\"" :> \
{$CellContext`IC9$$ = {{1, 1, 0}, {1, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 261583294270638975, $CellContext`t$$ = 
       11}, "\"15. Reversible non-isotropic rule: Randomness evalution\"" :> \
{$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 14520071049273749310, $CellContext`t$$ = 
       21}, "\"16. Irreversible isotropic rule: Prime particles\"" :> \
{$CellContext`IC9$$ = {{1, 1, 0}, {1, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 20590133722848127, $CellContext`t$$ = 30},
      "\"17. Irreversible non-isotropic rule: Ordering\"" :> \
{$CellContext`mode$$ = 0, $CellContext`p$$ = 0.37, $CellContext`SR$$ = 
       428, $CellContext`rulenum$$ = 20589927564417919, $CellContext`t$$ = 
       30}}, Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
    Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
    Typeset`specs$$ = {{{
       Hold[$CellContext`rulenum$$], 6271892985061248000, "rule"}, 0, 
      18446744073709551615}, {
      Hold[
       Spacer[45]], Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Row[{
         Spacer[35], 
         Dynamic[
          Round[$CellContext`rulenum$$]]}]], 
      Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Spacer[45]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`t$$], 30, "time"}, 1, 100, 1}, {{
       Hold[$CellContext`m$$], False, "mesh"}, {
      False -> "off", True -> "on"}}, {{
       Hold[$CellContext`mode$$], 0, " "}, {0 -> "", 1 -> "", 2 -> ""}}, {
      Hold[
       Row[{
         Text[
          Style["Initial conditions:", Medium]], 
         Manipulate`Place[1]}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`p$$], 0.5, "density"}, 0, 1, 0.01}, {{
       Hold[$CellContext`SR$$], 1, "seed "}, 1, 1000, 1}, {{
       Hold[$CellContext`latsize$$], 4, "Size"}, {1, 2, 4, 8, 20}}, {
      Hold[
       TabView[{"Random" -> Column[{
            Row[{
              Manipulate`Place[2], 
              Spacer[5], 
              Dynamic[$CellContext`p$$]}], 
            Row[{
              Manipulate`Place[3], 
              Spacer[5], 
              Dynamic[$CellContext`SR$$]}], 
            Button["Set initials", 
             Dynamic[$CellContext`mode$$ = 0]]}], "9 cells block" -> Column[{
            Row[{
              Grid[{{
                 Button[
                 " ", Part[$CellContext`IC9$$, 1, 1] = 
                  1 - Part[$CellContext`IC9$$, 1, 1], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 1, 1]]], 
                  Appearance -> "Palette"], 
                 Button[
                 " ", Part[$CellContext`IC9$$, 1, 2] = 
                  1 - Part[$CellContext`IC9$$, 1, 2], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 1, 2]]], 
                  Appearance -> "Palette"], 
                 Button[
                 " ", Part[$CellContext`IC9$$, 1, 3] = 
                  1 - Part[$CellContext`IC9$$, 1, 3], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 1, 3]]], 
                  Appearance -> "Palette"]}, {
                 Button[
                 " ", Part[$CellContext`IC9$$, 2, 1] = 
                  1 - Part[$CellContext`IC9$$, 2, 1], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 2, 1]]], 
                  Appearance -> "Palette"], 
                 Button[
                 " ", Part[$CellContext`IC9$$, 2, 2] = 
                  1 - Part[$CellContext`IC9$$, 2, 2], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 2, 2]]], 
                  Appearance -> "Palette"], 
                 Button[
                 " ", Part[$CellContext`IC9$$, 2, 3] = 
                  1 - Part[$CellContext`IC9$$, 2, 3], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 2, 3]]], 
                  Appearance -> "Palette"]}, {
                 Button[
                 " ", Part[$CellContext`IC9$$, 3, 1] = 
                  1 - Part[$CellContext`IC9$$, 3, 1], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 3, 1]]], 
                  Appearance -> "Palette"], 
                 Button[
                 " ", Part[$CellContext`IC9$$, 3, 2] = 
                  1 - Part[$CellContext`IC9$$, 3, 2], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 3, 2]]], 
                  Appearance -> "Palette"], 
                 Button[
                 " ", Part[$CellContext`IC9$$, 3, 3] = 
                  1 - Part[$CellContext`IC9$$, 3, 3], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 3, 3]]], 
                  Appearance -> "Palette"]}}, Spacings -> {0.2, 0.4}, Frame -> 
               All, FrameStyle -> Directive[
                 GrayLevel[0.5]]]}], 
            Button["Set initials", 
             Dynamic[$CellContext`mode$$ = 0; $CellContext`mode$$ = 1]]}], 
         "Lattice" -> Column[{
            Manipulate`Place[4], 
            Row[{
              Button["Set initials", 
               Dynamic[$CellContext`mode$$ = 2]]}]}]}]], 
      Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Text[
        Style["Density:", Medium]]], Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Row[{
         Dynamic[
          ListLinePlot[
           Map[$CellContext`NumOfBlack, $CellContext`BCA$$], PlotRange -> 
           All]]}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`IC9$$], {{0, 0, 0}, {0, 0, 0}, {0, 0, 0}}}}, {
      Hold[$CellContext`BCA$$]}}, Typeset`size$$ = {421., {210.5, 215.5}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`rulenum$1364$$ = 0, $CellContext`t$1365$$ = 
    0, $CellContext`m$1366$$ = False, $CellContext`mode$1367$$ = 
    False, $CellContext`p$1368$$ = 0, $CellContext`SR$1369$$ = 
    0, $CellContext`latsize$1370$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`BCA$$ = 
        Null, $CellContext`IC9$$ = {{0, 0, 0}, {0, 0, 0}, {0, 0, 
         0}}, $CellContext`latsize$$ = 4, $CellContext`m$$ = 
        False, $CellContext`mode$$ = 0, $CellContext`p$$ = 
        0.5, $CellContext`rulenum$$ = 6271892985061248000, $CellContext`SR$$ = 
        1, $CellContext`t$$ = 30}, "ControllerVariables" :> {
        Hold[$CellContext`rulenum$$, $CellContext`rulenum$1364$$, 0], 
        Hold[$CellContext`t$$, $CellContext`t$1365$$, 0], 
        Hold[$CellContext`m$$, $CellContext`m$1366$$, False], 
        Hold[$CellContext`mode$$, $CellContext`mode$1367$$, False], 
        Hold[$CellContext`p$$, $CellContext`p$1368$$, 0], 
        Hold[$CellContext`SR$$, $CellContext`SR$1369$$, 0], 
        Hold[$CellContext`latsize$$, $CellContext`latsize$1370$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> (SeedRandom[$CellContext`SR$$]; $CellContext`IC1 = Table[
          If[RandomReal[] < $CellContext`p$$, 1, 0], {40}, {
          40}]; $CellContext`IC2 = 
        Module[{$CellContext`out$ = Table[0, {40}, {40}]}, 
          Part[$CellContext`out$, 
             Span[19, 21], 
             Span[
             19, 21]] = $CellContext`IC9$$; $CellContext`out$]; \
$CellContext`IC3 = Normal[
          SparseArray[Condition[{
              Pattern[$CellContext`i$, 
               Blank[]], 
              Pattern[$CellContext`j$, 
               Blank[]]}, 
             And[
             Mod[$CellContext`i$, $CellContext`latsize$$] == 0, 
              Mod[$CellContext`j$, $CellContext`latsize$$] == 0]] -> 1, {40, 
           40}]]; $CellContext`BCA$$ = $CellContext`BCA2DEvolveList[
          $CellContext`GeneralBlockRules[
           Round[$CellContext`rulenum$$]], 
          
          Which[$CellContext`mode$$ == 
           0, $CellContext`IC1, $CellContext`mode$$ == 
           1, $CellContext`IC2, $CellContext`mode$$ == 2, $CellContext`IC3], 
          100]; Grid[{{
           Dynamic[
            ArrayPlot[
             Part[$CellContext`BCA$$, $CellContext`t$$], 
             Mesh -> $CellContext`m$$, ImageSize -> $CellContext`IS, Frame -> 
             False]], 
           ArrayPlot[
            Map[Mean, 
             Map[Transpose, $CellContext`BCA$$]], ImageSize -> 
            Round[($CellContext`IS/100) 40], ColorFunction -> 
            "LightTemperatureMap", Frame -> False]}, {
           ArrayPlot[
            Reverse[
             Transpose[
              Map[Mean, $CellContext`BCA$$]]], ImageSize -> $CellContext`IS, 
            ColorFunction -> "LightTemperatureMap", Frame -> False], 
           ArrayPlot[
            Mean[$CellContext`BCA$$], ImageSize -> 
            Round[($CellContext`IS/100) 40] + 1, ColorFunction -> 
            "LightTemperatureMap", Frame -> False]}}, Spacings -> {0, 0}]), 
      "Specifications" :> {{{$CellContext`rulenum$$, 6271892985061248000, 
          "rule"}, 0, 18446744073709551615, ImageSize -> Tiny}, 
        Spacer[45], 
        Row[{
          Spacer[35], 
          Dynamic[
           Round[$CellContext`rulenum$$]]}], 
        Spacer[
        45], {{$CellContext`t$$, 30, "time"}, 1, 100, 1, Appearance -> 
         "Labeled", ImageSize -> Tiny}, {{$CellContext`m$$, False, "mesh"}, {
         False -> "off", True -> "on"}}, 
        Delimiter, {{$CellContext`mode$$, 0, " "}, {
         0 -> "", 1 -> "", 2 -> ""}, Enabled -> False, ControlPlacement -> 1}, 
        Row[{
          Text[
           Style["Initial conditions:", Medium]], 
          Manipulate`Place[1]}], {{$CellContext`p$$, 0.5, "density"}, 0, 1, 
         0.01, ImageSize -> Tiny, ControlPlacement -> 
         2}, {{$CellContext`SR$$, 1, "seed "}, 1, 1000, 1, ImageSize -> Tiny, 
         ControlPlacement -> 3}, {{$CellContext`latsize$$, 4, "Size"}, {1, 2, 
         4, 8, 20}, ControlPlacement -> 4}, 
        TabView[{"Random" -> Column[{
             Row[{
               Manipulate`Place[2], 
               Spacer[5], 
               Dynamic[$CellContext`p$$]}], 
             Row[{
               Manipulate`Place[3], 
               Spacer[5], 
               Dynamic[$CellContext`SR$$]}], 
             Button["Set initials", 
              Dynamic[$CellContext`mode$$ = 0]]}], "9 cells block" -> Column[{
             Row[{
               Grid[{{
                  Button[
                  " ", Part[$CellContext`IC9$$, 1, 1] = 
                   1 - Part[$CellContext`IC9$$, 1, 1], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 1, 1]]], 
                   Appearance -> "Palette"], 
                  Button[
                  " ", Part[$CellContext`IC9$$, 1, 2] = 
                   1 - Part[$CellContext`IC9$$, 1, 2], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 1, 2]]], 
                   Appearance -> "Palette"], 
                  Button[
                  " ", Part[$CellContext`IC9$$, 1, 3] = 
                   1 - Part[$CellContext`IC9$$, 1, 3], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 1, 3]]], 
                   Appearance -> "Palette"]}, {
                  Button[
                  " ", Part[$CellContext`IC9$$, 2, 1] = 
                   1 - Part[$CellContext`IC9$$, 2, 1], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 2, 1]]], 
                   Appearance -> "Palette"], 
                  Button[
                  " ", Part[$CellContext`IC9$$, 2, 2] = 
                   1 - Part[$CellContext`IC9$$, 2, 2], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 2, 2]]], 
                   Appearance -> "Palette"], 
                  Button[
                  " ", Part[$CellContext`IC9$$, 2, 3] = 
                   1 - Part[$CellContext`IC9$$, 2, 3], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 2, 3]]], 
                   Appearance -> "Palette"]}, {
                  Button[
                  " ", Part[$CellContext`IC9$$, 3, 1] = 
                   1 - Part[$CellContext`IC9$$, 3, 1], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 3, 1]]], 
                   Appearance -> "Palette"], 
                  Button[
                  " ", Part[$CellContext`IC9$$, 3, 2] = 
                   1 - Part[$CellContext`IC9$$, 3, 2], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 3, 2]]], 
                   Appearance -> "Palette"], 
                  Button[
                  " ", Part[$CellContext`IC9$$, 3, 3] = 
                   1 - Part[$CellContext`IC9$$, 3, 3], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 3, 3]]], 
                   Appearance -> "Palette"]}}, Spacings -> {0.2, 0.4}, Frame -> 
                All, FrameStyle -> Directive[
                  GrayLevel[0.5]]]}], 
             Button["Set initials", 
              Dynamic[$CellContext`mode$$ = 0; $CellContext`mode$$ = 1]]}], 
          "Lattice" -> Column[{
             Manipulate`Place[4], 
             Row[{
               Button["Set initials", 
                Dynamic[$CellContext`mode$$ = 2]]}]}]}], Delimiter, 
        Text[
         Style["Density:", Medium]], 
        Row[{
          Dynamic[
           ListLinePlot[
            Map[$CellContext`NumOfBlack, $CellContext`BCA$$], PlotRange -> 
            All]]}], {{$CellContext`IC9$$, {{0, 0, 0}, {0, 0, 0}, {0, 0, 0}}},
          ControlType -> None}, {$CellContext`BCA$$, ControlType -> None}}, 
      "Options" :> {
       ControlPlacement -> Left, TrackedSymbols -> True, FrameMargins -> 0, 
        AutorunSequencing -> {1}}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{640., {232., 237.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({{$CellContext`IC1 = CompressedData["
1:eJxtlMF1wzAMQ8Fu0lvn6QhdoPvf+mIT+JDTvDi2ZJKgADCfP7/fPx+SvvbS
aOZ1XQ/Xhld5fAVcv9fmnbLBd9QdzMq52hzvuboL6S58XwrM/s5WTJa2LRdx
qZT3crfkLdfJiy09nCVnGPfu04lKStrGmaZhrSqtSqmOwt0sGhgKU1ZkAIhC
OcZNw2Llux9BGM0PtZwe3OOOLgoKC3PDzQSmI3tHITdYevStBrX2UQ5HYR6Q
IasRTJq4++mgH43L4rbeIfHDwDhNR1GMEzKg0aqWooDmtKrmdeA+bCGajKSZ
DPnQmb+y7bFj60ZVzPaPgsgVekiAlnpzhNTstSVwOt29D065UVOQtIYLMuht
q3Z2e+mY6NCmbLSdovdDiRqumhj+GhCmHFi2Fq/SFZSlzcPckVvMUVAiBwZp
bZE8YdXqW28dgiDzByOFBRs=
          "], $CellContext`IC2 = CompressedData["
1:eJxTTMoPSmJiYGDQgOJRMApGARgwDrQDRsEoGGoAAHJ6Afo=
          "], $CellContext`IC3 = CompressedData["
1:eJxTTMoPSmJiYGDQgOIBBIxE4oECo+6jDIy6jzIw6j7KwKj7KANEuQ8AkAAC
XQ==
          "], $CellContext`BCA2DEvolveList[
           Pattern[$CellContext`rule, 
            Blank[]], 
           Pattern[$CellContext`init, 
            Blank[]], 
           Pattern[$CellContext`t, 
            Blank[]]] := 
         FoldList[$CellContext`BCA2DStep[$CellContext`rule, #, #2]& , \
$CellContext`init, 
           Range[$CellContext`t]], $CellContext`BCA2DStep[
           Pattern[$CellContext`rule, 
            Blank[]], 
           Pattern[$CellContext`a, 
            Blank[]], 
           Pattern[$CellContext`d, 
            Blank[]]] := RotateRight[
           Map[RotateRight[#, $CellContext`d]& , 
            (Apply[Join, 
             Map[Join[
               Apply[Sequence, #], 2]& , #, {1}]]& )[
             ReplaceAll[
              Partition[
               RotateLeft[
                Map[
                RotateLeft[#, $CellContext`d]& , $CellContext`a], \
$CellContext`d], {2, 
               2}], $CellContext`rule]]], $CellContext`d], \
$CellContext`GeneralBlockRules[
           Pattern[$CellContext`rule, 
            Blank[]]] := MapThread[Rule, 
           ({#, 
            Part[#, IntegerDigits[$CellContext`rule, 16, 16] + 1]}& )[
            Sort[
             Tuples[
              Tuples[{1, 0}, 2], 2]]]], $CellContext`IS = 
         300, $CellContext`NumOfBlack[
           Pattern[$CellContext`s, 
            Blank[]]] := 
         Apply[Plus, $CellContext`s, {0, 1}]/
          Length[$CellContext`s]^2}; ($CellContext`IS = 
         300; $CellContext`GeneralBlockRules[
           Pattern[$CellContext`rule, 
            Blank[]]] := MapThread[Rule, 
           ({#, 
            Part[#, IntegerDigits[$CellContext`rule, 16, 16] + 1]}& )[
            Sort[
             Tuples[
              Tuples[{1, 0}, 2], 2]]]]; $CellContext`BCA2DStep[
           Pattern[$CellContext`rule, 
            Blank[]], 
           Pattern[$CellContext`a, 
            Blank[]], 
           Pattern[$CellContext`d, 
            Blank[]]] := RotateRight[
           Map[RotateRight[#, $CellContext`d]& , 
            (Apply[Join, 
             Map[Join[
               Apply[Sequence, #], 2]& , #, {1}]]& )[
             ReplaceAll[
              Partition[
               RotateLeft[
                Map[
                RotateLeft[#, $CellContext`d]& , $CellContext`a], \
$CellContext`d], {2, 
               2}], $CellContext`rule]]], $CellContext`d]; \
$CellContext`BCA2DEvolveList[
           Pattern[$CellContext`rule, 
            Blank[]], 
           Pattern[$CellContext`init, 
            Blank[]], 
           Pattern[$CellContext`t, 
            Blank[]]] := 
         FoldList[$CellContext`BCA2DStep[$CellContext`rule, #, #2]& , \
$CellContext`init, 
           Range[$CellContext`t]]; $CellContext`NumOfBlack[
           Pattern[$CellContext`s, 
            Blank[]]] := 
         Apply[Plus, $CellContext`s, {0, 1}]/Length[$CellContext`s]^2)}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.5279391566750145`*^9},
 CellID->50888926]
}, {2}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateCaptionSection"],

Cell["\<\
This is a Demonstration for studying two-dimensional block cellular automata \
(2D BCA) with 2\[Times]2 blocks. You can choose any rule from the rule space \
and trace the evolution of the system through time. Also, you can show the \
averages over any one of three axes in 3D spacetime and the density evolution \
plot. Boundary conditions are periodic. There are three types of tunable \
initial conditions: random initial conditions with a density and a seed \
parameter, initial conditions with a 3\[Times]3 block on the white \
background, and latticelike initial conditions with black cells with a \
certain distance between them on the white background. Also there is a \
collection of interesting rules in the bookmarks.\
\>", "ManipulateCaption",
 CellChangeTimes->{{3.5194061678367815`*^9, 3.5194062476303453`*^9}, {
   3.5194062930539436`*^9, 3.519406337471484*^9}, {3.5194063724554853`*^9, 
   3.519406388425399*^9}, {3.5194064201932154`*^9, 3.519406434114012*^9}, {
   3.519406814712781*^9, 3.5194068270784883`*^9}, {3.5194068773663645`*^9, 
   3.5194068872049274`*^9}, {3.5194112945765505`*^9, 3.5194113496487007`*^9}, 
   3.5194114061519327`*^9, {3.5194114517045374`*^9, 3.5194114562037954`*^9}, {
   3.519411500903352*^9, 3.5194115023114324`*^9}, {3.5194115498371506`*^9, 
   3.5194115569545574`*^9}, {3.5194115912315183`*^9, 
   3.5194117171697216`*^9}, {3.519411748462511*^9, 3.519411834448429*^9}, 
   3.5194121752349215`*^9, {3.51941236787994*^9, 3.5194124126935034`*^9}, {
   3.519412473973008*^9, 3.5194125221357627`*^9}, {3.5194126361392837`*^9, 
   3.5194130117367663`*^9}, {3.519413068699024*^9, 3.5194131596502266`*^9}, {
   3.519422699385868*^9, 3.519422740122198*^9}, {3.5194300367114673`*^9, 
   3.5194300372054954`*^9}, {3.524669673989258*^9, 3.524669676426758*^9}, 
   3.524833030267894*^9, {3.5248337140390043`*^9, 3.524833730936694*^9}, {
   3.525182487352645*^9, 3.525182502275242*^9}, {3.525182550881639*^9, 
   3.525182652218153*^9}, {3.525189323608428*^9, 3.52518933406712*^9}, {
   3.525189635486884*^9, 3.525189636197372*^9}, {3.525189697159934*^9, 
   3.52518974610741*^9}, {3.526052496184883*^9, 3.5260524967248993`*^9}, {
   3.526061095847128*^9, 3.5260610969571834`*^9}, {3.526398083862059*^9, 
   3.526398107203747*^9}, {3.52752405044884*^9, 3.527524051052901*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ThumbnailSection"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`BCA$$ = CompressedData["
1:eJyVnVuSHDuTnBGmleht1qMljJmetf83zc/OBNw/d2STzcPqKiQQ4beo6hv7
/O///n//57//11rr//7P3/96/q41a+bP3/nz4Ofv+rP0PH7u/Nn2s/+9fZaf
4z9/nrefk081rTlPwTl7tO9p+V6c9+FT/4Xxp+kDas05P+O1Xm4P+LN59p5d
fTavn4fvmiBcu9actmuk6ovqaLihiWJr9OSptMEcxGNlXspPn937Ob6t2ARe
jV+HXlwq1OPJK+kxSxGNmLHOdtFrgxASh6qefX0+CRvhf5ioZ69ucui1ZzdF
ZNeW4c3TEfpg2SlWBzZ2SaxQO0Vedc+d8/6dGzVonXrHgXe+bIBccUuhTNCB
NufI0RkTAqzy/k3btmqPm3Y+rsq502p3VM0PiJNeM+ppcxTAE8Ahf8zapom2
6ohhlZTsoZAsy2xSwbUckY7pAWRNdk7fAyfAIv6ZQ2mkhmyAuunM2Du0r28H
68axt4jZs207CROWS/hJipbqhzgtWzg6vZZHm3f/Xt9PP0cFPNUfw064dGRl
CN6UiV0SXmUz3uAkzUR4fdJK77PqLD16xmHkP/i/B2Wr8z5Pj8AcaTcEvqsY
Pxmsg3CAagdsh+PM2EtTZledPNueTeLRceU4BVk0FXLExtevWU7XAeS6Clgx
D5HfJh/NlwzfaOFjxzHnHD7R0DLH9TMUdudAlucDq2bwDJF4c6LlXHcAxktu
s17IquUBr/bvshuhyHskssBKyimG6rItPXa9o7xvHtdG+uk5hPpE9efhm9Qt
hfB9tXBHVU4RS00+jJc9/YqHO1/FuMP56XnG4eUn2o2WU/AboWboJE6Lbij7
lD3jirj+wS2NPlBEv2OKZlIyrS9QEvxd3qOgqHUwHvgjEI7I7swJ5G67n2mt
sb4wYONm9Dp0wnEubf6byEZ8oPvkyOH2krT9lIpLa0rySqRefuNVrMt5bTkP
jrsEs45IAt6eJY4KI3jkuVqqwZ0xOhKAOZcgt3mk1TQNnCettj9IEgvewTGe
+hzFqdLcucsS+aPgQvANpWx6lBMdD3XPqfmhBfTpaKdAqikB1+jU4ijKgMlT
OASymJ56Y0dMX4vCwi5d9T+HlUZjazSxNNuRVym1z61Scd4cv4ck+qNS6Tu1
UX3YMXrA7KbnxQB+6GvZxmSpnXWw6CDKJ1dyQvJjfSQ1rsxuixk81w/wt6HY
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
R0KxMuS6NRLiNHiJskhIPblUb7JaayqyNLWI0EsXPYNISx+o3KSRRxOnGVYd
sqqbIXVBekgxHy50CQEVbPUNScu1bGztSo+UNXWcxs5ttBik2GpnocD6yHIm
z9vWn4fLGY6mqSSW2rOArSfXhrmY5bjgL0RIWtzAlTkbGa7q8OW0VZW8tNH0
qqZVr36JacsMmHJepb7GcuLv3ti87QDCgxaJYHbe/FhUSEnkeI7RxyDRU7cx
9I8IqH6aNaonwoAbNDQJXAz6vtiYFFxTLFOmpT//wmNODvRbWDe+m9A2snhY
cYq/qRuQYgpu9Qm8EQrtkv3ewWljruVxU88HANq7BxWlTwjdLqfohGxbViUn
UGKQyXMSs5Yj8eq23msYti6v4XqvJNeGOVWKled+hqiL1E9jffL70x+TMvGH
1ed1pA36YieGsnK/VQvR/26bNYYUvppJ6WGLCimJeZzhCj9uLkQKc4zqIDEd
HoXN9xYEut3UAjnLy8JfoKM0FHhYrQkimk6cZlgf29yHq1TetAdhaBiBIFZU
MOsr1ORI2yhFCS/dSHk28qaeRxYPMtfFlcb0kpZbAuv05gQaXwaqTIcjcoH3
5hZMSjL5fLVQVfLXahg2yuJrGNfUr3LPaWiDOa1RlTxz0qqLcfQWYpOp4VEI
GfqsbbFnPUpTeJZI9KZ0evO9oFK+kdxSeZZtoG7XTJ+3QsmBZxQmNw4OIaw5
QOFU5BZU9vWxik2Sgo7O1lFKhqIB+bWYgSulDX9NoZvwjNCl/tfwmOwOO9mv
U6LplkgbO5CzeWutPcQuQNS/bHN8YGwSAMZay5//bgncsXJEq2yL36flTggF
erFQVfKXyVO+kheqxDwP6VNJWy6nw43L79NK7rY01+oywd8GBtNcsRjQW6UI
/VjPyNC2KbXLvN22xf9/OjYokbu8cPjGVGxkilvl4fcvmZbLhJy3wWZp2Ny1
AjlGl0FaOJ0T8xEET2L8+8YeVjRgToBOgedGy183S8RK03t9+OB1BQIbJXur
0JUL3k29YaGmWyK1M9lO8oykldbjH09SjiIaxfHVaUi8uqSPblLHJ3/pSA4q
9KcT9iTA9DqYfSSHxlWQvJTTdGPVGoSx+r93qdWb0JU7meZKOIILfogRasEd
h3ublPELLbRBY0pVacy43zZb08QGoT/kdXzUjLLE7w9rlUWYHCBnzAdfOnrF
3nZyoQ9SbOhhhe4ZgW2qW9WG6NEP57ApJIgg+fbBYuZnnY15y5DBB6+7om5V
z410MYsn4H1TUhinbonUypIA+PpiEpFY5Vi2AyG1r86KOs1r89cp1LgyvSnw
tO9XtOmYleUhFGKfbB1pEfdSPWtkRuZc8o3BvdnWucPDPqLmiEsMCGpWi9n2
QxDgtsTqt234eCi3xahz2d2Iz1fpiMnyKe+R2cms2Cp+qBesPK9+XrFvJPm7
Kx7TOmlvPW5QEIGpNZT3PQiDI0UtSixj1DOMqVGESQhpySBpQHee0wXL8WFI
LzxiUk+Xs75pRuXA+7fZtRgsNgHSgoS53v56i5RFNtKRHAYI4vgEMSchUT+7
KCd1tEHi6RIwP9WnY/rvF2jVFyueN0NqoxJGnkKlBiV6aNDwy1BlCBp3+/0R
9MF60LIWVWi/llc3KF4rdKPQt23mb59aiNangwjBNDk/G7/lXV7NK+YhBOG+
KUYpJ/hp3gNaPKYcVE7ywnZ6vLShglafWrm3JpsiTAhbFCYwo7sHyQ+4fhUw
W8uePr0xgaaQ1Y3Z/m3atixdueDNADHXj7+pWyKNehH3twSTliKLMExvkrDg
e64DcZmGoIb5TR1tLDMnUX1iozeWje5wX4mKy7bLVbbkCMj8eg0KvkVWQThY
ezUj1biPa98GXvD9Fvz/vP1/9Si+cA==
    "], $CellContext`IC9$$ = {{1, 1, 0}, {1, 1, 0}, {0, 0, 
    0}}, $CellContext`latsize$$ = 4, $CellContext`m$$ = 
    False, $CellContext`mode$$ = 0, $CellContext`p$$ = 
    0.37, $CellContext`rulenum$$ = 20589927564417919, $CellContext`SR$$ = 
    428, $CellContext`t$$ = 30, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"1. Reversible isotropic rule: Twisted star\"" :> {$CellContext`IC9$$ = \
{{1, 1, 0}, {1, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 261861251725805535, $CellContext`t$$ = 
       82}, "\"2. Reversible isotropic rule: Flower\"" :> {$CellContext`IC9$$ = \
{{1, 1, 0}, {1, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 261861260315283135, $CellContext`t$$ = 
       100}, "\"3. Reversible isotropic rule: Particle beams radiator\"" :> \
{$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 261583088162540415, $CellContext`t$$ = 
       40}, "\"4. Reversible isotropic rule: One particle radiator\"" :> \
{$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 261583058097638895, $CellContext`t$$ = 
       34}, 
     "\"5. Reversible isotropic rule: Randomness\"" :> {$CellContext`IC9$$ = \
{{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 261583083867180735, $CellContext`t$$ = 
       49}, "\"6. Reversible isotropic rule: Radiating mass\"" :> \
{$CellContext`IC9$$ = {{0, 0, 1}, {0, 0, 0}, {1, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 261861234545741295, $CellContext`t$$ = 
       80}, "\"7. Reversible isotropic rule: Regular behaviour\"" :> \
{$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 1068396996939006495, $CellContext`t$$ = 
       30}, "\"8. Reversible non-isotropic rule: Chessboard generated by mass\
\"" :> {$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 
         0}}; $CellContext`mode$$ = 1, $CellContext`rulenum$$ = 
       1047822631656183375, $CellContext`t$$ = 26}, 
     "\"9. Irreversible isotropic rule: Claster generation\"" :> \
{$CellContext`mode$$ = 0, $CellContext`p$$ = 0.6, $CellContext`SR$$ = 
       1, $CellContext`rulenum$$ = 286968494657535, $CellContext`t$$ = 49}, 
     "\"10. Irreversible isotropic rule: Drifting clusters\"" :> \
{$CellContext`mode$$ = 0, $CellContext`p$$ = 0.37, $CellContext`SR$$ = 
       428, $CellContext`rulenum$$ = 2540967335796735, $CellContext`t$$ = 30},
      "\"11. Reversible isotropic rule: Random diamond in frame\"" :> \
{$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 1068967613401572495, $CellContext`t$$ = 
       19}, "\"12. Reversible isotropic rule: Triangle\"" :> \
{$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 264401286749934735, $CellContext`t$$ = 
       33}, "\"13. Reversible isotropic rule: Randomness in frame\"" :> \
{$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 263551407201589215, $CellContext`t$$ = 
       43}, 
     "\"14. Reversible isotropic rule: 4 particles\"" :> {$CellContext`IC9$$ = \
{{1, 1, 0}, {1, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 261583294270638975, $CellContext`t$$ = 
       11}, "\"15. Reversible non-isotropic rule: Randomness evalution\"" :> \
{$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 14520071049273749310, $CellContext`t$$ = 
       21}, "\"16. Irreversible isotropic rule: Prime particles\"" :> \
{$CellContext`IC9$$ = {{1, 1, 0}, {1, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 20590133722848127, $CellContext`t$$ = 30},
      "\"17. Irreversible non-isotropic rule: Ordering\"" :> \
{$CellContext`mode$$ = 0, $CellContext`p$$ = 0.37, $CellContext`SR$$ = 
       428, $CellContext`rulenum$$ = 20589927564417919, $CellContext`t$$ = 
       30}}, Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
    Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
    Typeset`specs$$ = {{{
       Hold[$CellContext`rulenum$$], 20589927564417919, "rule"}, 0, 
      18446744073709551615}, {
      Hold[
       Spacer[45]], Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Row[{
         Spacer[35], 
         Dynamic[
          Round[$CellContext`rulenum$$]]}]], 
      Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Spacer[45]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`t$$], 30, "time"}, 1, 100, 1}, {{
       Hold[$CellContext`m$$], False, "mesh"}, {
      False -> "off", True -> "on"}}, {{
       Hold[$CellContext`mode$$], 0, " "}, {0 -> "", 1 -> "", 2 -> ""}}, {
      Hold[
       Row[{
         Text[
          Style["Initial conditions:", Medium]], 
         Manipulate`Place[1]}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`p$$], 0.37, "density"}, 0, 1, 0.01}, {{
       Hold[$CellContext`SR$$], 428, "seed "}, 1, 1000, 1}, {{
       Hold[$CellContext`latsize$$], 4, "Size"}, {1, 2, 4, 8, 20}}, {
      Hold[
       TabView[{"Random" -> Column[{
            Row[{
              Manipulate`Place[2], 
              Spacer[5], 
              Dynamic[$CellContext`p$$]}], 
            Row[{
              Manipulate`Place[3], 
              Spacer[5], 
              Dynamic[$CellContext`SR$$]}], 
            Button["Set initials", 
             Dynamic[$CellContext`mode$$ = 0]]}], "9 cells block" -> Column[{
            Row[{
              Grid[{{
                 Button[
                 " ", Part[$CellContext`IC9$$, 1, 1] = 
                  1 - Part[$CellContext`IC9$$, 1, 1], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 1, 1]]], 
                  Appearance -> "Palette"], 
                 Button[
                 " ", Part[$CellContext`IC9$$, 1, 2] = 
                  1 - Part[$CellContext`IC9$$, 1, 2], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 1, 2]]], 
                  Appearance -> "Palette"], 
                 Button[
                 " ", Part[$CellContext`IC9$$, 1, 3] = 
                  1 - Part[$CellContext`IC9$$, 1, 3], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 1, 3]]], 
                  Appearance -> "Palette"]}, {
                 Button[
                 " ", Part[$CellContext`IC9$$, 2, 1] = 
                  1 - Part[$CellContext`IC9$$, 2, 1], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 2, 1]]], 
                  Appearance -> "Palette"], 
                 Button[
                 " ", Part[$CellContext`IC9$$, 2, 2] = 
                  1 - Part[$CellContext`IC9$$, 2, 2], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 2, 2]]], 
                  Appearance -> "Palette"], 
                 Button[
                 " ", Part[$CellContext`IC9$$, 2, 3] = 
                  1 - Part[$CellContext`IC9$$, 2, 3], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 2, 3]]], 
                  Appearance -> "Palette"]}, {
                 Button[
                 " ", Part[$CellContext`IC9$$, 3, 1] = 
                  1 - Part[$CellContext`IC9$$, 3, 1], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 3, 1]]], 
                  Appearance -> "Palette"], 
                 Button[
                 " ", Part[$CellContext`IC9$$, 3, 2] = 
                  1 - Part[$CellContext`IC9$$, 3, 2], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 3, 2]]], 
                  Appearance -> "Palette"], 
                 Button[
                 " ", Part[$CellContext`IC9$$, 3, 3] = 
                  1 - Part[$CellContext`IC9$$, 3, 3], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 3, 3]]], 
                  Appearance -> "Palette"]}}, Spacings -> {0.2, 0.4}, Frame -> 
               All, FrameStyle -> Directive[
                 GrayLevel[0.5]]]}], 
            Button["Set initials", 
             Dynamic[$CellContext`mode$$ = 0; $CellContext`mode$$ = 1]]}], 
         "Lattice" -> Column[{
            Manipulate`Place[4], 
            Row[{
              Button["Set initials", 
               Dynamic[$CellContext`mode$$ = 2]]}]}]}]], 
      Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Text[
        Style["Density:", Medium]]], Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Row[{
         Dynamic[
          ListLinePlot[
           Map[$CellContext`NumOfBlack, $CellContext`BCA$$], PlotRange -> 
           All]]}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`IC9$$], {{1, 1, 0}, {1, 1, 0}, {0, 0, 0}}}}, {{
       Hold[$CellContext`BCA$$], CompressedData["
1:eJyVnVuSHDuTnBGmleht1qMljJmetf83zc/OBNw/d2STzcPqKiQQ4beo6hv7
/O///n//57//11rr//7P3/96/q41a+bP3/nz4Ofv+rP0PH7u/Nn2s/+9fZaf
4z9/nrefk081rTlPwTl7tO9p+V6c9+FT/4Xxp+kDas05P+O1Xm4P+LN59p5d
fTavn4fvmiBcu9actmuk6ovqaLihiWJr9OSptMEcxGNlXspPn937Ob6t2ARe
jV+HXlwq1OPJK+kxSxGNmLHOdtFrgxASh6qefX0+CRvhf5ioZ69ucui1ZzdF
ZNeW4c3TEfpg2SlWBzZ2SaxQO0Vedc+d8/6dGzVonXrHgXe+bIBccUuhTNCB
NufI0RkTAqzy/k3btmqPm3Y+rsq502p3VM0PiJNeM+ppcxTAE8Ahf8zapom2
6ohhlZTsoZAsy2xSwbUckY7pAWRNdk7fAyfAIv6ZQ2mkhmyAuunM2Du0r28H
68axt4jZs207CROWS/hJipbqhzgtWzg6vZZHm3f/Xt9PP0cFPNUfw064dGRl
CN6UiV0SXmUz3uAkzUR4fdJK77PqLD16xmHkP/i/B2Wr8z5Pj8AcaTcEvqsY
Pxmsg3CAagdsh+PM2EtTZledPNueTeLRceU4BVk0FXLExtevWU7XAeS6Clgx
D5HfJh/NlwzfaOFjxzHnHD7R0DLH9TMUdudAlucDq2bwDJF4c6LlXHcAxktu
s17IquUBr/bvshuhyHskssBKyimG6rItPXa9o7xvHtdG+uk5hPpE9efhm9Qt
hfB9tXBHVU4RS00+jJc9/YqHO1/FuMP56XnG4eUn2o2WU/AboWboJE6Lbij7
lD3jirj+wS2NPlBEv2OKZlIyrS9QEvxd3qOgqHUwHvgjEI7I7swJ5G67n2mt
sb4wYONm9Dp0wnEubf6byEZ8oPvkyOH2krT9lIpLa0rySqRefuNVrMt5bTkP
jrsEs45IAt6eJY4KI3jkuVqqwZ0xOhKAOZcgt3mk1TQNnCettj9IEgvewTGe
+hzFqdLcucsS+aPgQvANpWx6lBMdD3XPqfmhBfTpaKdAqikB1+jU4ijKgMlT
OASymJ56Y0dMX4vCwi5d9T+HlUZjazSxNNuRVym1z61Scd4cv4ck+qNS6Tu1
UX3YMXrA7KbnxQB+6GvZxmSpnXWw6CDKJ1dyQvJjfSQ1rsxuixk81w/wt6HY
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
R0KxMuS6NRLiNHiJskhIPblUb7JaayqyNLWI0EsXPYNISx+o3KSRRxOnGVYd
sqqbIXVBekgxHy50CQEVbPUNScu1bGztSo+UNXWcxs5ttBik2GpnocD6yHIm
z9vWn4fLGY6mqSSW2rOArSfXhrmY5bjgL0RIWtzAlTkbGa7q8OW0VZW8tNH0
qqZVr36JacsMmHJepb7GcuLv3ti87QDCgxaJYHbe/FhUSEnkeI7RxyDRU7cx
9I8IqH6aNaonwoAbNDQJXAz6vtiYFFxTLFOmpT//wmNODvRbWDe+m9A2snhY
cYq/qRuQYgpu9Qm8EQrtkv3ewWljruVxU88HANq7BxWlTwjdLqfohGxbViUn
UGKQyXMSs5Yj8eq23msYti6v4XqvJNeGOVWKled+hqiL1E9jffL70x+TMvGH
1ed1pA36YieGsnK/VQvR/26bNYYUvppJ6WGLCimJeZzhCj9uLkQKc4zqIDEd
HoXN9xYEut3UAjnLy8JfoKM0FHhYrQkimk6cZlgf29yHq1TetAdhaBiBIFZU
MOsr1ORI2yhFCS/dSHk28qaeRxYPMtfFlcb0kpZbAuv05gQaXwaqTIcjcoH3
5hZMSjL5fLVQVfLXahg2yuJrGNfUr3LPaWiDOa1RlTxz0qqLcfQWYpOp4VEI
GfqsbbFnPUpTeJZI9KZ0evO9oFK+kdxSeZZtoG7XTJ+3QsmBZxQmNw4OIaw5
QOFU5BZU9vWxik2Sgo7O1lFKhqIB+bWYgSulDX9NoZvwjNCl/tfwmOwOO9mv
U6LplkgbO5CzeWutPcQuQNS/bHN8YGwSAMZay5//bgncsXJEq2yL36flTggF
erFQVfKXyVO+kheqxDwP6VNJWy6nw43L79NK7rY01+oywd8GBtNcsRjQW6UI
/VjPyNC2KbXLvN22xf9/OjYokbu8cPjGVGxkilvl4fcvmZbLhJy3wWZp2Ny1
AjlGl0FaOJ0T8xEET2L8+8YeVjRgToBOgedGy183S8RK03t9+OB1BQIbJXur
0JUL3k29YaGmWyK1M9lO8oykldbjH09SjiIaxfHVaUi8uqSPblLHJ3/pSA4q
9KcT9iTA9DqYfSSHxlWQvJTTdGPVGoSx+r93qdWb0JU7meZKOIILfogRasEd
h3ublPELLbRBY0pVacy43zZb08QGoT/kdXzUjLLE7w9rlUWYHCBnzAdfOnrF
3nZyoQ9SbOhhhe4ZgW2qW9WG6NEP57ApJIgg+fbBYuZnnY15y5DBB6+7om5V
z410MYsn4H1TUhinbonUypIA+PpiEpFY5Vi2AyG1r86KOs1r89cp1LgyvSnw
tO9XtOmYleUhFGKfbB1pEfdSPWtkRuZc8o3BvdnWucPDPqLmiEsMCGpWi9n2
QxDgtsTqt234eCi3xahz2d2Iz1fpiMnyKe+R2cms2Cp+qBesPK9+XrFvJPm7
Kx7TOmlvPW5QEIGpNZT3PQiDI0UtSixj1DOMqVGESQhpySBpQHee0wXL8WFI
LzxiUk+Xs75pRuXA+7fZtRgsNgHSgoS53v56i5RFNtKRHAYI4vgEMSchUT+7
KCd1tEHi6RIwP9WnY/rvF2jVFyueN0NqoxJGnkKlBiV6aNDwy1BlCBp3+/0R
9MF60LIWVWi/llc3KF4rdKPQt23mb59aiNangwjBNDk/G7/lXV7NK+YhBOG+
KUYpJ/hp3gNaPKYcVE7ywnZ6vLShglafWrm3JpsiTAhbFCYwo7sHyQ+4fhUw
W8uePr0xgaaQ1Y3Z/m3atixdueDNADHXj7+pWyKNehH3twSTliKLMExvkrDg
e64DcZmGoIb5TR1tLDMnUX1iozeWje5wX4mKy7bLVbbkCMj8eg0KvkVWQThY
ezUj1biPa98GXvD9Fvz/vP1/9Si+cA==
       "]}}}, Typeset`size$$ = {421., {210.5, 215.5}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`rulenum$1396$$ = 0, $CellContext`t$1397$$ = 
    0, $CellContext`m$1398$$ = False, $CellContext`mode$1399$$ = 
    False, $CellContext`p$1400$$ = 0, $CellContext`SR$1401$$ = 
    0, $CellContext`latsize$1402$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, "Variables" :> {$CellContext`BCA$$ = CompressedData["
1:eJyVnVuSHDuTnBGmleht1qMljJmetf83zc/OBNw/d2STzcPqKiQQ4beo6hv7
/O///n//57//11rr//7P3/96/q41a+bP3/nz4Ofv+rP0PH7u/Nn2s/+9fZaf
4z9/nrefk081rTlPwTl7tO9p+V6c9+FT/4Xxp+kDas05P+O1Xm4P+LN59p5d
fTavn4fvmiBcu9actmuk6ovqaLihiWJr9OSptMEcxGNlXspPn937Ob6t2ARe
jV+HXlwq1OPJK+kxSxGNmLHOdtFrgxASh6qefX0+CRvhf5ioZ69ucui1ZzdF
ZNeW4c3TEfpg2SlWBzZ2SaxQO0Vedc+d8/6dGzVonXrHgXe+bIBccUuhTNCB
NufI0RkTAqzy/k3btmqPm3Y+rsq502p3VM0PiJNeM+ppcxTAE8Ahf8zapom2
6ohhlZTsoZAsy2xSwbUckY7pAWRNdk7fAyfAIv6ZQ2mkhmyAuunM2Du0r28H
68axt4jZs207CROWS/hJipbqhzgtWzg6vZZHm3f/Xt9PP0cFPNUfw064dGRl
CN6UiV0SXmUz3uAkzUR4fdJK77PqLD16xmHkP/i/B2Wr8z5Pj8AcaTcEvqsY
Pxmsg3CAagdsh+PM2EtTZledPNueTeLRceU4BVk0FXLExtevWU7XAeS6Clgx
D5HfJh/NlwzfaOFjxzHnHD7R0DLH9TMUdudAlucDq2bwDJF4c6LlXHcAxktu
s17IquUBr/bvshuhyHskssBKyimG6rItPXa9o7xvHtdG+uk5hPpE9efhm9Qt
hfB9tXBHVU4RS00+jJc9/YqHO1/FuMP56XnG4eUn2o2WU/AboWboJE6Lbij7
lD3jirj+wS2NPlBEv2OKZlIyrS9QEvxd3qOgqHUwHvgjEI7I7swJ5G67n2mt
sb4wYONm9Dp0wnEubf6byEZ8oPvkyOH2krT9lIpLa0rySqRefuNVrMt5bTkP
jrsEs45IAt6eJY4KI3jkuVqqwZ0xOhKAOZcgt3mk1TQNnCettj9IEgvewTGe
+hzFqdLcucsS+aPgQvANpWx6lBMdD3XPqfmhBfTpaKdAqikB1+jU4ijKgMlT
OASymJ56Y0dMX4vCwi5d9T+HlUZjazSxNNuRVym1z61Scd4cv4ck+qNS6Tu1
UX3YMXrA7KbnxQB+6GvZxmSpnXWw6CDKJ1dyQvJjfSQ1rsxuixk81w/wt6HY
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
R0KxMuS6NRLiNHiJskhIPblUb7JaayqyNLWI0EsXPYNISx+o3KSRRxOnGVYd
sqqbIXVBekgxHy50CQEVbPUNScu1bGztSo+UNXWcxs5ttBik2GpnocD6yHIm
z9vWn4fLGY6mqSSW2rOArSfXhrmY5bjgL0RIWtzAlTkbGa7q8OW0VZW8tNH0
qqZVr36JacsMmHJepb7GcuLv3ti87QDCgxaJYHbe/FhUSEnkeI7RxyDRU7cx
9I8IqH6aNaonwoAbNDQJXAz6vtiYFFxTLFOmpT//wmNODvRbWDe+m9A2snhY
cYq/qRuQYgpu9Qm8EQrtkv3ewWljruVxU88HANq7BxWlTwjdLqfohGxbViUn
UGKQyXMSs5Yj8eq23msYti6v4XqvJNeGOVWKled+hqiL1E9jffL70x+TMvGH
1ed1pA36YieGsnK/VQvR/26bNYYUvppJ6WGLCimJeZzhCj9uLkQKc4zqIDEd
HoXN9xYEut3UAjnLy8JfoKM0FHhYrQkimk6cZlgf29yHq1TetAdhaBiBIFZU
MOsr1ORI2yhFCS/dSHk28qaeRxYPMtfFlcb0kpZbAuv05gQaXwaqTIcjcoH3
5hZMSjL5fLVQVfLXahg2yuJrGNfUr3LPaWiDOa1RlTxz0qqLcfQWYpOp4VEI
GfqsbbFnPUpTeJZI9KZ0evO9oFK+kdxSeZZtoG7XTJ+3QsmBZxQmNw4OIaw5
QOFU5BZU9vWxik2Sgo7O1lFKhqIB+bWYgSulDX9NoZvwjNCl/tfwmOwOO9mv
U6LplkgbO5CzeWutPcQuQNS/bHN8YGwSAMZay5//bgncsXJEq2yL36flTggF
erFQVfKXyVO+kheqxDwP6VNJWy6nw43L79NK7rY01+oywd8GBtNcsRjQW6UI
/VjPyNC2KbXLvN22xf9/OjYokbu8cPjGVGxkilvl4fcvmZbLhJy3wWZp2Ny1
AjlGl0FaOJ0T8xEET2L8+8YeVjRgToBOgedGy183S8RK03t9+OB1BQIbJXur
0JUL3k29YaGmWyK1M9lO8oykldbjH09SjiIaxfHVaUi8uqSPblLHJ3/pSA4q
9KcT9iTA9DqYfSSHxlWQvJTTdGPVGoSx+r93qdWb0JU7meZKOIILfogRasEd
h3ublPELLbRBY0pVacy43zZb08QGoT/kdXzUjLLE7w9rlUWYHCBnzAdfOnrF
3nZyoQ9SbOhhhe4ZgW2qW9WG6NEP57ApJIgg+fbBYuZnnY15y5DBB6+7om5V
z410MYsn4H1TUhinbonUypIA+PpiEpFY5Vi2AyG1r86KOs1r89cp1LgyvSnw
tO9XtOmYleUhFGKfbB1pEfdSPWtkRuZc8o3BvdnWucPDPqLmiEsMCGpWi9n2
QxDgtsTqt234eCi3xahz2d2Iz1fpiMnyKe+R2cms2Cp+qBesPK9+XrFvJPm7
Kx7TOmlvPW5QEIGpNZT3PQiDI0UtSixj1DOMqVGESQhpySBpQHee0wXL8WFI
LzxiUk+Xs75pRuXA+7fZtRgsNgHSgoS53v56i5RFNtKRHAYI4vgEMSchUT+7
KCd1tEHi6RIwP9WnY/rvF2jVFyueN0NqoxJGnkKlBiV6aNDwy1BlCBp3+/0R
9MF60LIWVWi/llc3KF4rdKPQt23mb59aiNangwjBNDk/G7/lXV7NK+YhBOG+
KUYpJ/hp3gNaPKYcVE7ywnZ6vLShglafWrm3JpsiTAhbFCYwo7sHyQ+4fhUw
W8uePr0xgaaQ1Y3Z/m3atixdueDNADHXj7+pWyKNehH3twSTliKLMExvkrDg
e64DcZmGoIb5TR1tLDMnUX1iozeWje5wX4mKy7bLVbbkCMj8eg0KvkVWQThY
ezUj1biPa98GXvD9Fvz/vP1/9Si+cA==
         "], $CellContext`IC9$$ = {{1, 1, 0}, {1, 1, 0}, {0, 0, 
         0}}, $CellContext`latsize$$ = 4, $CellContext`m$$ = 
        False, $CellContext`mode$$ = 0, $CellContext`p$$ = 
        0.37, $CellContext`rulenum$$ = 20589927564417919, $CellContext`SR$$ = 
        428, $CellContext`t$$ = 30}, "ControllerVariables" :> {
        Hold[$CellContext`rulenum$$, $CellContext`rulenum$1396$$, 0], 
        Hold[$CellContext`t$$, $CellContext`t$1397$$, 0], 
        Hold[$CellContext`m$$, $CellContext`m$1398$$, False], 
        Hold[$CellContext`mode$$, $CellContext`mode$1399$$, False], 
        Hold[$CellContext`p$$, $CellContext`p$1400$$, 0], 
        Hold[$CellContext`SR$$, $CellContext`SR$1401$$, 0], 
        Hold[$CellContext`latsize$$, $CellContext`latsize$1402$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> (SeedRandom[$CellContext`SR$$]; $CellContext`IC1 = Table[
          If[RandomReal[] < $CellContext`p$$, 1, 0], {40}, {
          40}]; $CellContext`IC2 = 
        Module[{$CellContext`out$ = Table[0, {40}, {40}]}, 
          Part[$CellContext`out$, 
             Span[19, 21], 
             Span[
             19, 21]] = $CellContext`IC9$$; $CellContext`out$]; \
$CellContext`IC3 = Normal[
          SparseArray[Condition[{
              Pattern[$CellContext`i$, 
               Blank[]], 
              Pattern[$CellContext`j$, 
               Blank[]]}, 
             And[
             Mod[$CellContext`i$, $CellContext`latsize$$] == 0, 
              Mod[$CellContext`j$, $CellContext`latsize$$] == 0]] -> 1, {40, 
           40}]]; $CellContext`BCA$$ = $CellContext`BCA2DEvolveList[
          $CellContext`GeneralBlockRules[
           Round[$CellContext`rulenum$$]], 
          
          Which[$CellContext`mode$$ == 
           0, $CellContext`IC1, $CellContext`mode$$ == 
           1, $CellContext`IC2, $CellContext`mode$$ == 2, $CellContext`IC3], 
          100]; Grid[{{
           Dynamic[
            ArrayPlot[
             Part[$CellContext`BCA$$, $CellContext`t$$], 
             Mesh -> $CellContext`m$$, ImageSize -> $CellContext`IS, Frame -> 
             False]], 
           ArrayPlot[
            Map[Mean, 
             Map[Transpose, $CellContext`BCA$$]], ImageSize -> 
            Round[($CellContext`IS/100) 40], ColorFunction -> 
            "LightTemperatureMap", Frame -> False]}, {
           ArrayPlot[
            Reverse[
             Transpose[
              Map[Mean, $CellContext`BCA$$]]], ImageSize -> $CellContext`IS, 
            ColorFunction -> "LightTemperatureMap", Frame -> False], 
           ArrayPlot[
            Mean[$CellContext`BCA$$], ImageSize -> 
            Round[($CellContext`IS/100) 40] + 1, ColorFunction -> 
            "LightTemperatureMap", Frame -> False]}}, Spacings -> {0, 0}]), 
      "Specifications" :> {{{$CellContext`rulenum$$, 20589927564417919, 
          "rule"}, 0, 18446744073709551615, ImageSize -> Tiny}, 
        Spacer[45], 
        Row[{
          Spacer[35], 
          Dynamic[
           Round[$CellContext`rulenum$$]]}], 
        Spacer[
        45], {{$CellContext`t$$, 30, "time"}, 1, 100, 1, Appearance -> 
         "Labeled", ImageSize -> Tiny}, {{$CellContext`m$$, False, "mesh"}, {
         False -> "off", True -> "on"}}, 
        Delimiter, {{$CellContext`mode$$, 0, " "}, {
         0 -> "", 1 -> "", 2 -> ""}, Enabled -> False, ControlPlacement -> 1}, 
        Row[{
          Text[
           Style["Initial conditions:", Medium]], 
          Manipulate`Place[1]}], {{$CellContext`p$$, 0.37, "density"}, 0, 1, 
         0.01, ImageSize -> Tiny, ControlPlacement -> 
         2}, {{$CellContext`SR$$, 428, "seed "}, 1, 1000, 1, ImageSize -> 
         Tiny, ControlPlacement -> 3}, {{$CellContext`latsize$$, 4, "Size"}, {
         1, 2, 4, 8, 20}, ControlPlacement -> 4}, 
        TabView[{"Random" -> Column[{
             Row[{
               Manipulate`Place[2], 
               Spacer[5], 
               Dynamic[$CellContext`p$$]}], 
             Row[{
               Manipulate`Place[3], 
               Spacer[5], 
               Dynamic[$CellContext`SR$$]}], 
             Button["Set initials", 
              Dynamic[$CellContext`mode$$ = 0]]}], "9 cells block" -> Column[{
             Row[{
               Grid[{{
                  Button[
                  " ", Part[$CellContext`IC9$$, 1, 1] = 
                   1 - Part[$CellContext`IC9$$, 1, 1], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 1, 1]]], 
                   Appearance -> "Palette"], 
                  Button[
                  " ", Part[$CellContext`IC9$$, 1, 2] = 
                   1 - Part[$CellContext`IC9$$, 1, 2], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 1, 2]]], 
                   Appearance -> "Palette"], 
                  Button[
                  " ", Part[$CellContext`IC9$$, 1, 3] = 
                   1 - Part[$CellContext`IC9$$, 1, 3], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 1, 3]]], 
                   Appearance -> "Palette"]}, {
                  Button[
                  " ", Part[$CellContext`IC9$$, 2, 1] = 
                   1 - Part[$CellContext`IC9$$, 2, 1], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 2, 1]]], 
                   Appearance -> "Palette"], 
                  Button[
                  " ", Part[$CellContext`IC9$$, 2, 2] = 
                   1 - Part[$CellContext`IC9$$, 2, 2], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 2, 2]]], 
                   Appearance -> "Palette"], 
                  Button[
                  " ", Part[$CellContext`IC9$$, 2, 3] = 
                   1 - Part[$CellContext`IC9$$, 2, 3], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 2, 3]]], 
                   Appearance -> "Palette"]}, {
                  Button[
                  " ", Part[$CellContext`IC9$$, 3, 1] = 
                   1 - Part[$CellContext`IC9$$, 3, 1], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 3, 1]]], 
                   Appearance -> "Palette"], 
                  Button[
                  " ", Part[$CellContext`IC9$$, 3, 2] = 
                   1 - Part[$CellContext`IC9$$, 3, 2], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 3, 2]]], 
                   Appearance -> "Palette"], 
                  Button[
                  " ", Part[$CellContext`IC9$$, 3, 3] = 
                   1 - Part[$CellContext`IC9$$, 3, 3], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 3, 3]]], 
                   Appearance -> "Palette"]}}, Spacings -> {0.2, 0.4}, Frame -> 
                All, FrameStyle -> Directive[
                  GrayLevel[0.5]]]}], 
             Button["Set initials", 
              Dynamic[$CellContext`mode$$ = 0; $CellContext`mode$$ = 1]]}], 
          "Lattice" -> Column[{
             Manipulate`Place[4], 
             Row[{
               Button["Set initials", 
                Dynamic[$CellContext`mode$$ = 2]]}]}]}], Delimiter, 
        Text[
         Style["Density:", Medium]], 
        Row[{
          Dynamic[
           ListLinePlot[
            Map[$CellContext`NumOfBlack, $CellContext`BCA$$], PlotRange -> 
            All]]}], {{$CellContext`IC9$$, {{1, 1, 0}, {1, 1, 0}, {0, 0, 0}}},
          ControlType -> None}, {{$CellContext`BCA$$, CompressedData["
1:eJyVnVuSHDuTnBGmleht1qMljJmetf83zc/OBNw/d2STzcPqKiQQ4beo6hv7
/O///n//57//11rr//7P3/96/q41a+bP3/nz4Ofv+rP0PH7u/Nn2s/+9fZaf
4z9/nrefk081rTlPwTl7tO9p+V6c9+FT/4Xxp+kDas05P+O1Xm4P+LN59p5d
fTavn4fvmiBcu9actmuk6ovqaLihiWJr9OSptMEcxGNlXspPn937Ob6t2ARe
jV+HXlwq1OPJK+kxSxGNmLHOdtFrgxASh6qefX0+CRvhf5ioZ69ucui1ZzdF
ZNeW4c3TEfpg2SlWBzZ2SaxQO0Vedc+d8/6dGzVonXrHgXe+bIBccUuhTNCB
NufI0RkTAqzy/k3btmqPm3Y+rsq502p3VM0PiJNeM+ppcxTAE8Ahf8zapom2
6ohhlZTsoZAsy2xSwbUckY7pAWRNdk7fAyfAIv6ZQ2mkhmyAuunM2Du0r28H
68axt4jZs207CROWS/hJipbqhzgtWzg6vZZHm3f/Xt9PP0cFPNUfw064dGRl
CN6UiV0SXmUz3uAkzUR4fdJK77PqLD16xmHkP/i/B2Wr8z5Pj8AcaTcEvqsY
Pxmsg3CAagdsh+PM2EtTZledPNueTeLRceU4BVk0FXLExtevWU7XAeS6Clgx
D5HfJh/NlwzfaOFjxzHnHD7R0DLH9TMUdudAlucDq2bwDJF4c6LlXHcAxktu
s17IquUBr/bvshuhyHskssBKyimG6rItPXa9o7xvHtdG+uk5hPpE9efhm9Qt
hfB9tXBHVU4RS00+jJc9/YqHO1/FuMP56XnG4eUn2o2WU/AboWboJE6Lbij7
lD3jirj+wS2NPlBEv2OKZlIyrS9QEvxd3qOgqHUwHvgjEI7I7swJ5G67n2mt
sb4wYONm9Dp0wnEubf6byEZ8oPvkyOH2krT9lIpLa0rySqRefuNVrMt5bTkP
jrsEs45IAt6eJY4KI3jkuVqqwZ0xOhKAOZcgt3mk1TQNnCettj9IEgvewTGe
+hzFqdLcucsS+aPgQvANpWx6lBMdD3XPqfmhBfTpaKdAqikB1+jU4ijKgMlT
OASymJ56Y0dMX4vCwi5d9T+HlUZjazSxNNuRVym1z61Scd4cv4ck+qNS6Tu1
UX3YMXrA7KbnxQB+6GvZxmSpnXWw6CDKJ1dyQvJjfSQ1rsxuixk81w/wt6HY
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
R0KxMuS6NRLiNHiJskhIPblUb7JaayqyNLWI0EsXPYNISx+o3KSRRxOnGVYd
sqqbIXVBekgxHy50CQEVbPUNScu1bGztSo+UNXWcxs5ttBik2GpnocD6yHIm
z9vWn4fLGY6mqSSW2rOArSfXhrmY5bjgL0RIWtzAlTkbGa7q8OW0VZW8tNH0
qqZVr36JacsMmHJepb7GcuLv3ti87QDCgxaJYHbe/FhUSEnkeI7RxyDRU7cx
9I8IqH6aNaonwoAbNDQJXAz6vtiYFFxTLFOmpT//wmNODvRbWDe+m9A2snhY
cYq/qRuQYgpu9Qm8EQrtkv3ewWljruVxU88HANq7BxWlTwjdLqfohGxbViUn
UGKQyXMSs5Yj8eq23msYti6v4XqvJNeGOVWKled+hqiL1E9jffL70x+TMvGH
1ed1pA36YieGsnK/VQvR/26bNYYUvppJ6WGLCimJeZzhCj9uLkQKc4zqIDEd
HoXN9xYEut3UAjnLy8JfoKM0FHhYrQkimk6cZlgf29yHq1TetAdhaBiBIFZU
MOsr1ORI2yhFCS/dSHk28qaeRxYPMtfFlcb0kpZbAuv05gQaXwaqTIcjcoH3
5hZMSjL5fLVQVfLXahg2yuJrGNfUr3LPaWiDOa1RlTxz0qqLcfQWYpOp4VEI
GfqsbbFnPUpTeJZI9KZ0evO9oFK+kdxSeZZtoG7XTJ+3QsmBZxQmNw4OIaw5
QOFU5BZU9vWxik2Sgo7O1lFKhqIB+bWYgSulDX9NoZvwjNCl/tfwmOwOO9mv
U6LplkgbO5CzeWutPcQuQNS/bHN8YGwSAMZay5//bgncsXJEq2yL36flTggF
erFQVfKXyVO+kheqxDwP6VNJWy6nw43L79NK7rY01+oywd8GBtNcsRjQW6UI
/VjPyNC2KbXLvN22xf9/OjYokbu8cPjGVGxkilvl4fcvmZbLhJy3wWZp2Ny1
AjlGl0FaOJ0T8xEET2L8+8YeVjRgToBOgedGy183S8RK03t9+OB1BQIbJXur
0JUL3k29YaGmWyK1M9lO8oykldbjH09SjiIaxfHVaUi8uqSPblLHJ3/pSA4q
9KcT9iTA9DqYfSSHxlWQvJTTdGPVGoSx+r93qdWb0JU7meZKOIILfogRasEd
h3ublPELLbRBY0pVacy43zZb08QGoT/kdXzUjLLE7w9rlUWYHCBnzAdfOnrF
3nZyoQ9SbOhhhe4ZgW2qW9WG6NEP57ApJIgg+fbBYuZnnY15y5DBB6+7om5V
z410MYsn4H1TUhinbonUypIA+PpiEpFY5Vi2AyG1r86KOs1r89cp1LgyvSnw
tO9XtOmYleUhFGKfbB1pEfdSPWtkRuZc8o3BvdnWucPDPqLmiEsMCGpWi9n2
QxDgtsTqt234eCi3xahz2d2Iz1fpiMnyKe+R2cms2Cp+qBesPK9+XrFvJPm7
Kx7TOmlvPW5QEIGpNZT3PQiDI0UtSixj1DOMqVGESQhpySBpQHee0wXL8WFI
LzxiUk+Xs75pRuXA+7fZtRgsNgHSgoS53v56i5RFNtKRHAYI4vgEMSchUT+7
KCd1tEHi6RIwP9WnY/rvF2jVFyueN0NqoxJGnkKlBiV6aNDwy1BlCBp3+/0R
9MF60LIWVWi/llc3KF4rdKPQt23mb59aiNangwjBNDk/G7/lXV7NK+YhBOG+
KUYpJ/hp3gNaPKYcVE7ywnZ6vLShglafWrm3JpsiTAhbFCYwo7sHyQ+4fhUw
W8uePr0xgaaQ1Y3Z/m3atixdueDNADHXj7+pWyKNehH3twSTliKLMExvkrDg
e64DcZmGoIb5TR1tLDMnUX1iozeWje5wX4mKy7bLVbbkCMj8eg0KvkVWQThY
ezUj1biPa98GXvD9Fvz/vP1/9Si+cA==
          "]}, ControlType -> None}}, 
      "Options" :> {
       ControlPlacement -> Left, TrackedSymbols -> True, FrameMargins -> 0, 
        AutorunSequencing -> {1}}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{640., {232., 237.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({{$CellContext`IC1 = CompressedData["
1:eJxtlMF1wzAMQ8Fu0lvn6QhdoPvf+mIT+JDTvDi2ZJKgADCfP7/fPx+SvvbS
aOZ1XQ/Xhld5fAVcv9fmnbLBd9QdzMq52hzvuboL6S58XwrM/s5WTJa2LRdx
qZT3crfkLdfJiy09nCVnGPfu04lKStrGmaZhrSqtSqmOwt0sGhgKU1ZkAIhC
OcZNw2Llux9BGM0PtZwe3OOOLgoKC3PDzQSmI3tHITdYevStBrX2UQ5HYR6Q
IasRTJq4++mgH43L4rbeIfHDwDhNR1GMEzKg0aqWooDmtKrmdeA+bCGajKSZ
DPnQmb+y7bFj60ZVzPaPgsgVekiAlnpzhNTstSVwOt29D065UVOQtIYLMuht
q3Z2e+mY6NCmbLSdovdDiRqumhj+GhCmHFi2Fq/SFZSlzcPckVvMUVAiBwZp
bZE8YdXqW28dgiDzByOFBRs=
          "], $CellContext`IC2 = CompressedData["
1:eJxTTMoPSmJiYGDQgOJRMApGwSgYBaOAHAAAb0UB+Q==
          "], $CellContext`IC3 = CompressedData["
1:eJxTTMoPSmJiYGDQgOIBBIxE4oECo+6jDIy6jzIw6j7KwKj7KANEuQ8AkAAC
XQ==
          "], $CellContext`BCA2DEvolveList[
           Pattern[$CellContext`rule, 
            Blank[]], 
           Pattern[$CellContext`init, 
            Blank[]], 
           Pattern[$CellContext`t, 
            Blank[]]] := 
         FoldList[$CellContext`BCA2DStep[$CellContext`rule, #, #2]& , \
$CellContext`init, 
           Range[$CellContext`t]], $CellContext`BCA2DStep[
           Pattern[$CellContext`rule, 
            Blank[]], 
           Pattern[$CellContext`a, 
            Blank[]], 
           Pattern[$CellContext`d, 
            Blank[]]] := RotateRight[
           Map[RotateRight[#, $CellContext`d]& , 
            (Apply[Join, 
             Map[Join[
               Apply[Sequence, #], 2]& , #, {1}]]& )[
             ReplaceAll[
              Partition[
               RotateLeft[
                Map[
                RotateLeft[#, $CellContext`d]& , $CellContext`a], \
$CellContext`d], {2, 
               2}], $CellContext`rule]]], $CellContext`d], \
$CellContext`GeneralBlockRules[
           Pattern[$CellContext`rule, 
            Blank[]]] := MapThread[Rule, 
           ({#, 
            Part[#, IntegerDigits[$CellContext`rule, 16, 16] + 1]}& )[
            Sort[
             Tuples[
              Tuples[{1, 0}, 2], 2]]]], $CellContext`IS = 
         300, $CellContext`NumOfBlack[
           Pattern[$CellContext`s, 
            Blank[]]] := 
         Apply[Plus, $CellContext`s, {0, 1}]/
          Length[$CellContext`s]^2}; ($CellContext`IS = 
         300; $CellContext`GeneralBlockRules[
           Pattern[$CellContext`rule, 
            Blank[]]] := MapThread[Rule, 
           ({#, 
            Part[#, IntegerDigits[$CellContext`rule, 16, 16] + 1]}& )[
            Sort[
             Tuples[
              Tuples[{1, 0}, 2], 2]]]]; $CellContext`BCA2DStep[
           Pattern[$CellContext`rule, 
            Blank[]], 
           Pattern[$CellContext`a, 
            Blank[]], 
           Pattern[$CellContext`d, 
            Blank[]]] := RotateRight[
           Map[RotateRight[#, $CellContext`d]& , 
            (Apply[Join, 
             Map[Join[
               Apply[Sequence, #], 2]& , #, {1}]]& )[
             ReplaceAll[
              Partition[
               RotateLeft[
                Map[
                RotateLeft[#, $CellContext`d]& , $CellContext`a], \
$CellContext`d], {2, 
               2}], $CellContext`rule]]], $CellContext`d]; \
$CellContext`BCA2DEvolveList[
           Pattern[$CellContext`rule, 
            Blank[]], 
           Pattern[$CellContext`init, 
            Blank[]], 
           Pattern[$CellContext`t, 
            Blank[]]] := 
         FoldList[$CellContext`BCA2DStep[$CellContext`rule, #, #2]& , \
$CellContext`init, 
           Range[$CellContext`t]]; $CellContext`NumOfBlack[
           Pattern[$CellContext`s, 
            Blank[]]] := 
         Apply[Plus, $CellContext`s, {0, 1}]/Length[$CellContext`s]^2)}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->72325148]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SnapshotsSection"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`BCA$$ = CompressedData["
1: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
    "], $CellContext`IC9$$ = {{1, 1, 0}, {1, 1, 0}, {0, 0, 
    0}}, $CellContext`latsize$$ = 4, $CellContext`m$$ = 
    False, $CellContext`mode$$ = 1, $CellContext`p$$ = 
    0.5, $CellContext`rulenum$$ = 261861251725805535, $CellContext`SR$$ = 
    1, $CellContext`t$$ = 82, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"1. Reversible isotropic rule: Twisted star\"" :> {$CellContext`IC9$$ = \
{{1, 1, 0}, {1, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 261861251725805535, $CellContext`t$$ = 
       82}, "\"2. Reversible isotropic rule: Flower\"" :> {$CellContext`IC9$$ = \
{{1, 1, 0}, {1, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 261861260315283135, $CellContext`t$$ = 
       100}, "\"3. Reversible isotropic rule: Particle beams radiator\"" :> \
{$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 261583088162540415, $CellContext`t$$ = 
       40}, "\"4. Reversible isotropic rule: One particle radiator\"" :> \
{$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 261583058097638895, $CellContext`t$$ = 
       34}, "\"5. Reversible isotropic rule: Randomness\"" :> \
{$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 261583083867180735, $CellContext`t$$ = 
       49}, "\"6. Reversible isotropic rule: Radiating mass\"" :> \
{$CellContext`IC9$$ = {{0, 0, 1}, {0, 0, 0}, {1, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 261861234545741295, $CellContext`t$$ = 
       80}, "\"7. Reversible isotropic rule: Regular behaviour\"" :> \
{$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 1068396996939006495, $CellContext`t$$ = 
       30}, "\"8. Reversible non-isotropic rule: Chessboard generated by mass\
\"" :> {$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 
         0}}; $CellContext`mode$$ = 1, $CellContext`rulenum$$ = 
       1047822631656183375, $CellContext`t$$ = 26}, 
     "\"9. Irreversible isotropic rule: Claster generation\"" :> \
{$CellContext`mode$$ = 0, $CellContext`p$$ = 0.6, $CellContext`SR$$ = 
       1, $CellContext`rulenum$$ = 286968494657535, $CellContext`t$$ = 49}, 
     "\"10. Irreversible isotropic rule: Drifting clusters\"" :> \
{$CellContext`mode$$ = 0, $CellContext`p$$ = 0.37, $CellContext`SR$$ = 
       428, $CellContext`rulenum$$ = 2540967335796735, $CellContext`t$$ = 30},
      "\"11. Reversible isotropic rule: Random diamond in frame\"" :> \
{$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 1068967613401572495, $CellContext`t$$ = 
       19}, "\"12. Reversible isotropic rule: Triangle\"" :> \
{$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 264401286749934735, $CellContext`t$$ = 
       33}, "\"13. Reversible isotropic rule: Randomness in frame\"" :> \
{$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 263551407201589215, $CellContext`t$$ = 
       43}, "\"14. Reversible isotropic rule: 4 particles\"" :> \
{$CellContext`IC9$$ = {{1, 1, 0}, {1, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 261583294270638975, $CellContext`t$$ = 
       11}, "\"15. Reversible non-isotropic rule: Randomness evalution\"" :> \
{$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 14520071049273749310, $CellContext`t$$ = 
       21}, "\"16. Irreversible isotropic rule: Prime particles\"" :> \
{$CellContext`IC9$$ = {{1, 1, 0}, {1, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 20590133722848127, $CellContext`t$$ = 30},
      "\"17. Irreversible non-isotropic rule: Ordering\"" :> \
{$CellContext`mode$$ = 0, $CellContext`p$$ = 0.37, $CellContext`SR$$ = 
       428, $CellContext`rulenum$$ = 20589927564417919, $CellContext`t$$ = 
       30}}, Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
    Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
    Typeset`specs$$ = {{{
       Hold[$CellContext`rulenum$$], 261861251725805535, "rule"}, 0, 
      18446744073709551615}, {
      Hold[
       Spacer[45]], Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Row[{
         Spacer[35], 
         Dynamic[
          Round[$CellContext`rulenum$$]]}]], 
      Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Spacer[45]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`t$$], 82, "time"}, 1, 100, 1}, {{
       Hold[$CellContext`m$$], False, "mesh"}, {
      False -> "off", True -> "on"}}, {{
       Hold[$CellContext`mode$$], 1, " "}, {0 -> "", 1 -> "", 2 -> ""}}, {
      Hold[
       Row[{
         Text[
          Style["Initial conditions:", Medium]], 
         Manipulate`Place[1]}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`p$$], 0.5, "density"}, 0, 1, 0.01}, {{
       Hold[$CellContext`SR$$], 1, "seed "}, 1, 1000, 1}, {{
       Hold[$CellContext`latsize$$], 4, "Size"}, {1, 2, 4, 8, 20}}, {
      Hold[
       TabView[{"Random" -> Column[{
            Row[{
              Manipulate`Place[2], 
              Spacer[5], 
              Dynamic[$CellContext`p$$]}], 
            Row[{
              Manipulate`Place[3], 
              Spacer[5], 
              Dynamic[$CellContext`SR$$]}], 
            Button["Set initials", 
             Dynamic[$CellContext`mode$$ = 0]]}], "9 cells block" -> Column[{
            Row[{
              Grid[{{
                 Button[
                 " ", Part[$CellContext`IC9$$, 1, 1] = 
                  1 - Part[$CellContext`IC9$$, 1, 1], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 1, 1]]], 
                  Appearance -> "Palette"], 
                 Button[
                 " ", Part[$CellContext`IC9$$, 1, 2] = 
                  1 - Part[$CellContext`IC9$$, 1, 2], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 1, 2]]], 
                  Appearance -> "Palette"], 
                 Button[
                 " ", Part[$CellContext`IC9$$, 1, 3] = 
                  1 - Part[$CellContext`IC9$$, 1, 3], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 1, 3]]], 
                  Appearance -> "Palette"]}, {
                 Button[
                 " ", Part[$CellContext`IC9$$, 2, 1] = 
                  1 - Part[$CellContext`IC9$$, 2, 1], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 2, 1]]], 
                  Appearance -> "Palette"], 
                 Button[
                 " ", Part[$CellContext`IC9$$, 2, 2] = 
                  1 - Part[$CellContext`IC9$$, 2, 2], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 2, 2]]], 
                  Appearance -> "Palette"], 
                 Button[
                 " ", Part[$CellContext`IC9$$, 2, 3] = 
                  1 - Part[$CellContext`IC9$$, 2, 3], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 2, 3]]], 
                  Appearance -> "Palette"]}, {
                 Button[
                 " ", Part[$CellContext`IC9$$, 3, 1] = 
                  1 - Part[$CellContext`IC9$$, 3, 1], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 3, 1]]], 
                  Appearance -> "Palette"], 
                 Button[
                 " ", Part[$CellContext`IC9$$, 3, 2] = 
                  1 - Part[$CellContext`IC9$$, 3, 2], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 3, 2]]], 
                  Appearance -> "Palette"], 
                 Button[
                 " ", Part[$CellContext`IC9$$, 3, 3] = 
                  1 - Part[$CellContext`IC9$$, 3, 3], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 3, 3]]], 
                  Appearance -> "Palette"]}}, Spacings -> {0.2, 0.4}, Frame -> 
               All, FrameStyle -> Directive[
                 GrayLevel[0.5]]]}], 
            Button["Set initials", 
             Dynamic[$CellContext`mode$$ = 0; $CellContext`mode$$ = 1]]}], 
         "Lattice" -> Column[{
            Manipulate`Place[4], 
            Row[{
              Button["Set initials", 
               Dynamic[$CellContext`mode$$ = 2]]}]}]}]], 
      Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Text[
        Style["Density:", Medium]]], Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Row[{
         Dynamic[
          ListLinePlot[
           Map[$CellContext`NumOfBlack, $CellContext`BCA$$], PlotRange -> 
           All]]}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`IC9$$], {{1, 1, 0}, {1, 1, 0}, {0, 0, 0}}}}, {{
       Hold[$CellContext`BCA$$], CompressedData["
1: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
       "]}}}, Typeset`size$$ = {421., {210.5, 215.5}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`rulenum$1493$$ = 0, $CellContext`t$1494$$ = 
    0, $CellContext`m$1495$$ = False, $CellContext`mode$1496$$ = 
    False, $CellContext`p$1497$$ = 0, $CellContext`SR$1498$$ = 
    0, $CellContext`latsize$1499$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, "Variables" :> {$CellContext`BCA$$ = CompressedData["
1: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
         "], $CellContext`IC9$$ = {{1, 1, 0}, {1, 1, 0}, {0, 0, 
         0}}, $CellContext`latsize$$ = 4, $CellContext`m$$ = 
        False, $CellContext`mode$$ = 1, $CellContext`p$$ = 
        0.5, $CellContext`rulenum$$ = 261861251725805535, $CellContext`SR$$ = 
        1, $CellContext`t$$ = 82}, "ControllerVariables" :> {
        Hold[$CellContext`rulenum$$, $CellContext`rulenum$1493$$, 0], 
        Hold[$CellContext`t$$, $CellContext`t$1494$$, 0], 
        Hold[$CellContext`m$$, $CellContext`m$1495$$, False], 
        Hold[$CellContext`mode$$, $CellContext`mode$1496$$, False], 
        Hold[$CellContext`p$$, $CellContext`p$1497$$, 0], 
        Hold[$CellContext`SR$$, $CellContext`SR$1498$$, 0], 
        Hold[$CellContext`latsize$$, $CellContext`latsize$1499$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> (SeedRandom[$CellContext`SR$$]; $CellContext`IC1 = Table[
          If[RandomReal[] < $CellContext`p$$, 1, 0], {40}, {
          40}]; $CellContext`IC2 = 
        Module[{$CellContext`out$ = Table[0, {40}, {40}]}, 
          Part[$CellContext`out$, 
             Span[19, 21], 
             Span[
             19, 21]] = $CellContext`IC9$$; $CellContext`out$]; \
$CellContext`IC3 = Normal[
          SparseArray[Condition[{
              Pattern[$CellContext`i$, 
               Blank[]], 
              Pattern[$CellContext`j$, 
               Blank[]]}, 
             And[
             Mod[$CellContext`i$, $CellContext`latsize$$] == 0, 
              Mod[$CellContext`j$, $CellContext`latsize$$] == 0]] -> 1, {40, 
           40}]]; $CellContext`BCA$$ = $CellContext`BCA2DEvolveList[
          $CellContext`GeneralBlockRules[
           Round[$CellContext`rulenum$$]], 
          
          Which[$CellContext`mode$$ == 
           0, $CellContext`IC1, $CellContext`mode$$ == 
           1, $CellContext`IC2, $CellContext`mode$$ == 2, $CellContext`IC3], 
          100]; Grid[{{
           Dynamic[
            ArrayPlot[
             Part[$CellContext`BCA$$, $CellContext`t$$], 
             Mesh -> $CellContext`m$$, ImageSize -> $CellContext`IS, Frame -> 
             False]], 
           ArrayPlot[
            Map[Mean, 
             Map[Transpose, $CellContext`BCA$$]], ImageSize -> 
            Round[($CellContext`IS/100) 40], ColorFunction -> 
            "LightTemperatureMap", Frame -> False]}, {
           ArrayPlot[
            Reverse[
             Transpose[
              Map[Mean, $CellContext`BCA$$]]], ImageSize -> $CellContext`IS, 
            ColorFunction -> "LightTemperatureMap", Frame -> False], 
           ArrayPlot[
            Mean[$CellContext`BCA$$], ImageSize -> 
            Round[($CellContext`IS/100) 40] + 1, ColorFunction -> 
            "LightTemperatureMap", Frame -> False]}}, Spacings -> {0, 0}]), 
      "Specifications" :> {{{$CellContext`rulenum$$, 261861251725805535, 
          "rule"}, 0, 18446744073709551615, ImageSize -> Tiny}, 
        Spacer[45], 
        Row[{
          Spacer[35], 
          Dynamic[
           Round[$CellContext`rulenum$$]]}], 
        Spacer[
        45], {{$CellContext`t$$, 82, "time"}, 1, 100, 1, Appearance -> 
         "Labeled", ImageSize -> Tiny}, {{$CellContext`m$$, False, "mesh"}, {
         False -> "off", True -> "on"}}, 
        Delimiter, {{$CellContext`mode$$, 1, " "}, {
         0 -> "", 1 -> "", 2 -> ""}, Enabled -> False, ControlPlacement -> 1}, 
        Row[{
          Text[
           Style["Initial conditions:", Medium]], 
          Manipulate`Place[1]}], {{$CellContext`p$$, 0.5, "density"}, 0, 1, 
         0.01, ImageSize -> Tiny, ControlPlacement -> 
         2}, {{$CellContext`SR$$, 1, "seed "}, 1, 1000, 1, ImageSize -> Tiny, 
         ControlPlacement -> 3}, {{$CellContext`latsize$$, 4, "Size"}, {1, 2, 
         4, 8, 20}, ControlPlacement -> 4}, 
        TabView[{"Random" -> Column[{
             Row[{
               Manipulate`Place[2], 
               Spacer[5], 
               Dynamic[$CellContext`p$$]}], 
             Row[{
               Manipulate`Place[3], 
               Spacer[5], 
               Dynamic[$CellContext`SR$$]}], 
             Button["Set initials", 
              Dynamic[$CellContext`mode$$ = 0]]}], "9 cells block" -> Column[{
             Row[{
               Grid[{{
                  Button[
                  " ", Part[$CellContext`IC9$$, 1, 1] = 
                   1 - Part[$CellContext`IC9$$, 1, 1], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 1, 1]]], 
                   Appearance -> "Palette"], 
                  Button[
                  " ", Part[$CellContext`IC9$$, 1, 2] = 
                   1 - Part[$CellContext`IC9$$, 1, 2], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 1, 2]]], 
                   Appearance -> "Palette"], 
                  Button[
                  " ", Part[$CellContext`IC9$$, 1, 3] = 
                   1 - Part[$CellContext`IC9$$, 1, 3], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 1, 3]]], 
                   Appearance -> "Palette"]}, {
                  Button[
                  " ", Part[$CellContext`IC9$$, 2, 1] = 
                   1 - Part[$CellContext`IC9$$, 2, 1], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 2, 1]]], 
                   Appearance -> "Palette"], 
                  Button[
                  " ", Part[$CellContext`IC9$$, 2, 2] = 
                   1 - Part[$CellContext`IC9$$, 2, 2], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 2, 2]]], 
                   Appearance -> "Palette"], 
                  Button[
                  " ", Part[$CellContext`IC9$$, 2, 3] = 
                   1 - Part[$CellContext`IC9$$, 2, 3], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 2, 3]]], 
                   Appearance -> "Palette"]}, {
                  Button[
                  " ", Part[$CellContext`IC9$$, 3, 1] = 
                   1 - Part[$CellContext`IC9$$, 3, 1], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 3, 1]]], 
                   Appearance -> "Palette"], 
                  Button[
                  " ", Part[$CellContext`IC9$$, 3, 2] = 
                   1 - Part[$CellContext`IC9$$, 3, 2], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 3, 2]]], 
                   Appearance -> "Palette"], 
                  Button[
                  " ", Part[$CellContext`IC9$$, 3, 3] = 
                   1 - Part[$CellContext`IC9$$, 3, 3], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 3, 3]]], 
                   Appearance -> "Palette"]}}, Spacings -> {0.2, 0.4}, Frame -> 
                All, FrameStyle -> Directive[
                  GrayLevel[0.5]]]}], 
             Button["Set initials", 
              Dynamic[$CellContext`mode$$ = 0; $CellContext`mode$$ = 1]]}], 
          "Lattice" -> Column[{
             Manipulate`Place[4], 
             Row[{
               Button["Set initials", 
                Dynamic[$CellContext`mode$$ = 2]]}]}]}], Delimiter, 
        Text[
         Style["Density:", Medium]], 
        Row[{
          Dynamic[
           ListLinePlot[
            Map[$CellContext`NumOfBlack, $CellContext`BCA$$], PlotRange -> 
            All]]}], {{$CellContext`IC9$$, {{1, 1, 0}, {1, 1, 0}, {0, 0, 0}}},
          ControlType -> None}, {{$CellContext`BCA$$, CompressedData["
1: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
          "]}, ControlType -> None}}, 
      "Options" :> {
       ControlPlacement -> Left, TrackedSymbols -> True, FrameMargins -> 0, 
        AutorunSequencing -> {1}}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{640., {232., 237.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({{$CellContext`IC1 = CompressedData["
1:eJxtlMF1wzAMQ8Fu0lvn6QhdoPvf+mIT+JDTvDi2ZJKgADCfP7/fPx+SvvbS
aOZ1XQ/Xhld5fAVcv9fmnbLBd9QdzMq52hzvuboL6S58XwrM/s5WTJa2LRdx
qZT3crfkLdfJiy09nCVnGPfu04lKStrGmaZhrSqtSqmOwt0sGhgKU1ZkAIhC
OcZNw2Llux9BGM0PtZwe3OOOLgoKC3PDzQSmI3tHITdYevStBrX2UQ5HYR6Q
IasRTJq4++mgH43L4rbeIfHDwDhNR1GMEzKg0aqWooDmtKrmdeA+bCGajKSZ
DPnQmb+y7bFj60ZVzPaPgsgVekiAlnpzhNTstSVwOt29D065UVOQtIYLMuht
q3Z2e+mY6NCmbLSdovdDiRqumhj+GhCmHFi2Fq/SFZSlzcPckVvMUVAiBwZp
bZE8YdXqW28dgiDzByOFBRs=
          "], $CellContext`IC2 = CompressedData["
1:eJxTTMoPSmJiYGDQgOJRMApGwSgYBaOAHAAAb0UB+Q==
          "], $CellContext`IC3 = CompressedData["
1:eJxTTMoPSmJiYGDQgOIBBIxE4oECo+6jDIy6jzIw6j7KwKj7KANEuQ8AkAAC
XQ==
          "], $CellContext`BCA2DEvolveList[
           Pattern[$CellContext`rule, 
            Blank[]], 
           Pattern[$CellContext`init, 
            Blank[]], 
           Pattern[$CellContext`t, 
            Blank[]]] := 
         FoldList[$CellContext`BCA2DStep[$CellContext`rule, #, #2]& , \
$CellContext`init, 
           Range[$CellContext`t]], $CellContext`BCA2DStep[
           Pattern[$CellContext`rule, 
            Blank[]], 
           Pattern[$CellContext`a, 
            Blank[]], 
           Pattern[$CellContext`d, 
            Blank[]]] := RotateRight[
           Map[RotateRight[#, $CellContext`d]& , 
            (Apply[Join, 
             Map[Join[
               Apply[Sequence, #], 2]& , #, {1}]]& )[
             ReplaceAll[
              Partition[
               RotateLeft[
                Map[
                RotateLeft[#, $CellContext`d]& , $CellContext`a], \
$CellContext`d], {2, 
               2}], $CellContext`rule]]], $CellContext`d], \
$CellContext`GeneralBlockRules[
           Pattern[$CellContext`rule, 
            Blank[]]] := MapThread[Rule, 
           ({#, 
            Part[#, IntegerDigits[$CellContext`rule, 16, 16] + 1]}& )[
            Sort[
             Tuples[
              Tuples[{1, 0}, 2], 2]]]], $CellContext`IS = 
         300, $CellContext`NumOfBlack[
           Pattern[$CellContext`s, 
            Blank[]]] := 
         Apply[Plus, $CellContext`s, {0, 1}]/
          Length[$CellContext`s]^2}; ($CellContext`IS = 
         300; $CellContext`GeneralBlockRules[
           Pattern[$CellContext`rule, 
            Blank[]]] := MapThread[Rule, 
           ({#, 
            Part[#, IntegerDigits[$CellContext`rule, 16, 16] + 1]}& )[
            Sort[
             Tuples[
              Tuples[{1, 0}, 2], 2]]]]; $CellContext`BCA2DStep[
           Pattern[$CellContext`rule, 
            Blank[]], 
           Pattern[$CellContext`a, 
            Blank[]], 
           Pattern[$CellContext`d, 
            Blank[]]] := RotateRight[
           Map[RotateRight[#, $CellContext`d]& , 
            (Apply[Join, 
             Map[Join[
               Apply[Sequence, #], 2]& , #, {1}]]& )[
             ReplaceAll[
              Partition[
               RotateLeft[
                Map[
                RotateLeft[#, $CellContext`d]& , $CellContext`a], \
$CellContext`d], {2, 
               2}], $CellContext`rule]]], $CellContext`d]; \
$CellContext`BCA2DEvolveList[
           Pattern[$CellContext`rule, 
            Blank[]], 
           Pattern[$CellContext`init, 
            Blank[]], 
           Pattern[$CellContext`t, 
            Blank[]]] := 
         FoldList[$CellContext`BCA2DStep[$CellContext`rule, #, #2]& , \
$CellContext`init, 
           Range[$CellContext`t]]; $CellContext`NumOfBlack[
           Pattern[$CellContext`s, 
            Blank[]]] := 
         Apply[Plus, $CellContext`s, {0, 1}]/Length[$CellContext`s]^2)}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->906177433],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`BCA$$ = CompressedData["
1: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
LY8=
    "], $CellContext`IC9$$ = {{1, 1, 0}, {1, 1, 0}, {0, 0, 
    0}}, $CellContext`latsize$$ = 4, $CellContext`m$$ = 
    False, $CellContext`mode$$ = 1, $CellContext`p$$ = 
    0.5, $CellContext`rulenum$$ = 261861260315283135, $CellContext`SR$$ = 
    1, $CellContext`t$$ = 100, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"1. Reversible isotropic rule: Twisted star\"" :> {$CellContext`IC9$$ = \
{{1, 1, 0}, {1, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 261861251725805535, $CellContext`t$$ = 
       82}, "\"2. Reversible isotropic rule: Flower\"" :> {$CellContext`IC9$$ = \
{{1, 1, 0}, {1, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 261861260315283135, $CellContext`t$$ = 
       100}, "\"3. Reversible isotropic rule: Particle beams radiator\"" :> \
{$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 261583088162540415, $CellContext`t$$ = 
       40}, "\"4. Reversible isotropic rule: One particle radiator\"" :> \
{$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 261583058097638895, $CellContext`t$$ = 
       34}, "\"5. Reversible isotropic rule: Randomness\"" :> \
{$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 261583083867180735, $CellContext`t$$ = 
       49}, "\"6. Reversible isotropic rule: Radiating mass\"" :> \
{$CellContext`IC9$$ = {{0, 0, 1}, {0, 0, 0}, {1, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 261861234545741295, $CellContext`t$$ = 
       80}, "\"7. Reversible isotropic rule: Regular behaviour\"" :> \
{$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 1068396996939006495, $CellContext`t$$ = 
       30}, "\"8. Reversible non-isotropic rule: Chessboard generated by mass\
\"" :> {$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 
         0}}; $CellContext`mode$$ = 1, $CellContext`rulenum$$ = 
       1047822631656183375, $CellContext`t$$ = 26}, 
     "\"9. Irreversible isotropic rule: Claster generation\"" :> \
{$CellContext`mode$$ = 0, $CellContext`p$$ = 0.6, $CellContext`SR$$ = 
       1, $CellContext`rulenum$$ = 286968494657535, $CellContext`t$$ = 49}, 
     "\"10. Irreversible isotropic rule: Drifting clusters\"" :> \
{$CellContext`mode$$ = 0, $CellContext`p$$ = 0.37, $CellContext`SR$$ = 
       428, $CellContext`rulenum$$ = 2540967335796735, $CellContext`t$$ = 30},
      "\"11. Reversible isotropic rule: Random diamond in frame\"" :> \
{$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 1068967613401572495, $CellContext`t$$ = 
       19}, "\"12. Reversible isotropic rule: Triangle\"" :> \
{$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 264401286749934735, $CellContext`t$$ = 
       33}, "\"13. Reversible isotropic rule: Randomness in frame\"" :> \
{$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 263551407201589215, $CellContext`t$$ = 
       43}, "\"14. Reversible isotropic rule: 4 particles\"" :> \
{$CellContext`IC9$$ = {{1, 1, 0}, {1, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 261583294270638975, $CellContext`t$$ = 
       11}, "\"15. Reversible non-isotropic rule: Randomness evalution\"" :> \
{$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 14520071049273749310, $CellContext`t$$ = 
       21}, "\"16. Irreversible isotropic rule: Prime particles\"" :> \
{$CellContext`IC9$$ = {{1, 1, 0}, {1, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 20590133722848127, $CellContext`t$$ = 30},
      "\"17. Irreversible non-isotropic rule: Ordering\"" :> \
{$CellContext`mode$$ = 0, $CellContext`p$$ = 0.37, $CellContext`SR$$ = 
       428, $CellContext`rulenum$$ = 20589927564417919, $CellContext`t$$ = 
       30}}, Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
    Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
    Typeset`specs$$ = {{{
       Hold[$CellContext`rulenum$$], 261861260315283135, "rule"}, 0, 
      18446744073709551615}, {
      Hold[
       Spacer[45]], Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Row[{
         Spacer[35], 
         Dynamic[
          Round[$CellContext`rulenum$$]]}]], 
      Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Spacer[45]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`t$$], 100, "time"}, 1, 100, 1}, {{
       Hold[$CellContext`m$$], False, "mesh"}, {
      False -> "off", True -> "on"}}, {{
       Hold[$CellContext`mode$$], 1, " "}, {0 -> "", 1 -> "", 2 -> ""}}, {
      Hold[
       Row[{
         Text[
          Style["Initial conditions:", Medium]], 
         Manipulate`Place[1]}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`p$$], 0.5, "density"}, 0, 1, 0.01}, {{
       Hold[$CellContext`SR$$], 1, "seed "}, 1, 1000, 1}, {{
       Hold[$CellContext`latsize$$], 4, "Size"}, {1, 2, 4, 8, 20}}, {
      Hold[
       TabView[{"Random" -> Column[{
            Row[{
              Manipulate`Place[2], 
              Spacer[5], 
              Dynamic[$CellContext`p$$]}], 
            Row[{
              Manipulate`Place[3], 
              Spacer[5], 
              Dynamic[$CellContext`SR$$]}], 
            Button["Set initials", 
             Dynamic[$CellContext`mode$$ = 0]]}], "9 cells block" -> Column[{
            Row[{
              Grid[{{
                 Button[
                 " ", Part[$CellContext`IC9$$, 1, 1] = 
                  1 - Part[$CellContext`IC9$$, 1, 1], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 1, 1]]], 
                  Appearance -> "Palette"], 
                 Button[
                 " ", Part[$CellContext`IC9$$, 1, 2] = 
                  1 - Part[$CellContext`IC9$$, 1, 2], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 1, 2]]], 
                  Appearance -> "Palette"], 
                 Button[
                 " ", Part[$CellContext`IC9$$, 1, 3] = 
                  1 - Part[$CellContext`IC9$$, 1, 3], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 1, 3]]], 
                  Appearance -> "Palette"]}, {
                 Button[
                 " ", Part[$CellContext`IC9$$, 2, 1] = 
                  1 - Part[$CellContext`IC9$$, 2, 1], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 2, 1]]], 
                  Appearance -> "Palette"], 
                 Button[
                 " ", Part[$CellContext`IC9$$, 2, 2] = 
                  1 - Part[$CellContext`IC9$$, 2, 2], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 2, 2]]], 
                  Appearance -> "Palette"], 
                 Button[
                 " ", Part[$CellContext`IC9$$, 2, 3] = 
                  1 - Part[$CellContext`IC9$$, 2, 3], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 2, 3]]], 
                  Appearance -> "Palette"]}, {
                 Button[
                 " ", Part[$CellContext`IC9$$, 3, 1] = 
                  1 - Part[$CellContext`IC9$$, 3, 1], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 3, 1]]], 
                  Appearance -> "Palette"], 
                 Button[
                 " ", Part[$CellContext`IC9$$, 3, 2] = 
                  1 - Part[$CellContext`IC9$$, 3, 2], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 3, 2]]], 
                  Appearance -> "Palette"], 
                 Button[
                 " ", Part[$CellContext`IC9$$, 3, 3] = 
                  1 - Part[$CellContext`IC9$$, 3, 3], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 3, 3]]], 
                  Appearance -> "Palette"]}}, Spacings -> {0.2, 0.4}, Frame -> 
               All, FrameStyle -> Directive[
                 GrayLevel[0.5]]]}], 
            Button["Set initials", 
             Dynamic[$CellContext`mode$$ = 0; $CellContext`mode$$ = 1]]}], 
         "Lattice" -> Column[{
            Manipulate`Place[4], 
            Row[{
              Button["Set initials", 
               Dynamic[$CellContext`mode$$ = 2]]}]}]}]], 
      Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Text[
        Style["Density:", Medium]]], Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Row[{
         Dynamic[
          ListLinePlot[
           Map[$CellContext`NumOfBlack, $CellContext`BCA$$], PlotRange -> 
           All]]}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`IC9$$], {{1, 1, 0}, {1, 1, 0}, {0, 0, 0}}}}, {{
       Hold[$CellContext`BCA$$], CompressedData["
1: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
LY8=
       "]}}}, Typeset`size$$ = {421., {210.5, 215.5}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`rulenum$1590$$ = 0, $CellContext`t$1591$$ = 
    0, $CellContext`m$1592$$ = False, $CellContext`mode$1593$$ = 
    False, $CellContext`p$1594$$ = 0, $CellContext`SR$1595$$ = 
    0, $CellContext`latsize$1596$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, "Variables" :> {$CellContext`BCA$$ = CompressedData["
1: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
LY8=
         "], $CellContext`IC9$$ = {{1, 1, 0}, {1, 1, 0}, {0, 0, 
         0}}, $CellContext`latsize$$ = 4, $CellContext`m$$ = 
        False, $CellContext`mode$$ = 1, $CellContext`p$$ = 
        0.5, $CellContext`rulenum$$ = 261861260315283135, $CellContext`SR$$ = 
        1, $CellContext`t$$ = 100}, "ControllerVariables" :> {
        Hold[$CellContext`rulenum$$, $CellContext`rulenum$1590$$, 0], 
        Hold[$CellContext`t$$, $CellContext`t$1591$$, 0], 
        Hold[$CellContext`m$$, $CellContext`m$1592$$, False], 
        Hold[$CellContext`mode$$, $CellContext`mode$1593$$, False], 
        Hold[$CellContext`p$$, $CellContext`p$1594$$, 0], 
        Hold[$CellContext`SR$$, $CellContext`SR$1595$$, 0], 
        Hold[$CellContext`latsize$$, $CellContext`latsize$1596$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> (SeedRandom[$CellContext`SR$$]; $CellContext`IC1 = Table[
          If[RandomReal[] < $CellContext`p$$, 1, 0], {40}, {
          40}]; $CellContext`IC2 = 
        Module[{$CellContext`out$ = Table[0, {40}, {40}]}, 
          Part[$CellContext`out$, 
             Span[19, 21], 
             Span[
             19, 21]] = $CellContext`IC9$$; $CellContext`out$]; \
$CellContext`IC3 = Normal[
          SparseArray[Condition[{
              Pattern[$CellContext`i$, 
               Blank[]], 
              Pattern[$CellContext`j$, 
               Blank[]]}, 
             And[
             Mod[$CellContext`i$, $CellContext`latsize$$] == 0, 
              Mod[$CellContext`j$, $CellContext`latsize$$] == 0]] -> 1, {40, 
           40}]]; $CellContext`BCA$$ = $CellContext`BCA2DEvolveList[
          $CellContext`GeneralBlockRules[
           Round[$CellContext`rulenum$$]], 
          
          Which[$CellContext`mode$$ == 
           0, $CellContext`IC1, $CellContext`mode$$ == 
           1, $CellContext`IC2, $CellContext`mode$$ == 2, $CellContext`IC3], 
          100]; Grid[{{
           Dynamic[
            ArrayPlot[
             Part[$CellContext`BCA$$, $CellContext`t$$], 
             Mesh -> $CellContext`m$$, ImageSize -> $CellContext`IS, Frame -> 
             False]], 
           ArrayPlot[
            Map[Mean, 
             Map[Transpose, $CellContext`BCA$$]], ImageSize -> 
            Round[($CellContext`IS/100) 40], ColorFunction -> 
            "LightTemperatureMap", Frame -> False]}, {
           ArrayPlot[
            Reverse[
             Transpose[
              Map[Mean, $CellContext`BCA$$]]], ImageSize -> $CellContext`IS, 
            ColorFunction -> "LightTemperatureMap", Frame -> False], 
           ArrayPlot[
            Mean[$CellContext`BCA$$], ImageSize -> 
            Round[($CellContext`IS/100) 40] + 1, ColorFunction -> 
            "LightTemperatureMap", Frame -> False]}}, Spacings -> {0, 0}]), 
      "Specifications" :> {{{$CellContext`rulenum$$, 261861260315283135, 
          "rule"}, 0, 18446744073709551615, ImageSize -> Tiny}, 
        Spacer[45], 
        Row[{
          Spacer[35], 
          Dynamic[
           Round[$CellContext`rulenum$$]]}], 
        Spacer[
        45], {{$CellContext`t$$, 100, "time"}, 1, 100, 1, Appearance -> 
         "Labeled", ImageSize -> Tiny}, {{$CellContext`m$$, False, "mesh"}, {
         False -> "off", True -> "on"}}, 
        Delimiter, {{$CellContext`mode$$, 1, " "}, {
         0 -> "", 1 -> "", 2 -> ""}, Enabled -> False, ControlPlacement -> 1}, 
        Row[{
          Text[
           Style["Initial conditions:", Medium]], 
          Manipulate`Place[1]}], {{$CellContext`p$$, 0.5, "density"}, 0, 1, 
         0.01, ImageSize -> Tiny, ControlPlacement -> 
         2}, {{$CellContext`SR$$, 1, "seed "}, 1, 1000, 1, ImageSize -> Tiny, 
         ControlPlacement -> 3}, {{$CellContext`latsize$$, 4, "Size"}, {1, 2, 
         4, 8, 20}, ControlPlacement -> 4}, 
        TabView[{"Random" -> Column[{
             Row[{
               Manipulate`Place[2], 
               Spacer[5], 
               Dynamic[$CellContext`p$$]}], 
             Row[{
               Manipulate`Place[3], 
               Spacer[5], 
               Dynamic[$CellContext`SR$$]}], 
             Button["Set initials", 
              Dynamic[$CellContext`mode$$ = 0]]}], "9 cells block" -> Column[{
             Row[{
               Grid[{{
                  Button[
                  " ", Part[$CellContext`IC9$$, 1, 1] = 
                   1 - Part[$CellContext`IC9$$, 1, 1], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 1, 1]]], 
                   Appearance -> "Palette"], 
                  Button[
                  " ", Part[$CellContext`IC9$$, 1, 2] = 
                   1 - Part[$CellContext`IC9$$, 1, 2], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 1, 2]]], 
                   Appearance -> "Palette"], 
                  Button[
                  " ", Part[$CellContext`IC9$$, 1, 3] = 
                   1 - Part[$CellContext`IC9$$, 1, 3], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 1, 3]]], 
                   Appearance -> "Palette"]}, {
                  Button[
                  " ", Part[$CellContext`IC9$$, 2, 1] = 
                   1 - Part[$CellContext`IC9$$, 2, 1], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 2, 1]]], 
                   Appearance -> "Palette"], 
                  Button[
                  " ", Part[$CellContext`IC9$$, 2, 2] = 
                   1 - Part[$CellContext`IC9$$, 2, 2], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 2, 2]]], 
                   Appearance -> "Palette"], 
                  Button[
                  " ", Part[$CellContext`IC9$$, 2, 3] = 
                   1 - Part[$CellContext`IC9$$, 2, 3], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 2, 3]]], 
                   Appearance -> "Palette"]}, {
                  Button[
                  " ", Part[$CellContext`IC9$$, 3, 1] = 
                   1 - Part[$CellContext`IC9$$, 3, 1], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 3, 1]]], 
                   Appearance -> "Palette"], 
                  Button[
                  " ", Part[$CellContext`IC9$$, 3, 2] = 
                   1 - Part[$CellContext`IC9$$, 3, 2], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 3, 2]]], 
                   Appearance -> "Palette"], 
                  Button[
                  " ", Part[$CellContext`IC9$$, 3, 3] = 
                   1 - Part[$CellContext`IC9$$, 3, 3], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 3, 3]]], 
                   Appearance -> "Palette"]}}, Spacings -> {0.2, 0.4}, Frame -> 
                All, FrameStyle -> Directive[
                  GrayLevel[0.5]]]}], 
             Button["Set initials", 
              Dynamic[$CellContext`mode$$ = 0; $CellContext`mode$$ = 1]]}], 
          "Lattice" -> Column[{
             Manipulate`Place[4], 
             Row[{
               Button["Set initials", 
                Dynamic[$CellContext`mode$$ = 2]]}]}]}], Delimiter, 
        Text[
         Style["Density:", Medium]], 
        Row[{
          Dynamic[
           ListLinePlot[
            Map[$CellContext`NumOfBlack, $CellContext`BCA$$], PlotRange -> 
            All]]}], {{$CellContext`IC9$$, {{1, 1, 0}, {1, 1, 0}, {0, 0, 0}}},
          ControlType -> None}, {{$CellContext`BCA$$, CompressedData["
1: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
LY8=
          "]}, ControlType -> None}}, 
      "Options" :> {
       ControlPlacement -> Left, TrackedSymbols -> True, FrameMargins -> 0, 
        AutorunSequencing -> {1}}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{640., {232., 237.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({{$CellContext`IC1 = CompressedData["
1:eJxtlMF1wzAMQ8Fu0lvn6QhdoPvf+mIT+JDTvDi2ZJKgADCfP7/fPx+SvvbS
aOZ1XQ/Xhld5fAVcv9fmnbLBd9QdzMq52hzvuboL6S58XwrM/s5WTJa2LRdx
qZT3crfkLdfJiy09nCVnGPfu04lKStrGmaZhrSqtSqmOwt0sGhgKU1ZkAIhC
OcZNw2Llux9BGM0PtZwe3OOOLgoKC3PDzQSmI3tHITdYevStBrX2UQ5HYR6Q
IasRTJq4++mgH43L4rbeIfHDwDhNR1GMEzKg0aqWooDmtKrmdeA+bCGajKSZ
DPnQmb+y7bFj60ZVzPaPgsgVekiAlnpzhNTstSVwOt29D065UVOQtIYLMuht
q3Z2e+mY6NCmbLSdovdDiRqumhj+GhCmHFi2Fq/SFZSlzcPckVvMUVAiBwZp
bZE8YdXqW28dgiDzByOFBRs=
          "], $CellContext`IC2 = CompressedData["
1:eJxTTMoPSmJiYGDQgOJRMApGwSgYBaOAHAAAb0UB+Q==
          "], $CellContext`IC3 = CompressedData["
1:eJxTTMoPSmJiYGDQgOIBBIxE4oECo+6jDIy6jzIw6j7KwKj7KANEuQ8AkAAC
XQ==
          "], $CellContext`BCA2DEvolveList[
           Pattern[$CellContext`rule, 
            Blank[]], 
           Pattern[$CellContext`init, 
            Blank[]], 
           Pattern[$CellContext`t, 
            Blank[]]] := 
         FoldList[$CellContext`BCA2DStep[$CellContext`rule, #, #2]& , \
$CellContext`init, 
           Range[$CellContext`t]], $CellContext`BCA2DStep[
           Pattern[$CellContext`rule, 
            Blank[]], 
           Pattern[$CellContext`a, 
            Blank[]], 
           Pattern[$CellContext`d, 
            Blank[]]] := RotateRight[
           Map[RotateRight[#, $CellContext`d]& , 
            (Apply[Join, 
             Map[Join[
               Apply[Sequence, #], 2]& , #, {1}]]& )[
             ReplaceAll[
              Partition[
               RotateLeft[
                Map[
                RotateLeft[#, $CellContext`d]& , $CellContext`a], \
$CellContext`d], {2, 
               2}], $CellContext`rule]]], $CellContext`d], \
$CellContext`GeneralBlockRules[
           Pattern[$CellContext`rule, 
            Blank[]]] := MapThread[Rule, 
           ({#, 
            Part[#, IntegerDigits[$CellContext`rule, 16, 16] + 1]}& )[
            Sort[
             Tuples[
              Tuples[{1, 0}, 2], 2]]]], $CellContext`IS = 
         300, $CellContext`NumOfBlack[
           Pattern[$CellContext`s, 
            Blank[]]] := 
         Apply[Plus, $CellContext`s, {0, 1}]/
          Length[$CellContext`s]^2}; ($CellContext`IS = 
         300; $CellContext`GeneralBlockRules[
           Pattern[$CellContext`rule, 
            Blank[]]] := MapThread[Rule, 
           ({#, 
            Part[#, IntegerDigits[$CellContext`rule, 16, 16] + 1]}& )[
            Sort[
             Tuples[
              Tuples[{1, 0}, 2], 2]]]]; $CellContext`BCA2DStep[
           Pattern[$CellContext`rule, 
            Blank[]], 
           Pattern[$CellContext`a, 
            Blank[]], 
           Pattern[$CellContext`d, 
            Blank[]]] := RotateRight[
           Map[RotateRight[#, $CellContext`d]& , 
            (Apply[Join, 
             Map[Join[
               Apply[Sequence, #], 2]& , #, {1}]]& )[
             ReplaceAll[
              Partition[
               RotateLeft[
                Map[
                RotateLeft[#, $CellContext`d]& , $CellContext`a], \
$CellContext`d], {2, 
               2}], $CellContext`rule]]], $CellContext`d]; \
$CellContext`BCA2DEvolveList[
           Pattern[$CellContext`rule, 
            Blank[]], 
           Pattern[$CellContext`init, 
            Blank[]], 
           Pattern[$CellContext`t, 
            Blank[]]] := 
         FoldList[$CellContext`BCA2DStep[$CellContext`rule, #, #2]& , \
$CellContext`init, 
           Range[$CellContext`t]]; $CellContext`NumOfBlack[
           Pattern[$CellContext`s, 
            Blank[]]] := 
         Apply[Plus, $CellContext`s, {0, 1}]/Length[$CellContext`s]^2)}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->459536398],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`BCA$$ = CompressedData["
1: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
    "], $CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 
    0}}, $CellContext`latsize$$ = 4, $CellContext`m$$ = 
    False, $CellContext`mode$$ = 1, $CellContext`p$$ = 
    0.5, $CellContext`rulenum$$ = 261583088162540415, $CellContext`SR$$ = 
    1, $CellContext`t$$ = 40, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"1. Reversible isotropic rule: Twisted star\"" :> {$CellContext`IC9$$ = \
{{1, 1, 0}, {1, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 261861251725805535, $CellContext`t$$ = 
       82}, "\"2. Reversible isotropic rule: Flower\"" :> {$CellContext`IC9$$ = \
{{1, 1, 0}, {1, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 261861260315283135, $CellContext`t$$ = 
       100}, "\"3. Reversible isotropic rule: Particle beams radiator\"" :> \
{$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 261583088162540415, $CellContext`t$$ = 
       40}, "\"4. Reversible isotropic rule: One particle radiator\"" :> \
{$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 261583058097638895, $CellContext`t$$ = 
       34}, "\"5. Reversible isotropic rule: Randomness\"" :> \
{$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 261583083867180735, $CellContext`t$$ = 
       49}, "\"6. Reversible isotropic rule: Radiating mass\"" :> \
{$CellContext`IC9$$ = {{0, 0, 1}, {0, 0, 0}, {1, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 261861234545741295, $CellContext`t$$ = 
       80}, "\"7. Reversible isotropic rule: Regular behaviour\"" :> \
{$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 1068396996939006495, $CellContext`t$$ = 
       30}, "\"8. Reversible non-isotropic rule: Chessboard generated by mass\
\"" :> {$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 
         0}}; $CellContext`mode$$ = 1, $CellContext`rulenum$$ = 
       1047822631656183375, $CellContext`t$$ = 26}, 
     "\"9. Irreversible isotropic rule: Claster generation\"" :> \
{$CellContext`mode$$ = 0, $CellContext`p$$ = 0.6, $CellContext`SR$$ = 
       1, $CellContext`rulenum$$ = 286968494657535, $CellContext`t$$ = 49}, 
     "\"10. Irreversible isotropic rule: Drifting clusters\"" :> \
{$CellContext`mode$$ = 0, $CellContext`p$$ = 0.37, $CellContext`SR$$ = 
       428, $CellContext`rulenum$$ = 2540967335796735, $CellContext`t$$ = 30},
      "\"11. Reversible isotropic rule: Random diamond in frame\"" :> \
{$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 1068967613401572495, $CellContext`t$$ = 
       19}, "\"12. Reversible isotropic rule: Triangle\"" :> \
{$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 264401286749934735, $CellContext`t$$ = 
       33}, "\"13. Reversible isotropic rule: Randomness in frame\"" :> \
{$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 263551407201589215, $CellContext`t$$ = 
       43}, "\"14. Reversible isotropic rule: 4 particles\"" :> \
{$CellContext`IC9$$ = {{1, 1, 0}, {1, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 261583294270638975, $CellContext`t$$ = 
       11}, "\"15. Reversible non-isotropic rule: Randomness evalution\"" :> \
{$CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 14520071049273749310, $CellContext`t$$ = 
       21}, "\"16. Irreversible isotropic rule: Prime particles\"" :> \
{$CellContext`IC9$$ = {{1, 1, 0}, {1, 1, 0}, {0, 0, 0}}; $CellContext`mode$$ = 
        1, $CellContext`rulenum$$ = 20590133722848127, $CellContext`t$$ = 30},
      "\"17. Irreversible non-isotropic rule: Ordering\"" :> \
{$CellContext`mode$$ = 0, $CellContext`p$$ = 0.37, $CellContext`SR$$ = 
       428, $CellContext`rulenum$$ = 20589927564417919, $CellContext`t$$ = 
       30}}, Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
    Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
    Typeset`specs$$ = {{{
       Hold[$CellContext`rulenum$$], 261583088162540415, "rule"}, 0, 
      18446744073709551615}, {
      Hold[
       Spacer[45]], Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Row[{
         Spacer[35], 
         Dynamic[
          Round[$CellContext`rulenum$$]]}]], 
      Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Spacer[45]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`t$$], 40, "time"}, 1, 100, 1}, {{
       Hold[$CellContext`m$$], False, "mesh"}, {
      False -> "off", True -> "on"}}, {{
       Hold[$CellContext`mode$$], 1, " "}, {0 -> "", 1 -> "", 2 -> ""}}, {
      Hold[
       Row[{
         Text[
          Style["Initial conditions:", Medium]], 
         Manipulate`Place[1]}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`p$$], 0.5, "density"}, 0, 1, 0.01}, {{
       Hold[$CellContext`SR$$], 1, "seed "}, 1, 1000, 1}, {{
       Hold[$CellContext`latsize$$], 4, "Size"}, {1, 2, 4, 8, 20}}, {
      Hold[
       TabView[{"Random" -> Column[{
            Row[{
              Manipulate`Place[2], 
              Spacer[5], 
              Dynamic[$CellContext`p$$]}], 
            Row[{
              Manipulate`Place[3], 
              Spacer[5], 
              Dynamic[$CellContext`SR$$]}], 
            Button["Set initials", 
             Dynamic[$CellContext`mode$$ = 0]]}], "9 cells block" -> Column[{
            Row[{
              Grid[{{
                 Button[
                 " ", Part[$CellContext`IC9$$, 1, 1] = 
                  1 - Part[$CellContext`IC9$$, 1, 1], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 1, 1]]], 
                  Appearance -> "Palette"], 
                 Button[
                 " ", Part[$CellContext`IC9$$, 1, 2] = 
                  1 - Part[$CellContext`IC9$$, 1, 2], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 1, 2]]], 
                  Appearance -> "Palette"], 
                 Button[
                 " ", Part[$CellContext`IC9$$, 1, 3] = 
                  1 - Part[$CellContext`IC9$$, 1, 3], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 1, 3]]], 
                  Appearance -> "Palette"]}, {
                 Button[
                 " ", Part[$CellContext`IC9$$, 2, 1] = 
                  1 - Part[$CellContext`IC9$$, 2, 1], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 2, 1]]], 
                  Appearance -> "Palette"], 
                 Button[
                 " ", Part[$CellContext`IC9$$, 2, 2] = 
                  1 - Part[$CellContext`IC9$$, 2, 2], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 2, 2]]], 
                  Appearance -> "Palette"], 
                 Button[
                 " ", Part[$CellContext`IC9$$, 2, 3] = 
                  1 - Part[$CellContext`IC9$$, 2, 3], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 2, 3]]], 
                  Appearance -> "Palette"]}, {
                 Button[
                 " ", Part[$CellContext`IC9$$, 3, 1] = 
                  1 - Part[$CellContext`IC9$$, 3, 1], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 3, 1]]], 
                  Appearance -> "Palette"], 
                 Button[
                 " ", Part[$CellContext`IC9$$, 3, 2] = 
                  1 - Part[$CellContext`IC9$$, 3, 2], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 3, 2]]], 
                  Appearance -> "Palette"], 
                 Button[
                 " ", Part[$CellContext`IC9$$, 3, 3] = 
                  1 - Part[$CellContext`IC9$$, 3, 3], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 3, 3]]], 
                  Appearance -> "Palette"]}}, Spacings -> {0.2, 0.4}, Frame -> 
               All, FrameStyle -> Directive[
                 GrayLevel[0.5]]]}], 
            Button["Set initials", 
             Dynamic[$CellContext`mode$$ = 0; $CellContext`mode$$ = 1]]}], 
         "Lattice" -> Column[{
            Manipulate`Place[4], 
            Row[{
              Button["Set initials", 
               Dynamic[$CellContext`mode$$ = 2]]}]}]}]], 
      Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Text[
        Style["Density:", Medium]]], Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Row[{
         Dynamic[
          ListLinePlot[
           Map[$CellContext`NumOfBlack, $CellContext`BCA$$], PlotRange -> 
           All]]}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`IC9$$], {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}}}, {{
       Hold[$CellContext`BCA$$], CompressedData["
1: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
       "]}}}, Typeset`size$$ = {421., {210.5, 215.5}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`rulenum$1687$$ = 0, $CellContext`t$1688$$ = 
    0, $CellContext`m$1689$$ = False, $CellContext`mode$1690$$ = 
    False, $CellContext`p$1691$$ = 0, $CellContext`SR$1692$$ = 
    0, $CellContext`latsize$1693$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, "Variables" :> {$CellContext`BCA$$ = CompressedData["
1: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
         "], $CellContext`IC9$$ = {{0, 0, 0}, {0, 1, 0}, {0, 0, 
         0}}, $CellContext`latsize$$ = 4, $CellContext`m$$ = 
        False, $CellContext`mode$$ = 1, $CellContext`p$$ = 
        0.5, $CellContext`rulenum$$ = 261583088162540415, $CellContext`SR$$ = 
        1, $CellContext`t$$ = 40}, "ControllerVariables" :> {
        Hold[$CellContext`rulenum$$, $CellContext`rulenum$1687$$, 0], 
        Hold[$CellContext`t$$, $CellContext`t$1688$$, 0], 
        Hold[$CellContext`m$$, $CellContext`m$1689$$, False], 
        Hold[$CellContext`mode$$, $CellContext`mode$1690$$, False], 
        Hold[$CellContext`p$$, $CellContext`p$1691$$, 0], 
        Hold[$CellContext`SR$$, $CellContext`SR$1692$$, 0], 
        Hold[$CellContext`latsize$$, $CellContext`latsize$1693$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> (SeedRandom[$CellContext`SR$$]; $CellContext`IC1 = Table[
          If[RandomReal[] < $CellContext`p$$, 1, 0], {40}, {
          40}]; $CellContext`IC2 = 
        Module[{$CellContext`out$ = Table[0, {40}, {40}]}, 
          Part[$CellContext`out$, 
             Span[19, 21], 
             Span[
             19, 21]] = $CellContext`IC9$$; $CellContext`out$]; \
$CellContext`IC3 = Normal[
          SparseArray[Condition[{
              Pattern[$CellContext`i$, 
               Blank[]], 
              Pattern[$CellContext`j$, 
               Blank[]]}, 
             And[
             Mod[$CellContext`i$, $CellContext`latsize$$] == 0, 
              Mod[$CellContext`j$, $CellContext`latsize$$] == 0]] -> 1, {40, 
           40}]]; $CellContext`BCA$$ = $CellContext`BCA2DEvolveList[
          $CellContext`GeneralBlockRules[
           Round[$CellContext`rulenum$$]], 
          
          Which[$CellContext`mode$$ == 
           0, $CellContext`IC1, $CellContext`mode$$ == 
           1, $CellContext`IC2, $CellContext`mode$$ == 2, $CellContext`IC3], 
          100]; Grid[{{
           Dynamic[
            ArrayPlot[
             Part[$CellContext`BCA$$, $CellContext`t$$], 
             Mesh -> $CellContext`m$$, ImageSize -> $CellContext`IS, Frame -> 
             False]], 
           ArrayPlot[
            Map[Mean, 
             Map[Transpose, $CellContext`BCA$$]], ImageSize -> 
            Round[($CellContext`IS/100) 40], ColorFunction -> 
            "LightTemperatureMap", Frame -> False]}, {
           ArrayPlot[
            Reverse[
             Transpose[
              Map[Mean, $CellContext`BCA$$]]], ImageSize -> $CellContext`IS, 
            ColorFunction -> "LightTemperatureMap", Frame -> False], 
           ArrayPlot[
            Mean[$CellContext`BCA$$], ImageSize -> 
            Round[($CellContext`IS/100) 40] + 1, ColorFunction -> 
            "LightTemperatureMap", Frame -> False]}}, Spacings -> {0, 0}]), 
      "Specifications" :> {{{$CellContext`rulenum$$, 261583088162540415, 
          "rule"}, 0, 18446744073709551615, ImageSize -> Tiny}, 
        Spacer[45], 
        Row[{
          Spacer[35], 
          Dynamic[
           Round[$CellContext`rulenum$$]]}], 
        Spacer[
        45], {{$CellContext`t$$, 40, "time"}, 1, 100, 1, Appearance -> 
         "Labeled", ImageSize -> Tiny}, {{$CellContext`m$$, False, "mesh"}, {
         False -> "off", True -> "on"}}, 
        Delimiter, {{$CellContext`mode$$, 1, " "}, {
         0 -> "", 1 -> "", 2 -> ""}, Enabled -> False, ControlPlacement -> 1}, 
        Row[{
          Text[
           Style["Initial conditions:", Medium]], 
          Manipulate`Place[1]}], {{$CellContext`p$$, 0.5, "density"}, 0, 1, 
         0.01, ImageSize -> Tiny, ControlPlacement -> 
         2}, {{$CellContext`SR$$, 1, "seed "}, 1, 1000, 1, ImageSize -> Tiny, 
         ControlPlacement -> 3}, {{$CellContext`latsize$$, 4, "Size"}, {1, 2, 
         4, 8, 20}, ControlPlacement -> 4}, 
        TabView[{"Random" -> Column[{
             Row[{
               Manipulate`Place[2], 
               Spacer[5], 
               Dynamic[$CellContext`p$$]}], 
             Row[{
               Manipulate`Place[3], 
               Spacer[5], 
               Dynamic[$CellContext`SR$$]}], 
             Button["Set initials", 
              Dynamic[$CellContext`mode$$ = 0]]}], "9 cells block" -> Column[{
             Row[{
               Grid[{{
                  Button[
                  " ", Part[$CellContext`IC9$$, 1, 1] = 
                   1 - Part[$CellContext`IC9$$, 1, 1], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 1, 1]]], 
                   Appearance -> "Palette"], 
                  Button[
                  " ", Part[$CellContext`IC9$$, 1, 2] = 
                   1 - Part[$CellContext`IC9$$, 1, 2], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 1, 2]]], 
                   Appearance -> "Palette"], 
                  Button[
                  " ", Part[$CellContext`IC9$$, 1, 3] = 
                   1 - Part[$CellContext`IC9$$, 1, 3], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 1, 3]]], 
                   Appearance -> "Palette"]}, {
                  Button[
                  " ", Part[$CellContext`IC9$$, 2, 1] = 
                   1 - Part[$CellContext`IC9$$, 2, 1], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 2, 1]]], 
                   Appearance -> "Palette"], 
                  Button[
                  " ", Part[$CellContext`IC9$$, 2, 2] = 
                   1 - Part[$CellContext`IC9$$, 2, 2], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 2, 2]]], 
                   Appearance -> "Palette"], 
                  Button[
                  " ", Part[$CellContext`IC9$$, 2, 3] = 
                   1 - Part[$CellContext`IC9$$, 2, 3], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 2, 3]]], 
                   Appearance -> "Palette"]}, {
                  Button[
                  " ", Part[$CellContext`IC9$$, 3, 1] = 
                   1 - Part[$CellContext`IC9$$, 3, 1], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 3, 1]]], 
                   Appearance -> "Palette"], 
                  Button[
                  " ", Part[$CellContext`IC9$$, 3, 2] = 
                   1 - Part[$CellContext`IC9$$, 3, 2], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 3, 2]]], 
                   Appearance -> "Palette"], 
                  Button[
                  " ", Part[$CellContext`IC9$$, 3, 3] = 
                   1 - Part[$CellContext`IC9$$, 3, 3], Background -> Dynamic[
                    GrayLevel[1 - Part[$CellContext`IC9$$, 3, 3]]], 
                   Appearance -> "Palette"]}}, Spacings -> {0.2, 0.4}, Frame -> 
                All, FrameStyle -> Directive[
                  GrayLevel[0.5]]]}], 
             Button["Set initials", 
              Dynamic[$CellContext`mode$$ = 0; $CellContext`mode$$ = 1]]}], 
          "Lattice" -> Column[{
             Manipulate`Place[4], 
             Row[{
               Button["Set initials", 
                Dynamic[$CellContext`mode$$ = 2]]}]}]}], Delimiter, 
        Text[
         Style["Density:", Medium]], 
        Row[{
          Dynamic[
           ListLinePlot[
            Map[$CellContext`NumOfBlack, $CellContext`BCA$$], PlotRange -> 
            All]]}], {{$CellContext`IC9$$, {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}}},
          ControlType -> None}, {{$CellContext`BCA$$, CompressedData["
1:eJztnUmy7bqtRMXwSNzzeDwER7jt+fdsv71ZiCKQi8U9JeD/TiUoQVEEEiA3
7v/7v/7zz3/97bquf//vv3+8/wsJCflL0mcPICQkJCTkW0oKAgkJCQkJaYXx
Qgr+CAkJCQlpBfICpY9gmZCQkJDfIQkWFpQXokwJCQkJ+fZCIvn/wj3kD0wg
UC8kJCQk5IsKivi8/DjNH8EzISEhIV9TIDMcPv6Ija6QkJCQLyxnN6aQEv/4
VWx0hYSEhHxVYXUFZgaoRa3GRldISEjIl5QEWzF4dD5ZgMxsSsVGV0hISMgx
0ZHyr2B6kj+OHoBMbHPFRldISEjIOQERNZUv21BZ8egxCd/mio2ukJCQkBPy
4gUdfGdi6Sf0f8BTl7ktqdjoCgkJ+cWiIts79J3jDwR2fVL/x182Y6MrJCQk
RIuMgOn2bQOoVf2y/R/0ECd13w+YntILCQkJ+TzJvKCC5Vzk+/b9H/AUZ3ZD
Kja6QkJCvpH4kagEqlP8gcAy4nfv/3hzVmx0hYSE/EQRESs9fliC6SB/S/8H
PRRKg582TU/qhYSEhFCpvOAHt9k4Ff0fd43btw0gA1jrBYGEhITMixc5mrBy
hj8QWEWM/o+7Ufrpg+aWM6ZDQkJCnuJGmDT8cRJkABn9HxYoAqObiRryj+mF
hIT8VGl5wQtG81EFbsFE/8dYHVqEH2aYkNjoCgkJacT29FsQOMEfCKxFpEfK
zGb0f9yN0k8z3G46YTokJORniBMRkvkLhjAgo/9jYBN+WGBC6GYi3ZxUkH9Q
LyQk5GvInRfs4LESA+CWSfR/jHWFUfppgXIDtAc/HDEhsdEVEvKtxfLMzmX3
+QOB3RHpETCwiI7ZZ6L4yQLk+/d/3J4zNrpCQn6HmB6c3F8BgAMZ/R+d0rfv
/6CHYP2V2OgKCflO0vOC5exrHgu3OKL/o7P67fs/4CnY6kZUbHSFhHyojD3p
4WC7/IHAekR6ZCvtvfRpSo7wzh6zU5Y5vc3FN/8+sv+je1Wx0RUS8jXF8LjH
Xy36WNiWEqF8PgTALZjo/xirQ4uCP1bOtyAY3Tz1IP+wXkjIb5AnL4ydc9W/
4JZE9H8sGqaba9+8/6PfPZ0GkKapXhBIyO+U0cofuMMefyCwJyI9YhXW8h00
hUZ4ZzemkFL0fyyZfkxbbHSFhJyRoYcM/jamj6VtKTeUrzgs3DKJ/o+xrjAK
eabeAO25/LEUj+nmKd2MtSH/uF5IyNeTES+MnGndG+AWQvR/dHonC5Do/1CW
DP7YCO6x0RXywwTuQe3wB7MwQLTpY6Giif6PTin6P1ZMD6YtNrpCfquMzjCG
euhW00p/J00BER7c4oj+j85q9H8I0xCMbu6af/3zeiEhu3I6nZrwGri1vOYO
0f/xVGRmT29z8c2/b9z/AQvxvS2o2OgK+WSBMXunHAdgY0SLPpYqmuj/6O0e
zF6j/2PN9NaBYWx0hXy2PHN+Q0/e6Nh43ktTNoQHtySi/2PRMN1ci/4PYRqC
0c1i5+9/Wi/kt4mZy0O3YXjUHbb4A4E9ET36mCbD6P8Y2AT8MfmO6Wbit+3/
gI6wuwEVG10hk0LL8WV3AGAW4thrFiua6P9YAIv+D2kagn1E/8dmwR4bXSGz
0m/nmnruba6FkdGN7dyJqh1y44o30CNbRR9T8xj9HxbQgbj3A/o/6KEkrMRn
TG/qhXxtsUPn2sdJ+EYr3bpdX2r0CNOZA26r3kNTXoQHt3RO8sfRA5Do/1gz
fbj/A3LZ/vZTbHT9eKHusMQfCMxGHNYk3Ep/J00BER7c4jjDHwisIhL64K59
9JiEb3Mdy16j/2PN9LbDxEbXz5d7OuXomTcJ/LHR5XRqwmtoOrW0dukRq08f
k/MY/R8WKAKjm4kaUuv9gP4PesgJPWHG9LZeyElxy3Ea7BAejNk75TgAGyNa
9LFEhtH/0ds9GAKi/2PN9OH+D/vh3NtWhFfD+7ZCkMA9lLXjQADmIT5j+0ZF
E/0fE0Ct6skTb24Y8QdDTN33LdPR/7E2jwc+sDgxDcEfHyTtHryrN7xFoltG
aQqD8Kg7bPEHAnsiujUdt5bvoCk0woO8cPRgY+JABdoE/DH5jgV/MFy+eQP0
fkD/Bz00FcXfiukDer9ZTqdTE15D06mt10iPCMdes0iG0f+xADZ1MH4sBET/
x5rpw/0fsBA/s/V0Mkv5pQJjzko5DsB8xJ4+tiqa6P+AMB1k9H9YQAeoK/o/
3Cum3pEDw4mJCP4wpOasQu9xA8C2jdKUA+HBknrvOJBYGCA6c8Bt1Xtoyovw
tD49OuDzePIAJPo/1kz/gP4PegjLk4GP1fs+InNR6DYMj7rDEn8gMBtxWJNw
K/2dNAVEeNQdjvAHAquIhD74RsDRYxK+zXUsBET/x5rpw/0f0BFObTzx9X3G
3hcQWo5PuwMAU4h3r9msaKL/A4AMIKP/wwJFYHQzUUNqvej/kNeGeocK9pkE
CUN+ccnbuVLvpo6QPaM02CE8GLN3ynEANka06GNpHqP/o7d70F+j/2PN9A/o
/6CHutrmaf74bJ7Rrj/3cRIZchpg1yqHlEKP4J6xfYMMo/9jAqhVPXnizQ0j
/mCIPJgAvej/WJvHw/0fMBc4t+2EH/rzCIS6wxR/ILBi3tYb3iLRLaM0hUF4
1B22+AOBPRHdmo5by3fQFBrhQV44erAxcaACbVKH4SL4g+Em57dp09H/ga4+
9I45zMRkfBp/vNIpoFeUIa5vdDqdmvAamk5tzTk9Ihx7zeI8Rv/HAtjUwfgx
f43+jzXTP6D/gx4S0zU5YfqYHtae2s4FWVeBFVY5pLYJs66ePrbIMPo/IEwH
Gf0fFtABJ4z+D/eKqXe4/0Mvjpv6CcEPPWMTe82xB6FHSDU2Hahoov9jbR6j
/6NTmjqgkRq3bxtABrAEo5udPqTWi/4PfP2uB9cQTJGmTDNNZvlMEH9fxhSM
8Kg7LPEHArMRhzUJt9LfSVNAhEfd4Qh/ILCKSOiDZ1NHj0n4NtepBT7vMP7s
QEdYDb4GfzB8o7BYM/0T+j9owgUhqR6T/0/wyfIDUua8OwAwhXj3mk0yjP4P
ADKAjP4PCxSB0c1EDan1ov9DXhvqHe7/IJnUBC7mD5glUf6Yea00RJypaKL/
Y20eo/+jt3uoWngbPVUt3CwK/lhYgw5/MOxBYbFuOvo/RpBEj/EM3cql1mn9
wRGBHi0/muDkZggL/IHAPMRnbN8gw+j/mABqVU+eeHPDiD8YIg8mQC/6P9bm
8Rf1f0zwB0TE/EGclfHMXDVzKcRbTr0LGf0fAsKAjP6PgU3gMJPvWPAHw03O
b9Omo/8DXX3ofVL/x+FcivPHycpnoobTerT86LyGplNbC5UeEY69ZpEMo/9j
AWzqYPxItfAyCnmm3gDtUY/hYvIHQ4eewO6N/o8H5FGPmfAtek4ykelptynG
CahAnK9mXMSePrYqmuj/gDAdZPR/WEAHPCb6P9wrpt7n9H9gWKRDcylcjc/w
h9ZMiLkWzj8IHMJUerT8GAT3YYa1wR/MwgDRpo8FMoz+j05p6oBGaty+bQAZ
wBKMbnb6kFov+j/66xNJA9GDixcXILhQofwBc0IwxD95/rHPH6tLbuw2Iwur
kNH/MQmVFY8ek/BtriPVwssozVmbW6A1hz8WPcHgD4ZvFBZrpj+n/4MCM/5g
CReusYkW54+XLsSDbkM+4s+zUa23eP5B4CSm0qPlh+E1NJ1acnR6xMprP2Hv
pU9TcoTHki5+AsLMQqsTIvmDoSbj5yXT0f/RX6Me4wp8lUijQNK6go6S7l/9
5YOnyoo31kSK+S3OP/b4Y8cdHvda9LFU0UT/R2/3ULXwNnqqWrhZFPyxsNpo
IkU3Tz1Irfc5/R8U/Ah/8Nw5lS9Kjy02XlVMrV5oGW5JE/p4p6Iy7brf4MP1
96gxEDBPjyFO1Ohaj5YfNj7d+p73L7qbey7rwsxw8vjjpQnBaCbFILVe9H/w
AsQbl6FHoxCMajSeEi3GDImff8Dknpc9E5sAmhdewzuV8PF3DCA/4vxjnT92
qpkHokcf0xVN9H8MbNJUigtNpCZS5U2P+Zz+D2pgmz94bjo5j8RhcOaDD+Xg
gTflD/rUk+fsMhdNvESaS1hpSu1kXTyb13qb5x8Ezrnf16Plh/Aamk5NxQC6
+YqTKaTFt3wJINGL/g8J55iWetTLqSfspm8tIgiSeLeJZveJni/QRc5fDH8Y
WLVj/lAe9jn//hWD/KjzjzX+OOEO6fGDoTdV0UT/hwV0gLo+p/+DGtniD577
Lczjqf6Pa6o4RdUC3b+CvrU8347hM81+1SyYm5S/ipOrJXcAYB4irA2+2vkH
gRMYYz1aflCvOcgfRw9Aov/DhROmpR71IuoJ+/EAgvGzpxzrweKAOXbWA1kI
KlXwyQIzmw3DLA7s7OV5YYhKr/XBqTTAHBvQg3jcR8DNH3n+Mc8f267aIrJs
CgJG/4djbXtJrfMHz60W5/FE/we+i4+xnP9KPJz44CN0WH5QX0Bm33oE8UJn
/FPnHzQ3U9Vel3tbmqv8gcAsRJp1mYOm4yFgvR5DnNiD0Xq0/IALCKc+ROvQ
su1BEZhAha8t8der9egqhat+Lw158Iel94fOP2BmgY4hYFHxgkQN3hPlApJ3
jkSfBOAllu3lEIFBQa6c8KFPHgG7spaq5D+N5mJ9jNyHAeRHn3/M8ceJsRXL
kBgOVQtvo6eqhZvFI69sjT947rIxj7v9H/jOhTHq8w96gJbQCBLOs9+hT2UX
c/yBZx0XNDrDTKyOSszBUoX1NNvtxG1y3Tj/oOnUcgygLmwa6LIud1LpmAhY
q8cQD/IHJQZuEvEHQ4TTkvj0aT26CuCqWn9VQ/4YWnh6G0P8yPOPi+aw/B2+
F5GuOtH/34yUdZXdVCM0GCRz6QRCRMqnH4AvQc9kfhnqQVLzDTxLqz66TIPx
eBTgr8vp1Of8+1cM8hPOPyYgUcQ/mHDxp4AGp/mD5wablLTT/4GtLI7x3L9/
pV9nTXvObHM1pED+qSy2JFFVXKiI8Qc+/wD8kWsuaTIRXi1EqAbYYqtL7W7X
2OodaCsGbJ5/0HRqaYw0xPhek54/aUipxwI+dkQKh8Auxm5Qr2BKsO4ngXMk
ObDAXTBjtuGq/6jzDzmQ2zVaSb7WrnpHzev0NfMSV4hssWUwpVcMwn1fzQtp
oj5CdJTYeU9KMw+dx2BabTQcvQ4IPLSt+VHnHxDxPly5nTuFx2MgUDza/0H9
4Fi5cOUHmHlkX2HwE71jYI1mBwiRL1Og9zn//pWe/4maQp9ClMWhmYZFv8Jd
QqvYlaqJdWy8+VKlmAl9QAwVFS+rrJG+FCrz2ymj0SnmGCNZaVd/+Xucf6Tb
b44pPioN1tomq5zAEagbolY7e2hfv7p6t28CbmoAEMx5aLiqPuL8g9zq/t3U
e0dApcc2aVAgz+EsqS2dlyIIp7ASLx+OlecBOZBDUDm8NxPqMorbBOXHS/WS
oI0PuiGxyzm0ZUevVDO3hWijzFg2NT/y/AMiFl32KT6CxmgG6nDDLPXBspas
WJfvxfMu4pwjCL2d8w+aXA34Y/NV3XjBAbtNvAq7bGOqJOMiL041fRZCY2ne
EAMB/0WGxLSuZzJlscIMWE0pcy/JRhV/tMXghNfsuU2pZiBMMn72jHyL84+C
M1Hh+6PC9eaBovRh+BDYbICTHl1+IJmUQlwLviZ/MPSdTOqhB85YZLBqvntR
fHCTCdm8J0/xuvL2i6+WEiMQGHhTrgRIgM7UIE3fedPCu+T4clMl4ssMqhn9
kk9cDU8nzeCCGbKfGSF1WZpNDfQsdMeyqXnm/KO8G7AoKSBpkqUJEjZ8tPoA
D3BXx9cPcObq+QdNXqyMC1tyTeTYoWwIYkjdd0cPkXfdpcl7Jq5pvVNTYi4o
7BM8n6YNFqnoK0kXsFzGJyMk+ZTWVd8tGZ9mzBsd0SzYDMU9f/gwzp33a4I/
9mIXHHNnRxXP0HSSYK0myX1ARlNfuh4h5Q+kBSUXZdAoe9qpAUAwb++GQ2o9
3sMxvLm/S3IZX5Xq+r2osOPB+6o0DANlTq91PK1tEwIx84cK9+U/MH3Eq99V
Dzn/0HT0rhZYsC+M6evkb/TDyM4Q10P52G1uRh8/93+jROCatp8gDTzRUsVR
NzuMXJRTdYDymlJ1QryPFkxvVdu5bKwP9xZoTQS6BTH4g+GPbQr3Gei951/y
jJI20Ms1nGObP6v1fNo3XPlDxdP39ovmj7wvBZ5iJkDryuein5dSk5zaDQqU
HijLzftyFZtQ7s3gg192YkC79Fy9Xn/wm2/65mHOw2HPSY8ffESZTpUKHxmW
EbX+nwKjpdRREVFkoEyug6cd/Uzv6YxCnnneCO2kwW+w8LQuQt0uyPtRo519
8YmpJFdbk7ArhykcqPL268rpvVCsXOObvqCr5oEi/kBT49N+tlbYzdG78rtT
O3b1sEdNYAXWVXtdW9Rlx/wxFbqUy1rZVDdBLjmiATVLQvMC8YYm4kvbCZh9
j1AuXVylYGG8oLLQHlM/bUX1rEKDT2gJZsdiDunpOaGD81h/0XVzxI83T3jc
1N/uKFSQVwSST4L5o5CCzrPfUVyutlpIqTFO8YcOJdr505srRQFSyoCkP6iQ
Z4WFJ81vWe/2/Qlzv2xkXUNWkcbHeqNq5vVrd7Bh4et4Wyw1dYVe5wSz7Dgp
PVwzpOarbfT1jQc1ZVSHiKyGeKZVh6jO5T752cJ8rLKlQXmm7zBmQOBnJ6bH
DJXbqz4vVBV/FsDiqAclauVCpqlpts807UGJGuI7SqI6BTlXInGijIx8YMoP
5PkKIYVC0yTdL4vUWi+ND4IYUA2O9cbu4I7OvtncK6JlxX3ZSl4YG3uMCW1M
1XJcDZGpXZA/io4fSrS1DMjmmj5EyboZrRMwbdhfZZPGH0Onsf4xDsfdJsdY
58FlhTt/GJZbHWW6BDZPL0cqwW0l3sqsK4d7P0LnPFwfZGfy0ElcYgfylbgI
nHKHMn9u7lMipdi8qmwgNyfLVzecNBfchOOh7V5u1Qa3DFEGWVcl1f52FtXa
Ode8UGfLU8yrQ6mReJ+fDQXUZxAY6+QiRKkxXoD8UdaZBLzI9DWoAuz+wxKM
ABdg/atL5nsf8dh6NTPAMB24WxFeQLhxjG+aVtg5jrs6OX77G1Ml9tVYbiNW
234Kmz2QPgnwiPfTqJBT+cMnwpQLLlurlBVinnM5Qwqzq00THIXmZ+yyYw8Z
VQzUQ56PMwDLmqO5fPLPfUiC5FlUy7OPtMB8puoMrl5d6dquSgTefg8IjpRa
LYp2wYuxJWa41rpxEZagEFOtO2eTYfCnkTIfZSnn6p1j68BZ2Nia+1PS6zFb
ktG5lCiyTnlD+jxzVdoStUB5Cl0x1B0x8sxlp8I0nOrj+MxQ2EiEMEkKTRWT
dFH4fhA33t0APL0n6Eh1VDFgd3iUGY1bdIO5BdzU67cQbGOq5Cky3IPsvrWr
cpCSQrKQqlRyPuOr3zxKLF1muNon+QcptkAu06F6UC0qBLFCLspSiQFTd8B3
PmT7LsdvYIWIScDXHF/Xt1TU89vkPLccyFAuQdIpaFLjM8SpGX8UZJe32sdx
ccpTuM97ZbJxsK5iyquQ0u2G21+eoxvcJsSOKqlR6Idgq3c3D8fWmR+8xGFJ
ApPPUlXIJXSVV+7rlbUhYlsO9iCkao2SWviG37ljP98mHrPeZlSODgWjflpR
bagbKsUcG3kM6qlnIo4IxDN9v8F7n1nfYl0+kTQclIRLJu2vr8C18vx6C7J8
d7OzJiynUodYiPW1ejzTqsqZyWPzy4/MLyKrSY34Xl2IVY2tolqDu8qz3m8c
qt7yGMStht7I3Gi2PQfp0kXL+mC3a0wfzZp7jO0OqeLQS3GaPySBELvaZJkT
PcT72pH8bsz3UBspUf5AhYo2264oGElHpnOiaqPfEdDf3Gh/j+a2G91UXEay
xza4piJRzscdrYoEiCaHIrkg5XssGZTOC0v5kdyaN9cAF4jRDQ+6j5LJzeWF
8hDlUTy72bHVO0kV07haS6Pb98FjZNtXoWspNn8MFqqN2Kk/wp4bAUni107D
k0i6gdSjJVtK3BWKJd9SMdBIageAymQ7OOmp7bggf7h5oWtvoE94ATzwlf1U
rZV6B4vr4/U1MsSLpJHF8d3lb3f+MBhtdKOJOCH+kzWbQ+BltvWuqQL4o9r2
FkfhhLqMVBAqHmFG1NSa9QqflrzUI9dYbfJWytHrBSdiYuEP5azZ9Bipvv3U
3jREuq5mqZg0+PjNtNz/ao+go4+eP5xB3R7dm6r3pNf3OnSLvJmrVnmb0QhF
sD30HlMzNldIzC35jDRaBqh5ofiDizgliD+UXnmh4iH8IDxYeNc44qRWe4Tu
DnZ40zhkPVe2tUYeZEasO9I6n3CFTB4iQ6r+JyzX4tl/6VcNkk6xUAGdvD3z
VesPFn9U2kjm26j+nHFVMGl403mUzF8ezzSA5aE8yYzoobUDcAYH3m9fzVhr
ov9b6sfhqOd5f7LasGIgPlErxBH+CNFn0kwyyilqua62rxxjlq7SUTNTHoLy
Qv7iLfN2gOiJlWj+aCsP1wXv9wyBhuCGz4yZQMnN92+rzCIq9ldnbMa9/gtv
xij448o5uwiA5RHFsmz+J+26wb5G0zw4l2ca/hDx+f9f/wudYSOC
          "]}, ControlType -> None}}, 
      "Options" :> {
       ControlPlacement -> Left, TrackedSymbols -> True, FrameMargins -> 0, 
        AutorunSequencing -> {1}}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{640., {232., 237.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({{$CellContext`IC1 = CompressedData["
1:eJxtlMF1wzAMQ8Fu0lvn6QhdoPvf+mIT+JDTvDi2ZJKgADCfP7/fPx+SvvbS
aOZ1XQ/Xhld5fAVcv9fmnbLBd9QdzMq52hzvuboL6S58XwrM/s5WTJa2LRdx
qZT3crfkLdfJiy09nCVnGPfu04lKStrGmaZhrSqtSqmOwt0sGhgKU1ZkAIhC
OcZNw2Llux9BGM0PtZwe3OOOLgoKC3PDzQSmI3tHITdYevStBrX2UQ5HYR6Q
IasRTJq4++mgH43L4rbeIfHDwDhNR1GMEzKg0aqWooDmtKrmdeA+bCGajKSZ
DPnQmb+y7bFj60ZVzPaPgsgVekiAlnpzhNTstSVwOt29D065UVOQtIYLMuht
q3Z2e+mY6NCmbLSdovdDiRqumhj+GhCmHFi2Fq/SFZSlzcPckVvMUVAiBwZp
bZE8YdXqW28dgiDzByOFBRs=
          "], $CellContext`IC2 = CompressedData["
1:eJxTTMoPSmJiYGDQgOJRMApGwSgYBaOAHAAAb0UB+Q==
          "], $CellContext`IC3 = CompressedData["
1:eJxTTMoPSmJiYGDQgOIBBIxE4oECo+6jDIy6jzIw6j7KwKj7KANEuQ8AkAAC
XQ==
          "], $CellContext`BCA2DEvolveList[
           Pattern[$CellContext`rule, 
            Blank[]], 
           Pattern[$CellContext`init, 
            Blank[]], 
           Pattern[$CellContext`t, 
            Blank[]]] := 
         FoldList[$CellContext`BCA2DStep[$CellContext`rule, #, #2]& , \
$CellContext`init, 
           Range[$CellContext`t]], $CellContext`BCA2DStep[
           Pattern[$CellContext`rule, 
            Blank[]], 
           Pattern[$CellContext`a, 
            Blank[]], 
           Pattern[$CellContext`d, 
            Blank[]]] := RotateRight[
           Map[RotateRight[#, $CellContext`d]& , 
            (Apply[Join, 
             Map[Join[
               Apply[Sequence, #], 2]& , #, {1}]]& )[
             ReplaceAll[
              Partition[
               RotateLeft[
                Map[
                RotateLeft[#, $CellContext`d]& , $CellContext`a], \
$CellContext`d], {2, 
               2}], $CellContext`rule]]], $CellContext`d], \
$CellContext`GeneralBlockRules[
           Pattern[$CellContext`rule, 
            Blank[]]] := MapThread[Rule, 
           ({#, 
            Part[#, IntegerDigits[$CellContext`rule, 16, 16] + 1]}& )[
            Sort[
             Tuples[
              Tuples[{1, 0}, 2], 2]]]], $CellContext`IS = 
         300, $CellContext`NumOfBlack[
           Pattern[$CellContext`s, 
            Blank[]]] := 
         Apply[Plus, $CellContext`s, {0, 1}]/
          Length[$CellContext`s]^2}; ($CellContext`IS = 
         300; $CellContext`GeneralBlockRules[
           Pattern[$CellContext`rule, 
            Blank[]]] := MapThread[Rule, 
           ({#, 
            Part[#, IntegerDigits[$CellContext`rule, 16, 16] + 1]}& )[
            Sort[
             Tuples[
              Tuples[{1, 0}, 2], 2]]]]; $CellContext`BCA2DStep[
           Pattern[$CellContext`rule, 
            Blank[]], 
           Pattern[$CellContext`a, 
            Blank[]], 
           Pattern[$CellContext`d, 
            Blank[]]] := RotateRight[
           Map[RotateRight[#, $CellContext`d]& , 
            (Apply[Join, 
             Map[Join[
               Apply[Sequence, #], 2]& , #, {1}]]& )[
             ReplaceAll[
              Partition[
               RotateLeft[
                Map[
                RotateLeft[#, $CellContext`d]& , $CellContext`a], \
$CellContext`d], {2, 
               2}], $CellContext`rule]]], $CellContext`d]; \
$CellContext`BCA2DEvolveList[
           Pattern[$CellContext`rule, 
            Blank[]], 
           Pattern[$CellContext`init, 
            Blank[]], 
           Pattern[$CellContext`t, 
            Blank[]]] := 
         FoldList[$CellContext`BCA2DStep[$CellContext`rule, #, #2]& , \
$CellContext`init, 
           Range[$CellContext`t]]; $CellContext`NumOfBlack[
           Pattern[$CellContext`s, 
            Blank[]]] := 
         Apply[Plus, $CellContext`s, {0, 1}]/Length[$CellContext`s]^2)}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->170410891]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "DetailsSection"],

Cell[TextData[StyleBox["Controls",
 FontWeight->"Bold"]], "DetailNotes",
 CellChangeTimes->{
  3.5246697666328125`*^9, {3.525182715640921*^9, 3.525182725904078*^9}, 
   3.525185401547986*^9},
 CellID->20935040],

Cell["\<\
\"rule\": The choice of the rule is shown under this control.\
\>", "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.5246697590791016`*^9}, 
   3.5248337615047503`*^9, {3.5251827584956284`*^9, 3.525182776772748*^9}, {
   3.525183008906657*^9, 3.525183011091008*^9}},
 CellID->465326059],

Cell["\<\
\"time\": The choice of the time step is shown to the right of the control.\
\>", "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.524669760692383*^9}, {
  3.5251827833855867`*^9, 3.525182819357234*^9}, {3.525183013979361*^9, 
  3.525183016018332*^9}},
 CellID->20223940],

Cell["\<\
\"mesh\": Select \"on\" or \"off\" to show the mesh or not.\
\>", "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.524669769399414*^9}, {
  3.524833871191718*^9, 3.524833874470046*^9}, {3.5251829594009237`*^9, 
  3.5251830200510187`*^9}},
 CellID->426409442],

Cell["\<\
\"Initial conditions\": There are three modes for defining the initial \
conditions available: \"Random\", \"9 cells block\", and \"Lattice\". The \
indicator on the left shows which mode is chosen. The mode and its parameters \
can be chosen in the tab view below.\
\>", "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.524669774236328*^9}, {
   3.525183024571269*^9, 3.525183032026198*^9}, {3.5251851152370577`*^9, 
   3.52518511575384*^9}, 3.526398703102153*^9},
 CellID->179181511],

Cell["\<\
\"Random\": This gives random initial conditions with certain density of \
black cells.\
\>", "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.5246697794160156`*^9}, {
  3.5251851565438643`*^9, 3.525185162912142*^9}, {3.525185212512806*^9, 
  3.525185217682386*^9}},
 CellID->261715366],

Cell["\"density\": This controls the density of black cells.", "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.5246697794160156`*^9}, {
   3.5251851565438643`*^9, 3.525185162912142*^9}, {3.525185212512806*^9, 
   3.5251852218735437`*^9}, 3.5263981778703814`*^9},
 CellID->1645517146],

Cell[TextData[{
 "\"seed\": This fixes the ",
 StyleBox["SeedRandom", "MR"],
 " parameter allowing one to obtain exactly the same evolution the next time."
}], "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.5246697803408203`*^9}, {
   3.5251851664874697`*^9, 3.5251851740958347`*^9}, 3.525185226850349*^9, {
   3.5260608476833963`*^9, 3.526060847873415*^9}, 3.526398181442936*^9, {
   3.5263983508033857`*^9, 3.5263983512271214`*^9}, {3.526398934801289*^9, 
   3.5263989392033052`*^9}, {3.526746873892044*^9, 3.526746877128579*^9}},
 CellID->128860115],

Cell["\<\
\"9 cells block\": This lets you choose the cells' color in the 3\[Times]3 \
block at the center. Other cells are white.\
\>", "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.5246697810966797`*^9}, 
   3.524833781589759*^9, {3.525183079369375*^9, 3.525183080548953*^9}, {
   3.525185236376449*^9, 3.5251852664276733`*^9}, {3.5263982408997173`*^9, 
   3.5263982436032877`*^9}, 3.526398275697772*^9},
 CellID->26423469],

Cell["\<\
\"Lattice\": This gives a regular square lattice of single black cells.\
\>", "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.524669782053711*^9}, {
  3.525183081018846*^9, 3.525183081311627*^9}, {3.525185273939855*^9, 
  3.525185285587099*^9}},
 CellID->115661490],

Cell["\"Size\": This lets you choose the period of the lattice.\t", \
"DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.5246697837529297`*^9}, {
   3.525185290787518*^9, 3.525185306810779*^9}, 3.526398189259001*^9},
 CellID->20135567],

Cell["\<\
\"Set initials\": This button appears in all three cases. It sets the initial \
conditions in accordance with the chosen mode and its parameters.\
\>", "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.5246697859970703`*^9}, {
  3.5251853099067507`*^9, 3.5251853197862988`*^9}},
 CellID->351965619],

Cell["\<\
\"Density\": This shows the plot of the black cells density versus time (the \
step number).\
\>", "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.5246697869628906`*^9}, {
  3.5251853274411917`*^9, 3.5251853335850677`*^9}},
 CellID->190285806],

Cell["\<\
On the right side you can see a certain step of the BCA evolution and \
averages over certain directions (two space directions and one time \
direction) of the BCA evolution.\
\>", "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.5246697891728516`*^9}, {
  3.5251853417929153`*^9, 3.525185374942657*^9}},
 CellID->154778540],

Cell[TextData[StyleBox["Snapshots/Bookmarks",
 FontWeight->"Bold"]], "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.5246697926152344`*^9}, {
  3.52518538666053*^9, 3.5251853923623343`*^9}, {3.5260604675872145`*^9, 
  3.526060470180051*^9}},
 CellID->87566564],

Cell["Snapshot 1: twisted star", "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.524669793504883*^9}, 
   3.5248338210717063`*^9, 3.525185423165786*^9},
 CellID->364247395],

Cell["Snapshot 2: flower", "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.5246697944248047`*^9}, 
   3.52518542549354*^9},
 CellID->80240664],

Cell["\<\
Snapshot 3: particle beams radiator\
\>", "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.5246697989160156`*^9}, 
   3.525185430421975*^9, 3.526052101471222*^9},
 CellID->92336525],

Cell["\<\
Bookmark 4: one particle radiator\
\>", "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.5246698232617188`*^9}, 
   3.5251854335818367`*^9, 3.526052103261257*^9, 3.527527658646624*^9},
 CellID->179982450],

Cell["Bookmark 5: randomness", "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.5246698242314453`*^9}, 
   3.5251854363902082`*^9, 3.526052105831309*^9, 3.5275276566804276`*^9},
 CellID->360131396],

Cell["Bookmark 6: radiating mass", "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.5246698273183594`*^9}, 
   3.525185445156898*^9, 3.526052107691346*^9, {3.527527119602725*^9, 
   3.5275271212138863`*^9}},
 CellID->125217155],

Cell["Bookmark 7: regular behavior", "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.5246698288945312`*^9}, 
   3.524833892479847*^9, 3.525185448711135*^9, 3.5260521102613974`*^9, 
   3.527524941795966*^9},
 CellID->557237991],

Cell["\<\
Bookmark 8: chessboard generated by mass\
\>", "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.524669830711914*^9}, 
   3.525185454332741*^9, 3.5260521128714495`*^9, {3.526756007619686*^9, 
   3.5267560092417173`*^9}, {3.5275240215329494`*^9, 3.527524023291125*^9}, 
   3.5275249396537523`*^9},
 CellID->222268009],

Cell["Bookmark 9: cluster generation", "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.524669831814453*^9}, 
   3.525185456756974*^9, 3.5260521150314927`*^9, {3.5267429455560875`*^9, 
   3.5267429476192937`*^9}},
 CellID->692576260],

Cell["Bookmark 10: drifting clusters", "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.5246698325859375`*^9}, 
   3.5251854603327913`*^9, {3.5260521174315405`*^9, 3.5260521179015503`*^9}, {
   3.5267429371932507`*^9, 3.5267429387864103`*^9}},
 CellID->326148413],

Cell["\<\
Bookmark 11: random diamond in frame\
\>", "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.524669797959961*^9}, 
   3.52518542770214*^9, {3.5260521199015903`*^9, 3.526052120041593*^9}, {
   3.526060490697322*^9, 3.526060492662947*^9}},
 CellID->441499962],

Cell["Bookmark 12: triangle", "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.524669825448242*^9}, 
   3.525185438932802*^9, {3.5260521214316206`*^9, 3.5260521217016263`*^9}, 
   3.526060538838755*^9},
 CellID->322377862],

Cell["\<\
Bookmark 13: randomness in frame\
\>", "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.5246698264433594`*^9}, 
   3.52518544164499*^9, {3.526052123301658*^9, 3.5260521236216645`*^9}, 
   3.5260605400399704`*^9},
 CellID->216158987],

Cell["Bookmark 14: four particles", "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.5246698280976562`*^9}, {
   3.525185414349471*^9, 3.525185414893182*^9}, 3.526052126251717*^9, 
   3.526060541163185*^9},
 CellID->33914372],

Cell["\<\
Bookmark 15: randomness evolution\
\>", "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.5246698298632812`*^9}, 
   3.525185450780905*^9, 3.5260521284117603`*^9, 3.5260605423644004`*^9},
 CellID->436928343],

Cell["Bookmark 16: prime particles", "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.5246698332783203`*^9}, {
   3.5251854661483593`*^9, 3.525185467276104*^9}, 3.526060543648617*^9},
 CellID->449257138],

Cell["Bookmark 17: ordering", "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.5246698344902344`*^9}, 
   3.5251854709169292`*^9, 3.526060545403041*^9},
 CellID->81854743],

Cell[TextData[StyleBox["Classification of the Rules",
 FontWeight->"Bold"]], "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.5246698370234375`*^9}, {
  3.525185475140388*^9, 3.52518548473631*^9}},
 CellID->428535100],

Cell[TextData[{
 "Reversible rules: If for the rule ",
 Cell[BoxData[
  FormBox["R", TraditionalForm]], "InlineMath"],
 " there exists a rule ",
 Cell[BoxData[
  FormBox[
   RowBox[{"R", "'"}], TraditionalForm]], "InlineMath"],
 " that restores the previous step of the system evolution under ",
 Cell[BoxData[
  FormBox["R", TraditionalForm]], "InlineMath"],
 " for every system, then ",
 Cell[BoxData[
  FormBox["R", TraditionalForm]], "InlineMath"],
 " is called reversible."
}], "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.524669838493164*^9}, {
  3.525185528341414*^9, 3.525185589988934*^9}},
 CellID->63845224],

Cell["\<\
Isotropic rules: If after rotating the 2\[Times]2 block to which the rule \
applies, the result after one step in the evolution is also rotated (i.e. \
operations of the rule application and 2\[Times]2 block rotating commute), \
then the rule is called isotropic.\
\>", "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.524669840390625*^9}, {
  3.524833792851885*^9, 3.5248337945160513`*^9}, {3.525185611038575*^9, 
  3.525185632553319*^9}, {3.526398444543133*^9, 3.5263984469154463`*^9}},
 CellID->358187092],

Cell[TextData[StyleBox["Overview of the Snapshots",
 FontWeight->"Bold"]], "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.5246698651445312`*^9}, {
  3.525185643154992*^9, 3.525185648562759*^9}},
 CellID->545567828],

Cell["Reversible isotropic rules", "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.524669866741211*^9}, 
   3.5251859828963213`*^9},
 CellID->197933263],

Cell["\<\
Snapshots 1 and 2 have complicated twisted regular behavior. Snapshots 11 and \
13 have random structures surrounded by regular square frames. In snapshot 11 \
the randomness also shows non-isometric behavior. In Snapshots 3, 4, and 6 \
you can see particle radiation, which can be one particle radiation as well \
as radiation of particle beams; the radiating center can be a regular \
structure as well as a random mass. Snapshot 5 shows random non-isometric \
behavior of the system in spite of the isometry of the rule itself. Snapshot \
12 illustrates the fact that even such simple behavior (a growing triangle) \
becomes random after reaching the boundary. In snapshot 14 particles fly away \
from the center and are elastically reflected by the boundary. Snapshot 7 \
shows interesting regular behavior even after reaching the boundary.\
\>", "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.5246698715820312`*^9}, {
   3.5248339360842066`*^9, 3.524833960460644*^9}, {3.525186007697604*^9, 
   3.525186233765729*^9}, {3.525186274221622*^9, 3.525186299491193*^9}, {
   3.526052301560223*^9, 3.5260523579613514`*^9}, 3.526747098439713*^9},
 CellID->22859114],

Cell["Reversible non-isotropic rules", "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.5246698753535156`*^9}, {
  3.52518598564614*^9, 3.5251859909813843`*^9}},
 CellID->352256418],

Cell["\<\
Snapshot 15 shows typical random behavior for a reversible non-isotropic rule \
with the random boundary evolving just from one cell. In snapshot 8 there is \
also a typical random mass, but it generates the regular \"chessboard\" phase.\
\>", "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.524669880310547*^9}, 
   3.5248339636749654`*^9, {3.525186316734119*^9, 3.525186389412648*^9}, {
   3.5260523649914923`*^9, 3.5260523744316807`*^9}},
 CellID->94114928],

Cell["Irreversible isotropic rules", "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.5246698811289062`*^9}, 
   3.5251865160646477`*^9},
 CellID->53640909],

Cell["\<\
Snapshots 9 and 10 show the cluster generation. The clusters can be \
\"frozen\" (snapshot 9) or drifting (snapshot 10). Also snapshot 7 and \
snapshot 16 have particles, but these are simply one-cell particles.\
\>", "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.5246698895498047`*^9}, {
  3.525186410041212*^9, 3.525186510123412*^9}, {3.5260523824118404`*^9, 
  3.5260524367530937`*^9}},
 CellID->8813334],

Cell["Irreversible non-isotropic rule", "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.5246698903359375`*^9}, 
   3.5251865175528107`*^9},
 CellID->349164548],

Cell["\<\
From any random initial conditions the rule in snapshot 17 evolves the system \
to the regular gas of moving particles.\
\>", "DetailNotes",
 CellChangeTimes->{{3.524669752010742*^9, 3.5246698903291016`*^9}, 
   3.524669925203125*^9, {3.5251865333882837`*^9, 3.525186551892177*^9}},
 CellID->151919596]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ControlSuggestionsSection"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Resize Images"]}],
  "\"Click inside an image to reveal its orange resize frame.\\nDrag any of \
the orange resize handles to resize the image.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.524833181502756*^9},
 FontFamily->"Verdana",
 CellTags->"ResizeImages"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Rotate and Zoom in 3D"]}],
  RowBox[{
   "\"Drag a 3D graphic to rotate it. Starting the drag near the center \
tumbles\\nthe graphic; starting near a corner turns it parallel to the plane \
of the screen.\\nHold down \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" (or \"", 
    FrameBox[
    "Cmd", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" on Mac) and drag up and down to zoom.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"RotateAndZoomIn3D"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Drag Locators"]}],
  RowBox[{"\"Drag any locator (\"", 
    GraphicsBox[
     LocatorBox[
      Scaled[{0.5, 0.5}]], ImageSize -> 20], 
    "\", etc.) to move it around.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"DragLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Create and Delete Locators"]}],
  RowBox[{"\"Insert a new locator in the graphic by holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key\\nand clicking where you want it to be. Delete a locator by \
clicking it\\nwhile holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" key.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"CreateAndDeleteLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Slider Zoom"]}],
  RowBox[{"\"Hold down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key while moving a slider to make fine adjustments in the slider \
value.\\nHold \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" and/or \"", 
    FrameBox[
    "Shift", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" at the same time as \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" to make ever finer adjustments.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.5248331863352394`*^9},
 FontFamily->"Verdana",
 CellTags->"SliderZoom"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Gamepad Controls"]}],
  "\"Control this Demonstration with a gamepad or other\\nhuman interface \
device connected to your computer.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.35696210375764*^9, 3.3895522232313623`*^9},
 FontFamily->"Verdana",
 CellTags->"GamepadControls"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Automatic Animation"]}],
  RowBox[{"\"Animate a slider in this Demonstration by clicking the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJzzTSzJSM1NLMlMTlRwL0osyMhMLlZwyy8CCjEzMjAwcIKwAgOI/R/IhBKc\n\
/4EAyGAG0f+nTZsGwgysIJIRKsWKLAXGIHFmEpUgLADxWUAkI24jZs+eTaEt\n\
IG+wQKRmzJgBlYf5lhEA30OqWA=="], "Graphics", ImageSize -> {9, 9}, ImageMargins -> 
      0, CellBaseline -> Baseline], BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"button\\nnext to the slider, and then clicking the play button that \
appears.\\nAnimate all controls by selecting \"", 
    StyleBox["Autorun", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.52005712956575*^9, 3.5247225469132032`*^9},
 FontFamily->"Verdana",
 CellTags->"AutomaticAnimation"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Bookmark Animation"]}],
  RowBox[{
   "\"See a prepared animation of this Demonstration by selecting\\n\"", 
    StyleBox["Animate Bookmarks", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{
  3.5200571087475595`*^9, {3.52472277366418*^9, 3.5247227839366407`*^9}},
 FontFamily->"Verdana",
 CellTags->"BookmarkAnimation"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SearchTermsSection"],

Cell["2D block cellular automata", "SearchTerms",
 CellChangeTimes->{{3.524571208392578*^9, 3.5245712277685547`*^9}},
 CellID->162914178],

Cell["two-dimensional block cellular automata", "SearchTerms",
 CellChangeTimes->{{3.5245713645126953`*^9, 3.524571401194336*^9}},
 CellID->56565974],

Cell["block cellular automata", "SearchTerms",
 CellChangeTimes->{{3.524570997451172*^9, 3.524571018790039*^9}, {
  3.5245710713271484`*^9, 3.524571081823242*^9}, {3.524571379046875*^9, 
  3.524571379208008*^9}},
 CellID->802847518],

Cell["Margolus neighborhood", "SearchTerms",
 CellChangeTimes->{{3.5246546657373047`*^9, 3.5246546657441406`*^9}},
 CellID->113852747],

Cell["2\[Times]2-neighborhood", "SearchTerms",
 CellChangeTimes->{{3.524833146628564*^9, 3.524833149723749*^9}},
 CellID->487203311],

Cell["flower", "SearchTerms",
 CellChangeTimes->{{3.524654666651367*^9, 3.5246546677460938`*^9}},
 CellID->744877182],

Cell["particle", "SearchTerms",
 CellChangeTimes->{{3.524571088989258*^9, 3.5245711099716797`*^9}, {
  3.5245713810478516`*^9, 3.524571381258789*^9}},
 CellID->129916012],

Cell["beam", "SearchTerms",
 CellChangeTimes->{{3.5245711126689453`*^9, 3.5245711146933594`*^9}, {
  3.5245713831083984`*^9, 3.5245713834990234`*^9}},
 CellID->338965414],

Cell["cluster", "SearchTerms",
 CellChangeTimes->{{3.524654677354492*^9, 3.5246546786679688`*^9}},
 CellID->415746415],

Cell["drifting cluster", "SearchTerms",
 CellChangeTimes->{{3.524654778258789*^9, 3.524654780732422*^9}},
 CellID->911981638],

Cell["reversible rule", "SearchTerms",
 CellChangeTimes->{{3.524654707713867*^9, 3.5246547085566406`*^9}},
 CellID->147939563],

Cell["isotropic rule", "SearchTerms",
 CellChangeTimes->{{3.5246547134296875`*^9, 3.52465471425*^9}},
 CellID->462958848],

Cell["reversible isotropic rule", "SearchTerms",
 CellChangeTimes->{{3.5246546972060547`*^9, 3.5246546997666016`*^9}},
 CellID->331133282]
}, Open  ]],

Cell["", "RelatedLinksSection"],

Cell[CellGroupData[{

Cell["", "AuthorSection"],

Cell[TextData[{
 "Contributed by: ",
 ButtonBox["Teretenkov Alexander",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/author.html?author=Teretenkov+\
Alexander"], None},
  ButtonNote->
   "http://demonstrations.wolfram.com/author.html?author=Teretenkov+Alexander"]
}], "Author",
 CellChangeTimes->{{3.5194064863740005`*^9, 3.519406499622759*^9}}],

Cell[TextData[{
 "With help provided by: ",
 ButtonBox["Vitaliy Kaurov",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/search.html?query=Vitaliy+Kaurov"],
     None},
  ButtonNote->
   "http://demonstrations.wolfram.com/search.html?query=Vitaliy+Kaurov"]
}], "Author",
 CellChangeTimes->{{3.5194065024539204`*^9, 3.519406518686849*^9}, {
   3.524833115501696*^9, 3.524833115511697*^9}, 3.525182704889164*^9, {
   3.52518941532557*^9, 3.525189456670734*^9}, {3.525189498385099*^9, 
   3.525189536914867*^9}, {3.52639859449102*^9, 3.526398617086319*^9}},
 CellID->391008063]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1006, 800},
WindowMargins->{{7, Automatic}, {Automatic, 8}},
FrontEndVersion->"8.0 for Microsoft Windows (64-bit) (February 15, 2011)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Demonstration.nb", 
  CharacterEncoding -> "WindowsANSI"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ResizeImages"->{
  Cell[407874, 7534, 353, 9, 22, "ControlSuggestions",
   CellTags->"ResizeImages"]},
 "RotateAndZoomIn3D"->{
  Cell[408230, 7545, 678, 16, 22, "ControlSuggestions",
   CellTags->"RotateAndZoomIn3D"]},
 "DragLocators"->{
  Cell[408911, 7563, 340, 11, 22, "ControlSuggestions",
   CellTags->"DragLocators"]},
 "CreateAndDeleteLocators"->{
  Cell[409254, 7576, 637, 15, 22, "ControlSuggestions",
   CellTags->"CreateAndDeleteLocators"]},
 "SliderZoom"->{
  Cell[409894, 7593, 887, 22, 22, "ControlSuggestions",
   CellTags->"SliderZoom"]},
 "GamepadControls"->{
  Cell[410784, 7617, 369, 9, 22, "ControlSuggestions",
   CellTags->"GamepadControls"]},
 "AutomaticAnimation"->{
  Cell[411156, 7628, 1529, 32, 22, "ControlSuggestions",
   CellTags->"AutomaticAnimation"]},
 "BookmarkAnimation"->{
  Cell[412688, 7662, 1001, 23, 22, "ControlSuggestions",
   CellTags->"BookmarkAnimation"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ResizeImages", 417165, 7796},
 {"RotateAndZoomIn3D", 417275, 7799},
 {"DragLocators", 417386, 7802},
 {"CreateAndDeleteLocators", 417503, 7805},
 {"SliderZoom", 417618, 7808},
 {"GamepadControls", 417725, 7811},
 {"AutomaticAnimation", 417839, 7814},
 {"BookmarkAnimation", 417957, 7817}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 366, 6, 104, "DemoTitle"],
Cell[948, 30, 33, 0, 266, "InitializationSection"],
Cell[CellGroupData[{
Cell[1006, 34, 29, 0, 188, "ManipulateSection"],
Cell[CellGroupData[{
Cell[1060, 38, 27702, 693, 1811, "Input",
 CellID->268501739],
Cell[28765, 733, 56570, 1015, 481, "Output",
 CellID->50888926]
}, {2}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[85381, 1754, 36, 0, 166, "ManipulateCaptionSection"],
Cell[85420, 1756, 2319, 32, 97, "ManipulateCaption"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87776, 1793, 28, 0, 168, "ThumbnailSection"],
Cell[87807, 1795, 127003, 2172, 481, "Output",
 CellID->72325148]
}, Open  ]],
Cell[CellGroupData[{
Cell[214847, 3972, 28, 0, 138, "SnapshotsSection"],
Cell[214878, 3974, 65788, 1166, 481, "Output",
 CellID->906177433],
Cell[280669, 5142, 56604, 1018, 481, "Output",
 CellID->459536398],
Cell[337276, 6162, 56792, 1018, 481, "Output",
 CellID->170410891]
}, Open  ]],
Cell[CellGroupData[{
Cell[394105, 7185, 26, 0, 332, "DetailsSection"],
Cell[394134, 7187, 210, 5, 22, "DetailNotes",
 CellID->20935040],
Cell[394347, 7194, 306, 6, 22, "DetailNotes",
 CellID->465326059],
Cell[394656, 7202, 291, 6, 22, "DetailNotes",
 CellID->20223940],
Cell[394950, 7210, 278, 6, 22, "DetailNotes",
 CellID->426409442],
Cell[395231, 7218, 505, 9, 37, "DetailNotes",
 CellID->179181511],
Cell[395739, 7229, 306, 7, 22, "DetailNotes",
 CellID->261715366],
Cell[396048, 7238, 294, 4, 22, "DetailNotes",
 CellID->1645517146],
Cell[396345, 7244, 564, 10, 23, "DetailNotes",
 CellID->128860115],
Cell[396912, 7256, 438, 8, 22, "DetailNotes",
 CellID->26423469],
Cell[397353, 7266, 286, 6, 22, "DetailNotes",
 CellID->115661490],
Cell[397642, 7274, 243, 4, 22, "DetailNotes",
 CellID->20135567],
Cell[397888, 7280, 317, 6, 22, "DetailNotes",
 CellID->351965619],
Cell[398208, 7288, 264, 6, 22, "DetailNotes",
 CellID->190285806],
Cell[398475, 7296, 344, 7, 37, "DetailNotes",
 CellID->154778540],
Cell[398822, 7305, 271, 5, 22, "DetailNotes",
 CellID->87566564],
Cell[399096, 7312, 183, 3, 22, "DetailNotes",
 CellID->364247395],
Cell[399282, 7317, 153, 3, 22, "DetailNotes",
 CellID->80240664],
Cell[399438, 7322, 201, 5, 22, "DetailNotes",
 CellID->92336525],
Cell[399642, 7329, 224, 5, 22, "DetailNotes",
 CellID->179982450],
Cell[399869, 7336, 207, 3, 22, "DetailNotes",
 CellID->360131396],
Cell[400079, 7341, 237, 4, 22, "DetailNotes",
 CellID->125217155],
Cell[400319, 7347, 237, 4, 22, "DetailNotes",
 CellID->557237991],
Cell[400559, 7353, 335, 7, 22, "DetailNotes",
 CellID->222268009],
Cell[400897, 7362, 243, 4, 22, "DetailNotes",
 CellID->692576260],
Cell[401143, 7368, 273, 4, 22, "DetailNotes",
 CellID->326148413],
Cell[401419, 7374, 276, 6, 22, "DetailNotes",
 CellID->441499962],
Cell[401698, 7382, 232, 4, 22, "DetailNotes",
 CellID->322377862],
Cell[401933, 7388, 252, 6, 22, "DetailNotes",
 CellID->216158987],
Cell[402188, 7396, 235, 4, 22, "DetailNotes",
 CellID->33914372],
Cell[402426, 7402, 226, 5, 22, "DetailNotes",
 CellID->436928343],
Cell[402655, 7409, 213, 3, 22, "DetailNotes",
 CellID->449257138],
Cell[402871, 7414, 181, 3, 22, "DetailNotes",
 CellID->81854743],
Cell[403055, 7419, 227, 4, 22, "DetailNotes",
 CellID->428535100],
Cell[403285, 7425, 631, 18, 39, "DetailNotes",
 CellID->63845224],
Cell[403919, 7445, 528, 9, 37, "DetailNotes",
 CellID->358187092],
Cell[404450, 7456, 226, 4, 22, "DetailNotes",
 CellID->545567828],
Cell[404679, 7462, 163, 3, 22, "DetailNotes",
 CellID->197933263],
Cell[404845, 7467, 1184, 17, 112, "DetailNotes",
 CellID->22859114],
Cell[406032, 7486, 191, 3, 22, "DetailNotes",
 CellID->352256418],
Cell[406226, 7491, 481, 8, 37, "DetailNotes",
 CellID->94114928],
Cell[406710, 7501, 166, 3, 22, "DetailNotes",
 CellID->53640909],
Cell[406879, 7506, 430, 8, 37, "DetailNotes",
 CellID->8813334],
Cell[407312, 7516, 170, 3, 22, "DetailNotes",
 CellID->349164548],
Cell[407485, 7521, 312, 6, 22, "DetailNotes",
 CellID->151919596]
}, Open  ]],
Cell[CellGroupData[{
Cell[407834, 7532, 37, 0, 120, "ControlSuggestionsSection"],
Cell[407874, 7534, 353, 9, 22, "ControlSuggestions",
 CellTags->"ResizeImages"],
Cell[408230, 7545, 678, 16, 22, "ControlSuggestions",
 CellTags->"RotateAndZoomIn3D"],
Cell[408911, 7563, 340, 11, 22, "ControlSuggestions",
 CellTags->"DragLocators"],
Cell[409254, 7576, 637, 15, 22, "ControlSuggestions",
 CellTags->"CreateAndDeleteLocators"],
Cell[409894, 7593, 887, 22, 22, "ControlSuggestions",
 CellTags->"SliderZoom"],
Cell[410784, 7617, 369, 9, 22, "ControlSuggestions",
 CellTags->"GamepadControls"],
Cell[411156, 7628, 1529, 32, 22, "ControlSuggestions",
 CellTags->"AutomaticAnimation"],
Cell[412688, 7662, 1001, 23, 22, "ControlSuggestions",
 CellTags->"BookmarkAnimation"]
}, Open  ]],
Cell[CellGroupData[{
Cell[413726, 7690, 30, 0, 152, "SearchTermsSection"],
Cell[413759, 7692, 137, 2, 22, "SearchTerms",
 CellID->162914178],
Cell[413899, 7696, 149, 2, 22, "SearchTerms",
 CellID->56565974],
Cell[414051, 7700, 232, 4, 22, "SearchTerms",
 CellID->802847518],
Cell[414286, 7706, 134, 2, 22, "SearchTerms",
 CellID->113852747],
Cell[414423, 7710, 132, 2, 22, "SearchTerms",
 CellID->487203311],
Cell[414558, 7714, 117, 2, 22, "SearchTerms",
 CellID->744877182],
Cell[414678, 7718, 170, 3, 22, "SearchTerms",
 CellID->129916012],
Cell[414851, 7723, 170, 3, 22, "SearchTerms",
 CellID->338965414],
Cell[415024, 7728, 118, 2, 22, "SearchTerms",
 CellID->415746415],
Cell[415145, 7732, 125, 2, 22, "SearchTerms",
 CellID->911981638],
Cell[415273, 7736, 126, 2, 22, "SearchTerms",
 CellID->147939563],
Cell[415402, 7740, 121, 2, 22, "SearchTerms",
 CellID->462958848],
Cell[415526, 7744, 138, 2, 22, "SearchTerms",
 CellID->331133282]
}, Open  ]],
Cell[415679, 7749, 31, 0, 138, "RelatedLinksSection"],
Cell[CellGroupData[{
Cell[415735, 7753, 25, 0, 124, "AuthorSection"],
Cell[415763, 7755, 385, 10, 22, "Author"],
Cell[416151, 7767, 611, 14, 22, "Author",
 CellID->391008063]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
